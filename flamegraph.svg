<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="517.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="17677056728"><g><title>&lt;poros::api::http::health::__path_get_health_endpoint_factory as utoipa::Path&gt;::operation (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="453" width="0.0344%" height="15" fill="rgb(227,0,7)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="463.50"></text></g><g><title>utoipa::openapi::path::OperationBuilder::operation_id (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="437" width="0.0344%" height="15" fill="rgb(217,0,24)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="421" width="0.0344%" height="15" fill="rgb(221,193,54)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="431.50"></text></g><g><title>utoipa::openapi::path::OperationBuilder::operation_id::_{{closure}} (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="405" width="0.0344%" height="15" fill="rgb(248,212,6)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="389" width="0.0344%" height="15" fill="rgb(208,68,35)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="373" width="0.0344%" height="15" fill="rgb(232,128,0)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="357" width="0.0344%" height="15" fill="rgb(207,160,47)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="341" width="0.0344%" height="15" fill="rgb(228,23,34)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="325" width="0.0344%" height="15" fill="rgb(218,30,26)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="309" width="0.0344%" height="15" fill="rgb(220,122,19)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="293" width="0.0344%" height="15" fill="rgb(250,228,42)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="277" width="0.0344%" height="15" fill="rgb(240,193,28)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="261" width="0.0344%" height="15" fill="rgb(216,20,37)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="245" width="0.0344%" height="15" fill="rgb(206,188,39)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="229" width="0.0344%" height="15" fill="rgb(217,207,13)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="213" width="0.0344%" height="15" fill="rgb(231,73,38)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="197" width="0.0344%" height="15" fill="rgb(225,20,46)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="207.50"></text></g><g><title>alloc::alloc::alloc (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="181" width="0.0344%" height="15" fill="rgb(210,31,41)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="191.50"></text></g><g><title>malloc (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="165" width="0.0344%" height="15" fill="rgb(221,200,47)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="175.50"></text></g><g><title>_int_malloc (6,082,435 samples, 0.03%)</title><rect x="0.0133%" y="149" width="0.0344%" height="15" fill="rgb(226,26,5)" fg:x="2349307" fg:w="6082435"/><text x="0.2633%" y="159.50"></text></g><g><title>[poros] (1,888,440 samples, 0.01%)</title><rect x="0.0477%" y="453" width="0.0107%" height="15" fill="rgb(249,33,26)" fg:x="8431742" fg:w="1888440"/><text x="0.2977%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,337,084 samples, 0.01%)</title><rect x="0.0605%" y="421" width="0.0132%" height="15" fill="rgb(235,183,28)" fg:x="10697459" fg:w="2337084"/><text x="0.3105%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,337,084 samples, 0.01%)</title><rect x="0.0605%" y="405" width="0.0132%" height="15" fill="rgb(221,5,38)" fg:x="10697459" fg:w="2337084"/><text x="0.3105%" y="415.50"></text></g><g><title>tokio::task::local::Shared::schedule::_{{closure}} (2,337,084 samples, 0.01%)</title><rect x="0.0605%" y="389" width="0.0132%" height="15" fill="rgb(247,18,42)" fg:x="10697459" fg:w="2337084"/><text x="0.3105%" y="399.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (2,337,084 samples, 0.01%)</title><rect x="0.0605%" y="373" width="0.0132%" height="15" fill="rgb(241,131,45)" fg:x="10697459" fg:w="2337084"/><text x="0.3105%" y="383.50"></text></g><g><title>[poros] (4,817,167 samples, 0.03%)</title><rect x="0.0605%" y="437" width="0.0273%" height="15" fill="rgb(249,31,29)" fg:x="10697459" fg:w="4817167"/><text x="0.3105%" y="447.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (2,480,083 samples, 0.01%)</title><rect x="0.0737%" y="421" width="0.0140%" height="15" fill="rgb(225,111,53)" fg:x="13034543" fg:w="2480083"/><text x="0.3237%" y="431.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::process_expiration (2,480,083 samples, 0.01%)</title><rect x="0.0737%" y="405" width="0.0140%" height="15" fill="rgb(238,160,17)" fg:x="13034543" fg:w="2480083"/><text x="0.3237%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="421" width="0.0118%" height="15" fill="rgb(214,148,48)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="431.50"></text></g><g><title>core::ptr::write (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="405" width="0.0118%" height="15" fill="rgb(232,36,49)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="415.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="389" width="0.0118%" height="15" fill="rgb(209,103,24)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="399.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="373" width="0.0118%" height="15" fill="rgb(229,88,8)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="383.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="357" width="0.0118%" height="15" fill="rgb(213,181,19)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="367.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="341" width="0.0118%" height="15" fill="rgb(254,191,54)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="351.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="325" width="0.0118%" height="15" fill="rgb(241,83,37)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="335.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="309" width="0.0118%" height="15" fill="rgb(233,36,39)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="319.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="293" width="0.0118%" height="15" fill="rgb(226,3,54)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="303.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="277" width="0.0118%" height="15" fill="rgb(245,192,40)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="287.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="261" width="0.0118%" height="15" fill="rgb(238,167,29)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="271.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="245" width="0.0118%" height="15" fill="rgb(232,182,51)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="255.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="229" width="0.0118%" height="15" fill="rgb(231,60,39)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="239.50"></text></g><g><title>[unknown] (2,092,380 samples, 0.01%)</title><rect x="0.0878%" y="213" width="0.0118%" height="15" fill="rgb(208,69,12)" fg:x="15514626" fg:w="2092380"/><text x="0.3378%" y="223.50"></text></g><g><title>[unknown] (2,544,179 samples, 0.01%)</title><rect x="0.0878%" y="437" width="0.0144%" height="15" fill="rgb(235,93,37)" fg:x="15514626" fg:w="2544179"/><text x="0.3378%" y="447.50"></text></g><g><title>mio::poll::Poll::poll (4,163,197 samples, 0.02%)</title><rect x="0.1079%" y="437" width="0.0236%" height="15" fill="rgb(213,116,39)" fg:x="19065108" fg:w="4163197"/><text x="0.3579%" y="447.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (4,163,197 samples, 0.02%)</title><rect x="0.1079%" y="421" width="0.0236%" height="15" fill="rgb(222,207,29)" fg:x="19065108" fg:w="4163197"/><text x="0.3579%" y="431.50"></text></g><g><title>epoll_wait (2,776,489 samples, 0.02%)</title><rect x="0.1157%" y="405" width="0.0157%" height="15" fill="rgb(206,96,30)" fg:x="20451816" fg:w="2776489"/><text x="0.3657%" y="415.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (4,955,513 samples, 0.03%)</title><rect x="0.1314%" y="437" width="0.0280%" height="15" fill="rgb(218,138,4)" fg:x="23228305" fg:w="4955513"/><text x="0.3814%" y="447.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (4,955,513 samples, 0.03%)</title><rect x="0.1314%" y="421" width="0.0280%" height="15" fill="rgb(250,191,14)" fg:x="23228305" fg:w="4955513"/><text x="0.3814%" y="431.50"></text></g><g><title>std::sys::fs::unix::File::write (4,955,513 samples, 0.03%)</title><rect x="0.1314%" y="405" width="0.0280%" height="15" fill="rgb(239,60,40)" fg:x="23228305" fg:w="4955513"/><text x="0.3814%" y="415.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (4,955,513 samples, 0.03%)</title><rect x="0.1314%" y="389" width="0.0280%" height="15" fill="rgb(206,27,48)" fg:x="23228305" fg:w="4955513"/><text x="0.3814%" y="399.50"></text></g><g><title>__GI___libc_write (4,955,513 samples, 0.03%)</title><rect x="0.1314%" y="373" width="0.0280%" height="15" fill="rgb(225,35,8)" fg:x="23228305" fg:w="4955513"/><text x="0.3814%" y="383.50"></text></g><g><title>__syscall_cancel (4,723,935 samples, 0.03%)</title><rect x="0.1327%" y="357" width="0.0267%" height="15" fill="rgb(250,213,24)" fg:x="23459883" fg:w="4723935"/><text x="0.3827%" y="367.50"></text></g><g><title>__internal_syscall_cancel (4,723,935 samples, 0.03%)</title><rect x="0.1327%" y="341" width="0.0267%" height="15" fill="rgb(247,123,22)" fg:x="23459883" fg:w="4723935"/><text x="0.3827%" y="351.50"></text></g><g><title>__syscall_cancel_arch_end (1,903,326 samples, 0.01%)</title><rect x="0.1487%" y="325" width="0.0108%" height="15" fill="rgb(231,138,38)" fg:x="26280492" fg:w="1903326"/><text x="0.3987%" y="335.50"></text></g><g><title>[unknown] (1,903,326 samples, 0.01%)</title><rect x="0.1487%" y="309" width="0.0108%" height="15" fill="rgb(231,145,46)" fg:x="26280492" fg:w="1903326"/><text x="0.3987%" y="319.50"></text></g><g><title>[unknown] (1,903,326 samples, 0.01%)</title><rect x="0.1487%" y="293" width="0.0108%" height="15" fill="rgb(251,118,11)" fg:x="26280492" fg:w="1903326"/><text x="0.3987%" y="303.50"></text></g><g><title>[unknown] (1,903,326 samples, 0.01%)</title><rect x="0.1487%" y="277" width="0.0108%" height="15" fill="rgb(217,147,25)" fg:x="26280492" fg:w="1903326"/><text x="0.3987%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (2,912,811 samples, 0.02%)</title><rect x="0.1600%" y="437" width="0.0165%" height="15" fill="rgb(247,81,37)" fg:x="28275758" fg:w="2912811"/><text x="0.4100%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (1,975,812 samples, 0.01%)</title><rect x="0.1653%" y="421" width="0.0112%" height="15" fill="rgb(209,12,38)" fg:x="29212757" fg:w="1975812"/><text x="0.4153%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park::_{{closure}} (1,975,812 samples, 0.01%)</title><rect x="0.1653%" y="405" width="0.0112%" height="15" fill="rgb(227,1,9)" fg:x="29212757" fg:w="1975812"/><text x="0.4153%" y="415.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1,779,057 samples, 0.01%)</title><rect x="0.1768%" y="437" width="0.0101%" height="15" fill="rgb(248,47,43)" fg:x="31247216" fg:w="1779057"/><text x="0.4268%" y="447.50"></text></g><g><title>[unknown] (23,475,456 samples, 0.13%)</title><rect x="0.0584%" y="453" width="0.1328%" height="15" fill="rgb(221,10,30)" fg:x="10320182" fg:w="23475456"/><text x="0.3084%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;actix_router::resource::ResourceDef&gt; (3,197,229 samples, 0.02%)</title><rect x="0.2011%" y="453" width="0.0181%" height="15" fill="rgb(210,229,1)" fg:x="35556167" fg:w="3197229"/><text x="0.4511%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Regex&gt; (3,197,229 samples, 0.02%)</title><rect x="0.2011%" y="437" width="0.0181%" height="15" fill="rgb(222,148,37)" fg:x="35556167" fg:w="3197229"/><text x="0.4511%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (3,197,229 samples, 0.02%)</title><rect x="0.2011%" y="421" width="0.0181%" height="15" fill="rgb(234,67,33)" fg:x="35556167" fg:w="3197229"/><text x="0.4511%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,197,229 samples, 0.02%)</title><rect x="0.2011%" y="405" width="0.0181%" height="15" fill="rgb(247,98,35)" fg:x="35556167" fg:w="3197229"/><text x="0.4511%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;utoipa::openapi::schema::Array&gt; (2,866,013 samples, 0.02%)</title><rect x="0.2211%" y="453" width="0.0162%" height="15" fill="rgb(247,138,52)" fg:x="39076040" fg:w="2866013"/><text x="0.4711%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;utoipa::openapi::schema::ArrayItems&gt; (2,866,013 samples, 0.02%)</title><rect x="0.2211%" y="437" width="0.0162%" height="15" fill="rgb(213,79,30)" fg:x="39076040" fg:w="2866013"/><text x="0.4711%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;utoipa::openapi::RefOr&lt;utoipa::openapi::schema::Schema&gt;&gt;&gt; (2,866,013 samples, 0.02%)</title><rect x="0.2211%" y="421" width="0.0162%" height="15" fill="rgb(246,177,23)" fg:x="39076040" fg:w="2866013"/><text x="0.4711%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,866,013 samples, 0.02%)</title><rect x="0.2211%" y="405" width="0.0162%" height="15" fill="rgb(230,62,27)" fg:x="39076040" fg:w="2866013"/><text x="0.4711%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,866,013 samples, 0.02%)</title><rect x="0.2211%" y="389" width="0.0162%" height="15" fill="rgb(216,154,8)" fg:x="39076040" fg:w="2866013"/><text x="0.4711%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2,866,013 samples, 0.02%)</title><rect x="0.2211%" y="373" width="0.0162%" height="15" fill="rgb(244,35,45)" fg:x="39076040" fg:w="2866013"/><text x="0.4711%" y="383.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2,866,013 samples, 0.02%)</title><rect x="0.2211%" y="357" width="0.0162%" height="15" fill="rgb(251,115,12)" fg:x="39076040" fg:w="2866013"/><text x="0.4711%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,940,857 samples, 0.02%)</title><rect x="0.2470%" y="453" width="0.0223%" height="15" fill="rgb(240,54,50)" fg:x="43659315" fg:w="3940857"/><text x="0.4970%" y="463.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (2,665,021 samples, 0.02%)</title><rect x="0.2834%" y="453" width="0.0151%" height="15" fill="rgb(233,84,52)" fg:x="50105375" fg:w="2665021"/><text x="0.5334%" y="463.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_processing_scheduled_tasks (2,045,710 samples, 0.01%)</title><rect x="0.2985%" y="453" width="0.0116%" height="15" fill="rgb(207,117,47)" fg:x="52770396" fg:w="2045710"/><text x="0.5485%" y="463.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (3,493,505 samples, 0.02%)</title><rect x="0.3134%" y="453" width="0.0198%" height="15" fill="rgb(249,43,39)" fg:x="55394548" fg:w="3493505"/><text x="0.5634%" y="463.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (3,491,580 samples, 0.02%)</title><rect x="0.3134%" y="437" width="0.0198%" height="15" fill="rgb(209,38,44)" fg:x="55396473" fg:w="3491580"/><text x="0.5634%" y="447.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (3,491,580 samples, 0.02%)</title><rect x="0.3134%" y="421" width="0.0198%" height="15" fill="rgb(236,212,23)" fg:x="55396473" fg:w="3491580"/><text x="0.5634%" y="431.50"></text></g><g><title>tokio::time::clock::Clock::now (3,491,580 samples, 0.02%)</title><rect x="0.3134%" y="405" width="0.0198%" height="15" fill="rgb(242,79,21)" fg:x="55396473" fg:w="3491580"/><text x="0.5634%" y="415.50"></text></g><g><title>tokio::time::clock::now (3,491,580 samples, 0.02%)</title><rect x="0.3134%" y="389" width="0.0198%" height="15" fill="rgb(211,96,35)" fg:x="55396473" fg:w="3491580"/><text x="0.5634%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,491,580 samples, 0.02%)</title><rect x="0.3134%" y="373" width="0.0198%" height="15" fill="rgb(253,215,40)" fg:x="55396473" fg:w="3491580"/><text x="0.5634%" y="383.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (3,491,580 samples, 0.02%)</title><rect x="0.3134%" y="357" width="0.0198%" height="15" fill="rgb(211,81,21)" fg:x="55396473" fg:w="3491580"/><text x="0.5634%" y="367.50"></text></g><g><title>actix-rt|system (59,853,329 samples, 0.34%)</title><rect x="0.0000%" y="469" width="0.3386%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="59853329"/><text x="0.2500%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2,380,210 samples, 0.01%)</title><rect x="0.3399%" y="453" width="0.0135%" height="15" fill="rgb(235,213,38)" fg:x="60090959" fg:w="2380210"/><text x="0.5899%" y="463.50"></text></g><g><title>&lt;poros::api::http::regex::Pattern as core::fmt::Debug&gt;::fmt (2,380,210 samples, 0.01%)</title><rect x="0.3399%" y="437" width="0.0135%" height="15" fill="rgb(237,122,38)" fg:x="60090959" fg:w="2380210"/><text x="0.5899%" y="447.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field3_finish (2,380,210 samples, 0.01%)</title><rect x="0.3399%" y="421" width="0.0135%" height="15" fill="rgb(244,218,35)" fg:x="60090959" fg:w="2380210"/><text x="0.5899%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12,585,430 samples, 0.07%)</title><rect x="0.3534%" y="453" width="0.0712%" height="15" fill="rgb(240,68,47)" fg:x="62471169" fg:w="12585430"/><text x="0.6034%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="437" width="0.0193%" height="15" fill="rgb(210,16,53)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="421" width="0.0193%" height="15" fill="rgb(235,124,12)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="405" width="0.0193%" height="15" fill="rgb(224,169,11)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="389" width="0.0193%" height="15" fill="rgb(250,166,2)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="373" width="0.0193%" height="15" fill="rgb(242,216,29)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="357" width="0.0193%" height="15" fill="rgb(230,116,27)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="341" width="0.0193%" height="15" fill="rgb(228,99,48)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="325" width="0.0193%" height="15" fill="rgb(253,11,6)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="309" width="0.0193%" height="15" fill="rgb(247,143,39)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="319.50"></text></g><g><title>alloc::alloc::alloc (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="293" width="0.0193%" height="15" fill="rgb(236,97,10)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="303.50"></text></g><g><title>malloc (3,404,781 samples, 0.02%)</title><rect x="0.4053%" y="277" width="0.0193%" height="15" fill="rgb(233,208,19)" fg:x="71651818" fg:w="3404781"/><text x="0.6553%" y="287.50"></text></g><g><title>__memmove_avx_unaligned (6,197,283 samples, 0.04%)</title><rect x="0.4246%" y="357" width="0.0351%" height="15" fill="rgb(216,164,2)" fg:x="75056599" fg:w="6197283"/><text x="0.6746%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (13,204,917 samples, 0.07%)</title><rect x="0.4246%" y="453" width="0.0747%" height="15" fill="rgb(220,129,5)" fg:x="75056599" fg:w="13204917"/><text x="0.6746%" y="463.50"></text></g><g><title>alloc::string::String::push_str (13,204,917 samples, 0.07%)</title><rect x="0.4246%" y="437" width="0.0747%" height="15" fill="rgb(242,17,10)" fg:x="75056599" fg:w="13204917"/><text x="0.6746%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13,204,917 samples, 0.07%)</title><rect x="0.4246%" y="421" width="0.0747%" height="15" fill="rgb(242,107,0)" fg:x="75056599" fg:w="13204917"/><text x="0.6746%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13,204,917 samples, 0.07%)</title><rect x="0.4246%" y="405" width="0.0747%" height="15" fill="rgb(251,28,31)" fg:x="75056599" fg:w="13204917"/><text x="0.6746%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13,204,917 samples, 0.07%)</title><rect x="0.4246%" y="389" width="0.0747%" height="15" fill="rgb(233,223,10)" fg:x="75056599" fg:w="13204917"/><text x="0.6746%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13,204,917 samples, 0.07%)</title><rect x="0.4246%" y="373" width="0.0747%" height="15" fill="rgb(215,21,27)" fg:x="75056599" fg:w="13204917"/><text x="0.6746%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (7,007,634 samples, 0.04%)</title><rect x="0.4597%" y="357" width="0.0396%" height="15" fill="rgb(232,23,21)" fg:x="81253882" fg:w="7007634"/><text x="0.7097%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,568,437 samples, 0.07%)</title><rect x="0.6755%" y="389" width="0.0654%" height="15" fill="rgb(244,5,23)" fg:x="119409517" fg:w="11568437"/><text x="0.9255%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (11,568,437 samples, 0.07%)</title><rect x="0.6755%" y="373" width="0.0654%" height="15" fill="rgb(226,81,46)" fg:x="119409517" fg:w="11568437"/><text x="0.9255%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11,568,437 samples, 0.07%)</title><rect x="0.6755%" y="357" width="0.0654%" height="15" fill="rgb(247,70,30)" fg:x="119409517" fg:w="11568437"/><text x="0.9255%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,357,039 samples, 0.01%)</title><rect x="0.7409%" y="389" width="0.0133%" height="15" fill="rgb(212,68,19)" fg:x="130977954" fg:w="2357039"/><text x="0.9909%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,357,039 samples, 0.01%)</title><rect x="0.7409%" y="373" width="0.0133%" height="15" fill="rgb(240,187,13)" fg:x="130977954" fg:w="2357039"/><text x="0.9909%" y="383.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (2,357,039 samples, 0.01%)</title><rect x="0.7409%" y="357" width="0.0133%" height="15" fill="rgb(223,113,26)" fg:x="130977954" fg:w="2357039"/><text x="0.9909%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2,357,039 samples, 0.01%)</title><rect x="0.7409%" y="341" width="0.0133%" height="15" fill="rgb(206,192,2)" fg:x="130977954" fg:w="2357039"/><text x="0.9909%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48,954,851 samples, 0.28%)</title><rect x="0.4993%" y="453" width="0.2769%" height="15" fill="rgb(241,108,4)" fg:x="88261516" fg:w="48954851"/><text x="0.7493%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (21,728,885 samples, 0.12%)</title><rect x="0.6533%" y="437" width="0.1229%" height="15" fill="rgb(247,173,49)" fg:x="115487482" fg:w="21728885"/><text x="0.9033%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (21,728,885 samples, 0.12%)</title><rect x="0.6533%" y="421" width="0.1229%" height="15" fill="rgb(224,114,35)" fg:x="115487482" fg:w="21728885"/><text x="0.9033%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (21,728,885 samples, 0.12%)</title><rect x="0.6533%" y="405" width="0.1229%" height="15" fill="rgb(245,159,27)" fg:x="115487482" fg:w="21728885"/><text x="0.9033%" y="415.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3,881,374 samples, 0.02%)</title><rect x="0.7543%" y="389" width="0.0220%" height="15" fill="rgb(245,172,44)" fg:x="133334993" fg:w="3881374"/><text x="1.0043%" y="399.50"></text></g><g><title>&lt;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as arrow_array::array::Array&gt;::as_any (15,696,353 samples, 0.09%)</title><rect x="0.7762%" y="453" width="0.0888%" height="15" fill="rgb(236,23,11)" fg:x="137216367" fg:w="15696353"/><text x="1.0262%" y="463.50"></text></g><g><title>&lt;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as arrow_array::array::Array&gt;::len (3,907,124 samples, 0.02%)</title><rect x="0.8650%" y="453" width="0.0221%" height="15" fill="rgb(205,117,38)" fg:x="152912720" fg:w="3907124"/><text x="1.1150%" y="463.50"></text></g><g><title>&lt;arrow_buffer::buffer::offset::OffsetBuffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3,907,124 samples, 0.02%)</title><rect x="0.8650%" y="437" width="0.0221%" height="15" fill="rgb(237,72,25)" fg:x="152912720" fg:w="3907124"/><text x="1.1150%" y="447.50"></text></g><g><title>&lt;arrow_buffer::buffer::scalar::ScalarBuffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3,907,124 samples, 0.02%)</title><rect x="0.8650%" y="421" width="0.0221%" height="15" fill="rgb(244,70,9)" fg:x="152912720" fg:w="3907124"/><text x="1.1150%" y="431.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::len (3,907,124 samples, 0.02%)</title><rect x="0.8650%" y="405" width="0.0221%" height="15" fill="rgb(217,125,39)" fg:x="152912720" fg:w="3907124"/><text x="1.1150%" y="415.50"></text></g><g><title>&lt;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as arrow_array::array::Array&gt;::slice (27,415,048 samples, 0.16%)</title><rect x="0.8871%" y="453" width="0.1551%" height="15" fill="rgb(235,36,10)" fg:x="156819844" fg:w="27415048"/><text x="1.1371%" y="463.50"></text></g><g><title>&lt;arrow_buffer::buffer::immutable::Buffer as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (3,082,005 samples, 0.02%)</title><rect x="1.0422%" y="453" width="0.0174%" height="15" fill="rgb(251,123,47)" fg:x="184234892" fg:w="3082005"/><text x="1.2922%" y="463.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (2,264,735 samples, 0.01%)</title><rect x="1.0597%" y="453" width="0.0128%" height="15" fill="rgb(221,13,13)" fg:x="187316897" fg:w="2264735"/><text x="1.3097%" y="463.50"></text></g><g><title>&lt;poros::servers::full_server::FullServer as poros::servers::server::PorosServer&gt;::bootstrap_server::_{{closure}}::_{{closure}}::_{{closure}} (3,307,507 samples, 0.02%)</title><rect x="1.0855%" y="437" width="0.0187%" height="15" fill="rgb(238,131,9)" fg:x="191885372" fg:w="3307507"/><text x="1.3355%" y="447.50"></text></g><g><title>tokio::macros::support::poll_budget_available (3,307,507 samples, 0.02%)</title><rect x="1.0855%" y="421" width="0.0187%" height="15" fill="rgb(211,50,8)" fg:x="191885372" fg:w="3307507"/><text x="1.3355%" y="431.50"></text></g><g><title>tokio::task::coop::poll_budget_available (3,307,507 samples, 0.02%)</title><rect x="1.0855%" y="405" width="0.0187%" height="15" fill="rgb(245,182,24)" fg:x="191885372" fg:w="3307507"/><text x="1.3355%" y="415.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (8,875,736 samples, 0.05%)</title><rect x="1.0725%" y="453" width="0.0502%" height="15" fill="rgb(242,14,37)" fg:x="189581632" fg:w="8875736"/><text x="1.3225%" y="463.50"></text></g><g><title>tonic::transport::server::serve_connection::_{{closure}}::_{{closure}} (3,264,489 samples, 0.02%)</title><rect x="1.1042%" y="437" width="0.0185%" height="15" fill="rgb(246,228,12)" fg:x="195192879" fg:w="3264489"/><text x="1.3542%" y="447.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3,264,489 samples, 0.02%)</title><rect x="1.1042%" y="421" width="0.0185%" height="15" fill="rgb(213,55,15)" fg:x="195192879" fg:w="3264489"/><text x="1.3542%" y="431.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,264,489 samples, 0.02%)</title><rect x="1.1042%" y="405" width="0.0185%" height="15" fill="rgb(209,9,3)" fg:x="195192879" fg:w="3264489"/><text x="1.3542%" y="415.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (3,264,489 samples, 0.02%)</title><rect x="1.1042%" y="389" width="0.0185%" height="15" fill="rgb(230,59,30)" fg:x="195192879" fg:w="3264489"/><text x="1.3542%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15,632,724 samples, 0.09%)</title><rect x="1.2088%" y="437" width="0.0884%" height="15" fill="rgb(209,121,21)" fg:x="213671482" fg:w="15632724"/><text x="1.4588%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7,853,427 samples, 0.04%)</title><rect x="1.2528%" y="421" width="0.0444%" height="15" fill="rgb(220,109,13)" fg:x="221450779" fg:w="7853427"/><text x="1.5028%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69,452,321 samples, 0.39%)</title><rect x="1.1227%" y="453" width="0.3929%" height="15" fill="rgb(232,18,1)" fg:x="198457368" fg:w="69452321"/><text x="1.3727%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (38,605,483 samples, 0.22%)</title><rect x="1.2972%" y="437" width="0.2184%" height="15" fill="rgb(215,41,42)" fg:x="229304206" fg:w="38605483"/><text x="1.5472%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold (3,926,212 samples, 0.02%)</title><rect x="1.6485%" y="437" width="0.0222%" height="15" fill="rgb(224,123,36)" fg:x="291411115" fg:w="3926212"/><text x="1.8985%" y="447.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (7,850,399 samples, 0.04%)</title><rect x="1.6707%" y="373" width="0.0444%" height="15" fill="rgb(240,125,3)" fg:x="295337327" fg:w="7850399"/><text x="1.9207%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (39,137,548 samples, 0.22%)</title><rect x="1.6707%" y="405" width="0.2214%" height="15" fill="rgb(205,98,50)" fg:x="295337327" fg:w="39137548"/><text x="1.9207%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (39,137,548 samples, 0.22%)</title><rect x="1.6707%" y="389" width="0.2214%" height="15" fill="rgb(205,185,37)" fg:x="295337327" fg:w="39137548"/><text x="1.9207%" y="399.50"></text></g><g><title>core::ptr::write (31,287,149 samples, 0.18%)</title><rect x="1.7151%" y="373" width="0.1770%" height="15" fill="rgb(238,207,15)" fg:x="303187726" fg:w="31287149"/><text x="1.9651%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (58,689,539 samples, 0.33%)</title><rect x="1.6707%" y="421" width="0.3320%" height="15" fill="rgb(213,199,42)" fg:x="295337327" fg:w="58689539"/><text x="1.9207%" y="431.50"></text></g><g><title>poros::application::actors::parser::apply_regex_pattern::_{{closure}} (19,551,991 samples, 0.11%)</title><rect x="1.8921%" y="405" width="0.1106%" height="15" fill="rgb(235,201,11)" fg:x="334474875" fg:w="19551991"/><text x="2.1421%" y="415.50"></text></g><g><title>arrow_array::array::byte_array::GenericByteArray&lt;T&gt;::value (19,551,991 samples, 0.11%)</title><rect x="1.8921%" y="389" width="0.1106%" height="15" fill="rgb(207,46,11)" fg:x="334474875" fg:w="19551991"/><text x="2.1421%" y="399.50"></text></g><g><title>arrow_array::array::byte_array::GenericByteArray&lt;T&gt;::value_unchecked (3,881,398 samples, 0.02%)</title><rect x="1.9808%" y="373" width="0.0220%" height="15" fill="rgb(241,35,35)" fg:x="350145468" fg:w="3881398"/><text x="2.2308%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (105,707,615 samples, 0.60%)</title><rect x="1.5156%" y="453" width="0.5980%" height="15" fill="rgb(243,32,47)" fg:x="267909689" fg:w="105707615"/><text x="1.7656%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (78,279,977 samples, 0.44%)</title><rect x="1.6707%" y="437" width="0.4428%" height="15" fill="rgb(247,202,23)" fg:x="295337327" fg:w="78279977"/><text x="1.9207%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (19,590,438 samples, 0.11%)</title><rect x="2.0027%" y="421" width="0.1108%" height="15" fill="rgb(219,102,11)" fg:x="354026866" fg:w="19590438"/><text x="2.2527%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (19,590,438 samples, 0.11%)</title><rect x="2.0027%" y="405" width="0.1108%" height="15" fill="rgb(243,110,44)" fg:x="354026866" fg:w="19590438"/><text x="2.2527%" y="415.50"></text></g><g><title>&lt;&amp;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as arrow_array::array::ArrayAccessor&gt;::value_unchecked (81,414,851 samples, 0.46%)</title><rect x="2.2897%" y="421" width="0.4606%" height="15" fill="rgb(222,74,54)" fg:x="404747619" fg:w="81414851"/><text x="2.5397%" y="431.50"></text></g><g><title>arrow_array::array::byte_array::GenericByteArray&lt;T&gt;::value_unchecked (81,414,851 samples, 0.46%)</title><rect x="2.2897%" y="405" width="0.4606%" height="15" fill="rgb(216,99,12)" fg:x="404747619" fg:w="81414851"/><text x="2.5397%" y="415.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::as_ptr (19,214,035 samples, 0.11%)</title><rect x="2.6416%" y="389" width="0.1087%" height="15" fill="rgb(226,22,26)" fg:x="466948435" fg:w="19214035"/><text x="2.8916%" y="399.50"></text></g><g><title>[unknown] (4,390,216 samples, 0.02%)</title><rect x="2.7502%" y="421" width="0.0248%" height="15" fill="rgb(217,163,10)" fg:x="486162470" fg:w="4390216"/><text x="3.0002%" y="431.50"></text></g><g><title>[unknown] (4,390,216 samples, 0.02%)</title><rect x="2.7502%" y="405" width="0.0248%" height="15" fill="rgb(213,25,53)" fg:x="486162470" fg:w="4390216"/><text x="3.0002%" y="415.50"></text></g><g><title>[unknown] (4,390,216 samples, 0.02%)</title><rect x="2.7502%" y="389" width="0.0248%" height="15" fill="rgb(252,105,26)" fg:x="486162470" fg:w="4390216"/><text x="3.0002%" y="399.50"></text></g><g><title>[unknown] (4,390,216 samples, 0.02%)</title><rect x="2.7502%" y="373" width="0.0248%" height="15" fill="rgb(220,39,43)" fg:x="486162470" fg:w="4390216"/><text x="3.0002%" y="383.50"></text></g><g><title>&lt;arrow_array::iterator::ArrayIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (120,858,398 samples, 0.68%)</title><rect x="2.1136%" y="437" width="0.6837%" height="15" fill="rgb(229,68,48)" fg:x="373617304" fg:w="120858398"/><text x="2.3636%" y="447.50"></text></g><g><title>arrow_array::iterator::ArrayIter&lt;T&gt;::is_null (3,923,016 samples, 0.02%)</title><rect x="2.7751%" y="421" width="0.0222%" height="15" fill="rgb(252,8,32)" fg:x="490552686" fg:w="3923016"/><text x="3.0251%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3,923,016 samples, 0.02%)</title><rect x="2.7751%" y="405" width="0.0222%" height="15" fill="rgb(223,20,43)" fg:x="490552686" fg:w="3923016"/><text x="3.0251%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (287,396,928 samples, 1.63%)</title><rect x="2.7973%" y="229" width="1.6258%" height="15" fill="rgb(229,81,49)" fg:x="494475702" fg:w="287396928"/><text x="3.0473%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (287,396,928 samples, 1.63%)</title><rect x="2.7973%" y="213" width="1.6258%" height="15" fill="rgb(236,28,36)" fg:x="494475702" fg:w="287396928"/><text x="3.0473%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (287,396,928 samples, 1.63%)</title><rect x="2.7973%" y="197" width="1.6258%" height="15" fill="rgb(249,185,26)" fg:x="494475702" fg:w="287396928"/><text x="3.0473%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (287,396,928 samples, 1.63%)</title><rect x="2.7973%" y="181" width="1.6258%" height="15" fill="rgb(249,174,33)" fg:x="494475702" fg:w="287396928"/><text x="3.0473%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (252,586,425 samples, 1.43%)</title><rect x="2.9942%" y="165" width="1.4289%" height="15" fill="rgb(233,201,37)" fg:x="529286205" fg:w="252586425"/><text x="3.2442%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (252,586,425 samples, 1.43%)</title><rect x="2.9942%" y="149" width="1.4289%" height="15" fill="rgb(221,78,26)" fg:x="529286205" fg:w="252586425"/><text x="3.2442%" y="159.50"></text></g><g><title>alloc::alloc::alloc (252,586,425 samples, 1.43%)</title><rect x="2.9942%" y="133" width="1.4289%" height="15" fill="rgb(250,127,30)" fg:x="529286205" fg:w="252586425"/><text x="3.2442%" y="143.50"></text></g><g><title>malloc (252,586,425 samples, 1.43%)</title><rect x="2.9942%" y="117" width="1.4289%" height="15" fill="rgb(230,49,44)" fg:x="529286205" fg:w="252586425"/><text x="3.2442%" y="127.50"></text></g><g><title>__memmove_avx_unaligned (35,052,426 samples, 0.20%)</title><rect x="4.7090%" y="197" width="0.1983%" height="15" fill="rgb(229,67,23)" fg:x="832403942" fg:w="35052426"/><text x="4.9590%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (516,703,098 samples, 2.92%)</title><rect x="2.1136%" y="453" width="2.9230%" height="15" fill="rgb(249,83,47)" fg:x="373617304" fg:w="516703098"/><text x="2.3636%" y="463.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="437" width="2.2393%" height="15" fill="rgb(215,43,3)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="447.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="421" width="2.2393%" height="15" fill="rgb(238,154,13)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="431.50">c..</text></g><g><title>arrow_string::regexp::regexp_array_match::_{{closure}} (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="405" width="2.2393%" height="15" fill="rgb(219,56,2)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="415.50">a..</text></g><g><title>core::option::Option&lt;T&gt;::map (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="389" width="2.2393%" height="15" fill="rgb(233,0,4)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="399.50">c..</text></g><g><title>arrow_string::regexp::regexp_array_match::_{{closure}}::_{{closure}} (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="373" width="2.2393%" height="15" fill="rgb(235,30,7)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="383.50">a..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="357" width="2.2393%" height="15" fill="rgb(250,79,13)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="367.50">&lt;..</text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="341" width="2.2393%" height="15" fill="rgb(211,146,34)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="351.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="325" width="2.2393%" height="15" fill="rgb(228,22,38)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="335.50">&lt;..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="309" width="2.2393%" height="15" fill="rgb(235,168,5)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="319.50">a..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="293" width="2.2393%" height="15" fill="rgb(221,155,16)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="303.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="277" width="2.2393%" height="15" fill="rgb(215,215,53)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="287.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="261" width="2.2393%" height="15" fill="rgb(223,4,10)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="271.50">a..</text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (395,844,700 samples, 2.24%)</title><rect x="2.7973%" y="245" width="2.2393%" height="15" fill="rgb(234,103,6)" fg:x="494475702" fg:w="395844700"/><text x="3.0473%" y="255.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (108,447,772 samples, 0.61%)</title><rect x="4.4231%" y="229" width="0.6135%" height="15" fill="rgb(227,97,0)" fg:x="781872630" fg:w="108447772"/><text x="4.6731%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (108,447,772 samples, 0.61%)</title><rect x="4.4231%" y="213" width="0.6135%" height="15" fill="rgb(234,150,53)" fg:x="781872630" fg:w="108447772"/><text x="4.6731%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (22,864,034 samples, 0.13%)</title><rect x="4.9072%" y="197" width="0.1293%" height="15" fill="rgb(228,201,54)" fg:x="867456368" fg:w="22864034"/><text x="5.1572%" y="207.50"></text></g><g><title>arrow_data::data::ArrayData::validate_each_offset::_{{closure}} (38,431,172 samples, 0.22%)</title><rect x="5.2691%" y="357" width="0.2174%" height="15" fill="rgb(222,22,37)" fg:x="931423827" fg:w="38431172"/><text x="5.5191%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::scan::Scan&lt;I,St,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::scan::_{{closure}} (143,651,044 samples, 0.81%)</title><rect x="5.2348%" y="373" width="0.8126%" height="15" fill="rgb(237,53,32)" fg:x="925358546" fg:w="143651044"/><text x="5.4848%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (99,154,591 samples, 0.56%)</title><rect x="5.4865%" y="357" width="0.5609%" height="15" fill="rgb(233,25,53)" fg:x="969854999" fg:w="99154591"/><text x="5.7365%" y="367.50"></text></g><g><title>arrow_data::data::ArrayData::validate_each_offset::_{{closure}} (99,154,591 samples, 0.56%)</title><rect x="5.4865%" y="341" width="0.5609%" height="15" fill="rgb(210,40,34)" fg:x="969854999" fg:w="99154591"/><text x="5.7365%" y="351.50"></text></g><g><title>arrow_data::data::ArrayData::validate_utf8::_{{closure}} (90,939,706 samples, 0.51%)</title><rect x="5.5330%" y="325" width="0.5145%" height="15" fill="rgb(241,220,44)" fg:x="978069884" fg:w="90939706"/><text x="5.7830%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (42,355,407 samples, 0.24%)</title><rect x="5.8078%" y="309" width="0.2396%" height="15" fill="rgb(235,28,35)" fg:x="1026654183" fg:w="42355407"/><text x="6.0578%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (163,819,386 samples, 0.93%)</title><rect x="5.2348%" y="405" width="0.9267%" height="15" fill="rgb(210,56,17)" fg:x="925358546" fg:w="163819386"/><text x="5.4848%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (163,819,386 samples, 0.93%)</title><rect x="5.2348%" y="389" width="0.9267%" height="15" fill="rgb(224,130,29)" fg:x="925358546" fg:w="163819386"/><text x="5.4848%" y="399.50"></text></g><g><title>arrow_data::data::ArrayData::validate_each_offset::_{{closure}} (20,168,342 samples, 0.11%)</title><rect x="6.0474%" y="373" width="0.1141%" height="15" fill="rgb(235,212,8)" fg:x="1069009590" fg:w="20168342"/><text x="6.2974%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (11,128,587 samples, 0.06%)</title><rect x="6.0986%" y="357" width="0.0630%" height="15" fill="rgb(223,33,50)" fg:x="1078049345" fg:w="11128587"/><text x="6.3486%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (205,720,570 samples, 1.16%)</title><rect x="5.0366%" y="453" width="1.1638%" height="15" fill="rgb(219,149,13)" fg:x="890320402" fg:w="205720570"/><text x="5.2866%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (170,682,426 samples, 0.97%)</title><rect x="5.2348%" y="437" width="0.9656%" height="15" fill="rgb(250,156,29)" fg:x="925358546" fg:w="170682426"/><text x="5.4848%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (170,682,426 samples, 0.97%)</title><rect x="5.2348%" y="421" width="0.9656%" height="15" fill="rgb(216,193,19)" fg:x="925358546" fg:w="170682426"/><text x="5.4848%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,863,040 samples, 0.04%)</title><rect x="6.1615%" y="405" width="0.0388%" height="15" fill="rgb(216,135,14)" fg:x="1089177932" fg:w="6863040"/><text x="6.4115%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5,133,120 samples, 0.03%)</title><rect x="6.1713%" y="389" width="0.0290%" height="15" fill="rgb(241,47,5)" fg:x="1090907852" fg:w="5133120"/><text x="6.4213%" y="399.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,024,326 samples, 0.03%)</title><rect x="6.2004%" y="453" width="0.0284%" height="15" fill="rgb(233,42,35)" fg:x="1096040972" fg:w="5024326"/><text x="6.4504%" y="463.50"></text></g><g><title>tokio::task::local::LocalSet::run_until::_{{closure}} (5,024,326 samples, 0.03%)</title><rect x="6.2004%" y="437" width="0.0284%" height="15" fill="rgb(231,13,6)" fg:x="1096040972" fg:w="5024326"/><text x="6.4504%" y="447.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (3,253,307 samples, 0.02%)</title><rect x="6.2104%" y="421" width="0.0184%" height="15" fill="rgb(207,181,40)" fg:x="1097811991" fg:w="3253307"/><text x="6.4604%" y="431.50"></text></g><g><title>tokio::task::local::LocalSet::with (3,253,307 samples, 0.02%)</title><rect x="6.2104%" y="405" width="0.0184%" height="15" fill="rgb(254,173,49)" fg:x="1097811991" fg:w="3253307"/><text x="6.4604%" y="415.50"></text></g><g><title>[[vdso]] (3,253,307 samples, 0.02%)</title><rect x="6.2104%" y="389" width="0.0184%" height="15" fill="rgb(221,1,38)" fg:x="1097811991" fg:w="3253307"/><text x="6.4604%" y="399.50"></text></g><g><title>[unknown] (3,253,307 samples, 0.02%)</title><rect x="6.2104%" y="373" width="0.0184%" height="15" fill="rgb(206,124,46)" fg:x="1097811991" fg:w="3253307"/><text x="6.4604%" y="383.50"></text></g><g><title>[unknown] (3,253,307 samples, 0.02%)</title><rect x="6.2104%" y="357" width="0.0184%" height="15" fill="rgb(249,21,11)" fg:x="1097811991" fg:w="3253307"/><text x="6.4604%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1,934,836 samples, 0.01%)</title><rect x="6.2388%" y="405" width="0.0109%" height="15" fill="rgb(222,201,40)" fg:x="1102831887" fg:w="1934836"/><text x="6.4888%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1,934,836 samples, 0.01%)</title><rect x="6.2388%" y="389" width="0.0109%" height="15" fill="rgb(235,61,29)" fg:x="1102831887" fg:w="1934836"/><text x="6.4888%" y="399.50"></text></g><g><title>&lt;tracing::span::Span as core::clone::Clone&gt;::clone (2,090,002 samples, 0.01%)</title><rect x="6.2497%" y="357" width="0.0118%" height="15" fill="rgb(219,207,3)" fg:x="1104766723" fg:w="2090002"/><text x="6.4997%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,090,002 samples, 0.01%)</title><rect x="6.2497%" y="341" width="0.0118%" height="15" fill="rgb(222,56,46)" fg:x="1104766723" fg:w="2090002"/><text x="6.4997%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,927,633 samples, 0.01%)</title><rect x="6.2615%" y="341" width="0.0109%" height="15" fill="rgb(239,76,54)" fg:x="1106856725" fg:w="1927633"/><text x="6.5115%" y="351.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll2 (3,947,046 samples, 0.02%)</title><rect x="6.2615%" y="357" width="0.0223%" height="15" fill="rgb(231,124,27)" fg:x="1106856725" fg:w="3947046"/><text x="6.5115%" y="367.50"></text></g><g><title>&lt;h2::codec::Codec&lt;T,B&gt; as futures_core::stream::Stream&gt;::poll_next (2,019,413 samples, 0.01%)</title><rect x="6.2724%" y="341" width="0.0114%" height="15" fill="rgb(249,195,6)" fg:x="1108784358" fg:w="2019413"/><text x="6.5224%" y="351.50"></text></g><g><title>&lt;h2::codec::framed_read::FramedRead&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,019,413 samples, 0.01%)</title><rect x="6.2724%" y="325" width="0.0114%" height="15" fill="rgb(237,174,47)" fg:x="1108784358" fg:w="2019413"/><text x="6.5224%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,019,413 samples, 0.01%)</title><rect x="6.2724%" y="309" width="0.0114%" height="15" fill="rgb(206,201,31)" fg:x="1108784358" fg:w="2019413"/><text x="6.5224%" y="319.50"></text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (9,827,377 samples, 0.06%)</title><rect x="6.2388%" y="453" width="0.0556%" height="15" fill="rgb(231,57,52)" fg:x="1102831887" fg:w="9827377"/><text x="6.4888%" y="463.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (9,827,377 samples, 0.06%)</title><rect x="6.2388%" y="437" width="0.0556%" height="15" fill="rgb(248,177,22)" fg:x="1102831887" fg:w="9827377"/><text x="6.4888%" y="447.50"></text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (9,827,377 samples, 0.06%)</title><rect x="6.2388%" y="421" width="0.0556%" height="15" fill="rgb(215,211,37)" fg:x="1102831887" fg:w="9827377"/><text x="6.4888%" y="431.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (7,892,541 samples, 0.04%)</title><rect x="6.2497%" y="405" width="0.0446%" height="15" fill="rgb(241,128,51)" fg:x="1104766723" fg:w="7892541"/><text x="6.4997%" y="415.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_closed (7,892,541 samples, 0.04%)</title><rect x="6.2497%" y="389" width="0.0446%" height="15" fill="rgb(227,165,31)" fg:x="1104766723" fg:w="7892541"/><text x="6.4997%" y="399.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (7,892,541 samples, 0.04%)</title><rect x="6.2497%" y="373" width="0.0446%" height="15" fill="rgb(228,167,24)" fg:x="1104766723" fg:w="7892541"/><text x="6.4997%" y="383.50"></text></g><g><title>tracing::__macro_support::__disabled_span (1,855,493 samples, 0.01%)</title><rect x="6.2839%" y="357" width="0.0105%" height="15" fill="rgb(228,143,12)" fg:x="1110803771" fg:w="1855493"/><text x="6.5339%" y="367.50"></text></g><g><title>tracing::span::Span::new_disabled (1,855,493 samples, 0.01%)</title><rect x="6.2839%" y="341" width="0.0105%" height="15" fill="rgb(249,149,8)" fg:x="1110803771" fg:w="1855493"/><text x="6.5339%" y="351.50"></text></g><g><title>&lt;poros::api::flight::service::LogFlightServer as arrow_flight::gen::flight_service_server::FlightService&gt;::do_put::_{{closure}} (2,782,707 samples, 0.02%)</title><rect x="6.3039%" y="453" width="0.0157%" height="15" fill="rgb(243,35,44)" fg:x="1114346661" fg:w="2782707"/><text x="6.5539%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,618,205 samples, 0.02%)</title><rect x="6.5646%" y="373" width="0.0205%" height="15" fill="rgb(246,89,9)" fg:x="1160421522" fg:w="3618205"/><text x="6.8146%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,187,152 samples, 0.04%)</title><rect x="6.5646%" y="389" width="0.0407%" height="15" fill="rgb(233,213,13)" fg:x="1160421522" fg:w="7187152"/><text x="6.8146%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (3,568,947 samples, 0.02%)</title><rect x="6.5850%" y="373" width="0.0202%" height="15" fill="rgb(233,141,41)" fg:x="1164039727" fg:w="3568947"/><text x="6.8350%" y="383.50"></text></g><g><title>core::ptr::read (3,568,947 samples, 0.02%)</title><rect x="6.5850%" y="357" width="0.0202%" height="15" fill="rgb(239,167,4)" fg:x="1164039727" fg:w="3568947"/><text x="6.8350%" y="367.50"></text></g><g><title>[unknown] (3,627,558 samples, 0.02%)</title><rect x="6.6052%" y="389" width="0.0205%" height="15" fill="rgb(209,217,16)" fg:x="1167608674" fg:w="3627558"/><text x="6.8552%" y="399.50"></text></g><g><title>[unknown] (3,627,558 samples, 0.02%)</title><rect x="6.6052%" y="373" width="0.0205%" height="15" fill="rgb(219,88,35)" fg:x="1167608674" fg:w="3627558"/><text x="6.8552%" y="383.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::reserve (47,479,575 samples, 0.27%)</title><rect x="6.6670%" y="373" width="0.2686%" height="15" fill="rgb(220,193,23)" fg:x="1178530754" fg:w="47479575"/><text x="6.9170%" y="383.50"></text></g><g><title>__memmove_avx_unaligned (36,391,751 samples, 0.21%)</title><rect x="6.9356%" y="357" width="0.2059%" height="15" fill="rgb(230,90,52)" fg:x="1226010329" fg:w="36391751"/><text x="7.1856%" y="367.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::extend_from_slice (194,715,374 samples, 1.10%)</title><rect x="6.6257%" y="389" width="1.1015%" height="15" fill="rgb(252,106,19)" fg:x="1171236232" fg:w="194715374"/><text x="6.8757%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (139,941,277 samples, 0.79%)</title><rect x="6.9356%" y="373" width="0.7917%" height="15" fill="rgb(206,74,20)" fg:x="1226010329" fg:w="139941277"/><text x="7.1856%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (103,549,526 samples, 0.59%)</title><rect x="7.1415%" y="357" width="0.5858%" height="15" fill="rgb(230,138,44)" fg:x="1262402080" fg:w="103549526"/><text x="7.3915%" y="367.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::push (7,204,780 samples, 0.04%)</title><rect x="7.7273%" y="389" width="0.0408%" height="15" fill="rgb(235,182,43)" fg:x="1365951606" fg:w="7204780"/><text x="7.9773%" y="399.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::reserve (3,543,776 samples, 0.02%)</title><rect x="7.7480%" y="373" width="0.0200%" height="15" fill="rgb(242,16,51)" fg:x="1369612610" fg:w="3543776"/><text x="7.9980%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (350,272,413 samples, 1.98%)</title><rect x="7.7680%" y="389" width="1.9815%" height="15" fill="rgb(248,9,4)" fg:x="1373156386" fg:w="350272413"/><text x="8.0180%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (350,272,413 samples, 1.98%)</title><rect x="7.7680%" y="373" width="1.9815%" height="15" fill="rgb(210,31,22)" fg:x="1373156386" fg:w="350272413"/><text x="8.0180%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (350,272,413 samples, 1.98%)</title><rect x="7.7680%" y="357" width="1.9815%" height="15" fill="rgb(239,54,39)" fg:x="1373156386" fg:w="350272413"/><text x="8.0180%" y="367.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (350,272,413 samples, 1.98%)</title><rect x="7.7680%" y="341" width="1.9815%" height="15" fill="rgb(230,99,41)" fg:x="1373156386" fg:w="350272413"/><text x="8.0180%" y="351.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (350,272,413 samples, 1.98%)</title><rect x="7.7680%" y="325" width="1.9815%" height="15" fill="rgb(253,106,12)" fg:x="1373156386" fg:w="350272413"/><text x="8.0180%" y="335.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (350,272,413 samples, 1.98%)</title><rect x="7.7680%" y="309" width="1.9815%" height="15" fill="rgb(213,46,41)" fg:x="1373156386" fg:w="350272413"/><text x="8.0180%" y="319.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (350,272,413 samples, 1.98%)</title><rect x="7.7680%" y="293" width="1.9815%" height="15" fill="rgb(215,133,35)" fg:x="1373156386" fg:w="350272413"/><text x="8.0180%" y="303.50">a..</text></g><g><title>cfree@GLIBC_2.2.5 (350,272,413 samples, 1.98%)</title><rect x="7.7680%" y="277" width="1.9815%" height="15" fill="rgb(213,28,5)" fg:x="1373156386" fg:w="350272413"/><text x="8.0180%" y="287.50">c..</text></g><g><title>_int_free_chunk (176,942,475 samples, 1.00%)</title><rect x="8.7486%" y="261" width="1.0010%" height="15" fill="rgb(215,77,49)" fg:x="1546486324" fg:w="176942475"/><text x="8.9986%" y="271.50"></text></g><g><title>[unknown] (3,683,171 samples, 0.02%)</title><rect x="9.7287%" y="245" width="0.0208%" height="15" fill="rgb(248,100,22)" fg:x="1719745628" fg:w="3683171"/><text x="9.9787%" y="255.50"></text></g><g><title>arrow_array::array::string_array::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; for arrow_array::array::byte_array::GenericByteArray&lt;arrow_array::types::GenericStringType&lt;OffsetSize&gt;&gt;&gt;::from (731,589,813 samples, 4.14%)</title><rect x="6.3197%" y="421" width="4.1386%" height="15" fill="rgb(208,67,9)" fg:x="1117129368" fg:w="731589813"/><text x="6.5697%" y="431.50">arrow..</text></g><g><title>arrow_array::array::byte_array::GenericByteArray&lt;T&gt;::from_iter_values (731,589,813 samples, 4.14%)</title><rect x="6.3197%" y="405" width="4.1386%" height="15" fill="rgb(219,133,21)" fg:x="1117129368" fg:w="731589813"/><text x="6.5697%" y="415.50">arrow..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String&gt;&gt; (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="389" width="0.7088%" height="15" fill="rgb(246,46,29)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="373" width="0.7088%" height="15" fill="rgb(246,185,52)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,alloc::alloc::Global&gt;&gt; (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="357" width="0.7088%" height="15" fill="rgb(252,136,11)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="341" width="0.7088%" height="15" fill="rgb(219,138,53)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="325" width="0.7088%" height="15" fill="rgb(211,51,23)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="309" width="0.7088%" height="15" fill="rgb(247,221,28)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="293" width="0.7088%" height="15" fill="rgb(251,222,45)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="277" width="0.7088%" height="15" fill="rgb(217,162,53)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="261" width="0.7088%" height="15" fill="rgb(229,93,14)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="271.50"></text></g><g><title>cfree@GLIBC_2.2.5 (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="245" width="0.7088%" height="15" fill="rgb(209,67,49)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="255.50"></text></g><g><title>_int_free_chunk (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="229" width="0.7088%" height="15" fill="rgb(213,87,29)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="239.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="213" width="0.7088%" height="15" fill="rgb(205,151,52)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="223.50"></text></g><g><title>malloc_consolidate (125,290,382 samples, 0.71%)</title><rect x="9.7495%" y="197" width="0.7088%" height="15" fill="rgb(253,215,39)" fg:x="1723428799" fg:w="125290382"/><text x="9.9995%" y="207.50"></text></g><g><title>unlink_chunk.isra.0 (22,088,589 samples, 0.12%)</title><rect x="10.3333%" y="181" width="0.1250%" height="15" fill="rgb(221,220,41)" fg:x="1826630592" fg:w="22088589"/><text x="10.5833%" y="191.50"></text></g><g><title>&lt;poros::application::actors::parser::ParsingActor as actix::handler::Handler&lt;poros::application::actors::broadcast::RecordBatchWrapper&gt;&gt;::handle (751,127,931 samples, 4.25%)</title><rect x="6.3197%" y="453" width="4.2492%" height="15" fill="rgb(218,133,21)" fg:x="1117129368" fg:w="751127931"/><text x="6.5697%" y="463.50">&lt;poro..</text></g><g><title>poros::application::actors::parser::apply_regex_pattern (751,127,931 samples, 4.25%)</title><rect x="6.3197%" y="437" width="4.2492%" height="15" fill="rgb(221,193,43)" fg:x="1117129368" fg:w="751127931"/><text x="6.5697%" y="447.50">poros..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt; (19,538,118 samples, 0.11%)</title><rect x="10.4583%" y="421" width="0.1105%" height="15" fill="rgb(240,128,52)" fg:x="1848719181" fg:w="19538118"/><text x="10.7083%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,538,118 samples, 0.11%)</title><rect x="10.4583%" y="405" width="0.1105%" height="15" fill="rgb(253,114,12)" fg:x="1848719181" fg:w="19538118"/><text x="10.7083%" y="415.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (11,396,731 samples, 0.06%)</title><rect x="10.5688%" y="453" width="0.0645%" height="15" fill="rgb(215,223,47)" fg:x="1868257299" fg:w="11396731"/><text x="10.8188%" y="463.50"></text></g><g><title>&lt;regex_automata::meta::strategy::ReverseAnchored as regex_automata::meta::strategy::Strategy&gt;::group_info (25,445,269 samples, 0.14%)</title><rect x="10.6333%" y="453" width="0.1439%" height="15" fill="rgb(248,225,23)" fg:x="1879654030" fg:w="25445269"/><text x="10.8833%" y="463.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::group_info (11,609,515 samples, 0.07%)</title><rect x="10.7116%" y="437" width="0.0657%" height="15" fill="rgb(250,108,0)" fg:x="1893489784" fg:w="11609515"/><text x="10.9616%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::group_info (11,609,515 samples, 0.07%)</title><rect x="10.7116%" y="421" width="0.0657%" height="15" fill="rgb(228,208,7)" fg:x="1893489784" fg:w="11609515"/><text x="10.9616%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::group_info (11,609,515 samples, 0.07%)</title><rect x="10.7116%" y="405" width="0.0657%" height="15" fill="rgb(244,45,10)" fg:x="1893489784" fg:w="11609515"/><text x="10.9616%" y="415.50"></text></g><g><title>&lt;regex_automata::util::captures::CapturesPatternIter as core::iter::traits::iterator::Iterator&gt;::next (78,175,299 samples, 0.44%)</title><rect x="10.7772%" y="453" width="0.4422%" height="15" fill="rgb(207,125,25)" fg:x="1905099299" fg:w="78175299"/><text x="11.0272%" y="463.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group (74,356,046 samples, 0.42%)</title><rect x="10.7988%" y="437" width="0.4206%" height="15" fill="rgb(210,195,18)" fg:x="1908918552" fg:w="74356046"/><text x="11.0488%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (46,631,115 samples, 0.26%)</title><rect x="10.9557%" y="421" width="0.2638%" height="15" fill="rgb(249,80,12)" fg:x="1936643483" fg:w="46631115"/><text x="11.2057%" y="431.50"></text></g><g><title>&lt;tokio::runtime::context::blocking::DisallowBlockInPlaceGuard as core::ops::drop::Drop&gt;::drop (5,694,679 samples, 0.03%)</title><rect x="11.2195%" y="453" width="0.0322%" height="15" fill="rgb(221,65,9)" fg:x="1983274598" fg:w="5694679"/><text x="11.4695%" y="463.50"></text></g><g><title>&lt;tokio_stream::wrappers::tcp_listener::TcpListenerStream as futures_core::stream::Stream&gt;::poll_next (4,529,301 samples, 0.03%)</title><rect x="11.2608%" y="453" width="0.0256%" height="15" fill="rgb(235,49,36)" fg:x="1990576517" fg:w="4529301"/><text x="11.5108%" y="463.50"></text></g><g><title>&lt;tonic::transport::server::Fuse&lt;F&gt; as core::future::future::Future&gt;::poll (1,940,079 samples, 0.01%)</title><rect x="11.2864%" y="453" width="0.0110%" height="15" fill="rgb(225,32,20)" fg:x="1995105818" fg:w="1940079"/><text x="11.5364%" y="463.50"></text></g><g><title>tokio::sync::watch::Receiver&lt;T&gt;::changed::_{{closure}} (1,940,079 samples, 0.01%)</title><rect x="11.2864%" y="437" width="0.0110%" height="15" fill="rgb(215,141,46)" fg:x="1995105818" fg:w="1940079"/><text x="11.5364%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (4,251,657 samples, 0.02%)</title><rect x="11.2974%" y="453" width="0.0241%" height="15" fill="rgb(250,160,47)" fg:x="1997045897" fg:w="4251657"/><text x="11.5474%" y="463.50"></text></g><g><title>tracing_subscriber::fmt::format::Format&lt;F,T&gt;::format_timestamp (1,959,696 samples, 0.01%)</title><rect x="11.3104%" y="437" width="0.0111%" height="15" fill="rgb(216,222,40)" fg:x="1999337858" fg:w="1959696"/><text x="11.5604%" y="447.50"></text></g><g><title>core::fmt::getcount (3,852,217 samples, 0.02%)</title><rect x="11.3214%" y="389" width="0.0218%" height="15" fill="rgb(234,217,39)" fg:x="2001297554" fg:w="3852217"/><text x="11.5714%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (7,720,843 samples, 0.04%)</title><rect x="11.3214%" y="453" width="0.0437%" height="15" fill="rgb(207,178,40)" fg:x="2001297554" fg:w="7720843"/><text x="11.5714%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7,720,843 samples, 0.04%)</title><rect x="11.3214%" y="437" width="0.0437%" height="15" fill="rgb(221,136,13)" fg:x="2001297554" fg:w="7720843"/><text x="11.5714%" y="447.50"></text></g><g><title>core::fmt::write (7,720,843 samples, 0.04%)</title><rect x="11.3214%" y="421" width="0.0437%" height="15" fill="rgb(249,199,10)" fg:x="2001297554" fg:w="7720843"/><text x="11.5714%" y="431.50"></text></g><g><title>core::fmt::run (7,720,843 samples, 0.04%)</title><rect x="11.3214%" y="405" width="0.0437%" height="15" fill="rgb(249,222,13)" fg:x="2001297554" fg:w="7720843"/><text x="11.5714%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,868,626 samples, 0.02%)</title><rect x="11.3432%" y="389" width="0.0219%" height="15" fill="rgb(244,185,38)" fg:x="2005149771" fg:w="3868626"/><text x="11.5932%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (3,868,626 samples, 0.02%)</title><rect x="11.3432%" y="373" width="0.0219%" height="15" fill="rgb(236,202,9)" fg:x="2005149771" fg:w="3868626"/><text x="11.5932%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,868,626 samples, 0.02%)</title><rect x="11.3432%" y="357" width="0.0219%" height="15" fill="rgb(250,229,37)" fg:x="2005149771" fg:w="3868626"/><text x="11.5932%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,881,075 samples, 0.02%)</title><rect x="11.6162%" y="373" width="0.0220%" height="15" fill="rgb(206,174,23)" fg:x="2053397346" fg:w="3881075"/><text x="11.8662%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,881,075 samples, 0.02%)</title><rect x="11.6162%" y="357" width="0.0220%" height="15" fill="rgb(211,33,43)" fg:x="2053397346" fg:w="3881075"/><text x="11.8662%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,881,075 samples, 0.02%)</title><rect x="11.6162%" y="341" width="0.0220%" height="15" fill="rgb(245,58,50)" fg:x="2053397346" fg:w="3881075"/><text x="11.8662%" y="351.50"></text></g><g><title>regex_automata::meta::strategy::Core::is_capture_search_needed (65,995,812 samples, 0.37%)</title><rect x="11.4183%" y="421" width="0.3733%" height="15" fill="rgb(244,68,36)" fg:x="2018412677" fg:w="65995812"/><text x="11.6683%" y="431.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::implicit_slot_len (62,084,329 samples, 0.35%)</title><rect x="11.4404%" y="405" width="0.3512%" height="15" fill="rgb(232,229,15)" fg:x="2022324160" fg:w="62084329"/><text x="11.6904%" y="415.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::pattern_len (31,011,143 samples, 0.18%)</title><rect x="11.6162%" y="389" width="0.1754%" height="15" fill="rgb(254,30,23)" fg:x="2053397346" fg:w="31011143"/><text x="11.8662%" y="399.50"></text></g><g><title>regex_automata::util::captures::GroupInfoInner::pattern_len (27,130,068 samples, 0.15%)</title><rect x="11.6381%" y="373" width="0.1535%" height="15" fill="rgb(235,160,14)" fg:x="2057278421" fg:w="27130068"/><text x="11.8881%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (27,130,068 samples, 0.15%)</title><rect x="11.6381%" y="357" width="0.1535%" height="15" fill="rgb(212,155,44)" fg:x="2057278421" fg:w="27130068"/><text x="11.8881%" y="367.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (81,473,495 samples, 0.46%)</title><rect x="11.3742%" y="437" width="0.4609%" height="15" fill="rgb(226,2,50)" fg:x="2010629014" fg:w="81473495"/><text x="11.6242%" y="447.50"></text></g><g><title>regex_automata::meta::wrappers::OnePass::get (7,694,020 samples, 0.04%)</title><rect x="11.7916%" y="421" width="0.0435%" height="15" fill="rgb(234,177,6)" fg:x="2084408489" fg:w="7694020"/><text x="12.0416%" y="431.50"></text></g><g><title>[unknown] (2,312,556 samples, 0.01%)</title><rect x="11.8351%" y="437" width="0.0131%" height="15" fill="rgb(217,24,9)" fg:x="2092102509" fg:w="2312556"/><text x="12.0851%" y="447.50"></text></g><g><title>_int_free_chunk (2,312,556 samples, 0.01%)</title><rect x="11.8351%" y="421" width="0.0131%" height="15" fill="rgb(220,13,46)" fg:x="2092102509" fg:w="2312556"/><text x="12.0851%" y="431.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (2,312,556 samples, 0.01%)</title><rect x="11.8351%" y="405" width="0.0131%" height="15" fill="rgb(239,221,27)" fg:x="2092102509" fg:w="2312556"/><text x="12.0851%" y="415.50"></text></g><g><title>malloc_consolidate (2,312,556 samples, 0.01%)</title><rect x="11.8351%" y="389" width="0.0131%" height="15" fill="rgb(222,198,25)" fg:x="2092102509" fg:w="2312556"/><text x="12.0851%" y="399.50"></text></g><g><title>actix::address::channel::AddressSender&lt;A&gt;::do_send (2,312,556 samples, 0.01%)</title><rect x="11.8351%" y="373" width="0.0131%" height="15" fill="rgb(211,99,13)" fg:x="2092102509" fg:w="2312556"/><text x="12.0851%" y="383.50"></text></g><g><title>actix::address::channel::AddressSender&lt;A&gt;::queue_push_and_signal (2,312,556 samples, 0.01%)</title><rect x="11.8351%" y="357" width="0.0131%" height="15" fill="rgb(232,111,31)" fg:x="2092102509" fg:w="2312556"/><text x="12.0851%" y="367.50"></text></g><g><title>actix::address::queue::Queue&lt;T&gt;::push (2,312,556 samples, 0.01%)</title><rect x="11.8351%" y="341" width="0.0131%" height="15" fill="rgb(245,82,37)" fg:x="2092102509" fg:w="2312556"/><text x="12.0851%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (2,312,556 samples, 0.01%)</title><rect x="11.8351%" y="325" width="0.0131%" height="15" fill="rgb(227,149,46)" fg:x="2092102509" fg:w="2312556"/><text x="12.0851%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_store (2,312,556 samples, 0.01%)</title><rect x="11.8351%" y="309" width="0.0131%" height="15" fill="rgb(218,36,50)" fg:x="2092102509" fg:w="2312556"/><text x="12.0851%" y="319.50"></text></g><g><title>__syscall_cancel_arch_end (38,605,049 samples, 0.22%)</title><rect x="11.8482%" y="245" width="0.2184%" height="15" fill="rgb(226,80,48)" fg:x="2094415065" fg:w="38605049"/><text x="12.0982%" y="255.50"></text></g><g><title>[unknown] (38,605,049 samples, 0.22%)</title><rect x="11.8482%" y="229" width="0.2184%" height="15" fill="rgb(238,224,15)" fg:x="2094415065" fg:w="38605049"/><text x="12.0982%" y="239.50"></text></g><g><title>[unknown] (33,522,475 samples, 0.19%)</title><rect x="11.8770%" y="213" width="0.1896%" height="15" fill="rgb(241,136,10)" fg:x="2099497639" fg:w="33522475"/><text x="12.1270%" y="223.50"></text></g><g><title>[unknown] (33,522,475 samples, 0.19%)</title><rect x="11.8770%" y="197" width="0.1896%" height="15" fill="rgb(208,32,45)" fg:x="2099497639" fg:w="33522475"/><text x="12.1270%" y="207.50"></text></g><g><title>[unknown] (33,522,475 samples, 0.19%)</title><rect x="11.8770%" y="181" width="0.1896%" height="15" fill="rgb(207,135,9)" fg:x="2099497639" fg:w="33522475"/><text x="12.1270%" y="191.50"></text></g><g><title>[unknown] (24,900,390 samples, 0.14%)</title><rect x="11.9257%" y="165" width="0.1409%" height="15" fill="rgb(206,86,44)" fg:x="2108119724" fg:w="24900390"/><text x="12.1757%" y="175.50"></text></g><g><title>[unknown] (16,453,213 samples, 0.09%)</title><rect x="11.9735%" y="149" width="0.0931%" height="15" fill="rgb(245,177,15)" fg:x="2116566901" fg:w="16453213"/><text x="12.2235%" y="159.50"></text></g><g><title>[unknown] (13,292,658 samples, 0.08%)</title><rect x="11.9914%" y="133" width="0.0752%" height="15" fill="rgb(206,64,50)" fg:x="2119727456" fg:w="13292658"/><text x="12.2414%" y="143.50"></text></g><g><title>[unknown] (12,432,065 samples, 0.07%)</title><rect x="11.9963%" y="117" width="0.0703%" height="15" fill="rgb(234,36,40)" fg:x="2120588049" fg:w="12432065"/><text x="12.2463%" y="127.50"></text></g><g><title>[unknown] (12,432,065 samples, 0.07%)</title><rect x="11.9963%" y="101" width="0.0703%" height="15" fill="rgb(213,64,8)" fg:x="2120588049" fg:w="12432065"/><text x="12.2463%" y="111.50"></text></g><g><title>[unknown] (12,432,065 samples, 0.07%)</title><rect x="11.9963%" y="85" width="0.0703%" height="15" fill="rgb(210,75,36)" fg:x="2120588049" fg:w="12432065"/><text x="12.2463%" y="95.50"></text></g><g><title>[unknown] (6,495,266 samples, 0.04%)</title><rect x="12.0299%" y="69" width="0.0367%" height="15" fill="rgb(229,88,21)" fg:x="2126524848" fg:w="6495266"/><text x="12.2799%" y="79.50"></text></g><g><title>[unknown] (5,150,606 samples, 0.03%)</title><rect x="12.0375%" y="53" width="0.0291%" height="15" fill="rgb(252,204,47)" fg:x="2127869508" fg:w="5150606"/><text x="12.2875%" y="63.50"></text></g><g><title>[libc.so.6] (125,144,316 samples, 0.71%)</title><rect x="11.3705%" y="453" width="0.7079%" height="15" fill="rgb(208,77,27)" fg:x="2009969393" fg:w="125144316"/><text x="11.6205%" y="463.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="437" width="0.2302%" height="15" fill="rgb(221,76,26)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="447.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="421" width="0.2302%" height="15" fill="rgb(225,139,18)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="431.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="405" width="0.2302%" height="15" fill="rgb(230,137,11)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="415.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="389" width="0.2302%" height="15" fill="rgb(212,28,1)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="399.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="373" width="0.2302%" height="15" fill="rgb(248,164,17)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="383.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="357" width="0.2302%" height="15" fill="rgb(222,171,42)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="367.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::read (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="341" width="0.2302%" height="15" fill="rgb(243,84,45)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="351.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="325" width="0.2302%" height="15" fill="rgb(252,49,23)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="335.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="309" width="0.2302%" height="15" fill="rgb(215,19,7)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="319.50"></text></g><g><title>__libc_recv (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="293" width="0.2302%" height="15" fill="rgb(238,81,41)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="303.50"></text></g><g><title>__syscall_cancel (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="277" width="0.2302%" height="15" fill="rgb(210,199,37)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="287.50"></text></g><g><title>__internal_syscall_cancel (40,698,644 samples, 0.23%)</title><rect x="11.8482%" y="261" width="0.2302%" height="15" fill="rgb(244,192,49)" fg:x="2094415065" fg:w="40698644"/><text x="12.0982%" y="271.50"></text></g><g><title>__syscall_cancel_arch_start (2,093,595 samples, 0.01%)</title><rect x="12.0666%" y="245" width="0.0118%" height="15" fill="rgb(226,211,11)" fg:x="2133020114" fg:w="2093595"/><text x="12.3166%" y="255.50"></text></g><g><title>&lt;hyper::body::incoming::Incoming as http_body::Body&gt;::poll_frame (1,807,257 samples, 0.01%)</title><rect x="12.0784%" y="437" width="0.0102%" height="15" fill="rgb(236,162,54)" fg:x="2135113709" fg:w="1807257"/><text x="12.3284%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (2,231,735 samples, 0.01%)</title><rect x="12.0887%" y="437" width="0.0126%" height="15" fill="rgb(220,229,9)" fg:x="2136920966" fg:w="2231735"/><text x="12.3387%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (2,231,735 samples, 0.01%)</title><rect x="12.0887%" y="421" width="0.0126%" height="15" fill="rgb(250,87,22)" fg:x="2136920966" fg:w="2231735"/><text x="12.3387%" y="431.50"></text></g><g><title>[unknown] (2,860,567 samples, 0.02%)</title><rect x="12.1013%" y="437" width="0.0162%" height="15" fill="rgb(239,43,17)" fg:x="2139152701" fg:w="2860567"/><text x="12.3513%" y="447.50"></text></g><g><title>arrow_ipc::reader::create_array (2,860,567 samples, 0.02%)</title><rect x="12.1013%" y="421" width="0.0162%" height="15" fill="rgb(231,177,25)" fg:x="2139152701" fg:w="2860567"/><text x="12.3513%" y="431.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (2,860,567 samples, 0.02%)</title><rect x="12.1013%" y="405" width="0.0162%" height="15" fill="rgb(219,179,1)" fg:x="2139152701" fg:w="2860567"/><text x="12.3513%" y="415.50"></text></g><g><title>__rustc::__rust_alloc (3,390,900 samples, 0.02%)</title><rect x="12.1175%" y="437" width="0.0192%" height="15" fill="rgb(238,219,53)" fg:x="2142013268" fg:w="3390900"/><text x="12.3675%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (19,628,681 samples, 0.11%)</title><rect x="12.1367%" y="437" width="0.1110%" height="15" fill="rgb(232,167,36)" fg:x="2145404168" fg:w="19628681"/><text x="12.3867%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_buffer::buffer::immutable::Buffer&gt; (210,628,267 samples, 1.19%)</title><rect x="12.2918%" y="421" width="1.1915%" height="15" fill="rgb(244,19,51)" fg:x="2172825268" fg:w="210628267"/><text x="12.5418%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow_buffer::bytes::Bytes&gt;&gt; (210,628,267 samples, 1.19%)</title><rect x="12.2918%" y="405" width="1.1915%" height="15" fill="rgb(224,6,22)" fg:x="2172825268" fg:w="210628267"/><text x="12.5418%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (210,628,267 samples, 1.19%)</title><rect x="12.2918%" y="389" width="1.1915%" height="15" fill="rgb(224,145,5)" fg:x="2172825268" fg:w="210628267"/><text x="12.5418%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_array::array::byte_array::GenericByteArray&lt;arrow_array::types::GenericStringType&lt;i64&gt;&gt;&gt; (562,523,256 samples, 3.18%)</title><rect x="12.2477%" y="437" width="3.1822%" height="15" fill="rgb(234,130,49)" fg:x="2165032849" fg:w="562523256"/><text x="12.4977%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;arrow_buffer::buffer::offset::OffsetBuffer&lt;i32&gt;&gt; (344,102,570 samples, 1.95%)</title><rect x="13.4833%" y="421" width="1.9466%" height="15" fill="rgb(254,6,2)" fg:x="2383453535" fg:w="344102570"/><text x="13.7333%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;arrow_buffer::buffer::scalar::ScalarBuffer&lt;i32&gt;&gt; (344,102,570 samples, 1.95%)</title><rect x="13.4833%" y="405" width="1.9466%" height="15" fill="rgb(208,96,46)" fg:x="2383453535" fg:w="344102570"/><text x="13.7333%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;arrow_buffer::buffer::immutable::Buffer&gt; (344,102,570 samples, 1.95%)</title><rect x="13.4833%" y="389" width="1.9466%" height="15" fill="rgb(239,3,39)" fg:x="2383453535" fg:w="344102570"/><text x="13.7333%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow_buffer::bytes::Bytes&gt;&gt; (344,102,570 samples, 1.95%)</title><rect x="13.4833%" y="373" width="1.9466%" height="15" fill="rgb(233,210,1)" fg:x="2383453535" fg:w="344102570"/><text x="13.7333%" y="383.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (344,102,570 samples, 1.95%)</title><rect x="13.4833%" y="357" width="1.9466%" height="15" fill="rgb(244,137,37)" fg:x="2383453535" fg:w="344102570"/><text x="13.7333%" y="367.50">&lt;..</text></g><g><title>h2::proto::streams::recv::Recv::release_capacity (1,933,113 samples, 0.01%)</title><rect x="15.4299%" y="437" width="0.0109%" height="15" fill="rgb(240,136,2)" fg:x="2727556105" fg:w="1933113"/><text x="15.6799%" y="447.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (1,933,113 samples, 0.01%)</title><rect x="15.4299%" y="421" width="0.0109%" height="15" fill="rgb(239,18,37)" fg:x="2727556105" fg:w="1933113"/><text x="15.6799%" y="431.50"></text></g><g><title>tracing_core::metadata::filter_as_usize (1,933,113 samples, 0.01%)</title><rect x="15.4299%" y="405" width="0.0109%" height="15" fill="rgb(218,185,22)" fg:x="2727556105" fg:w="1933113"/><text x="15.6799%" y="415.50"></text></g><g><title>h2::proto::streams::store::Store::find_mut (3,355,595 samples, 0.02%)</title><rect x="15.4409%" y="437" width="0.0190%" height="15" fill="rgb(225,218,4)" fg:x="2729489218" fg:w="3355595"/><text x="15.6909%" y="447.50"></text></g><g><title>__memset_avx2_unaligned_erms (4,240,132 samples, 0.02%)</title><rect x="15.5054%" y="405" width="0.0240%" height="15" fill="rgb(230,182,32)" fg:x="2740899626" fg:w="4240132"/><text x="15.7554%" y="415.50"></text></g><g><title>[poros] (619,478,458 samples, 3.50%)</title><rect x="12.0784%" y="453" width="3.5044%" height="15" fill="rgb(242,56,43)" fg:x="2135113709" fg:w="619478458"/><text x="12.3284%" y="463.50">[po..</text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots_imp (21,747,354 samples, 0.12%)</title><rect x="15.4598%" y="437" width="0.1230%" height="15" fill="rgb(233,99,24)" fg:x="2732844813" fg:w="21747354"/><text x="15.7098%" y="447.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::search_imp (17,819,086 samples, 0.10%)</title><rect x="15.4821%" y="421" width="0.1008%" height="15" fill="rgb(234,209,42)" fg:x="2736773081" fg:w="17819086"/><text x="15.7321%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::ge (9,452,409 samples, 0.05%)</title><rect x="15.5294%" y="405" width="0.0535%" height="15" fill="rgb(227,7,12)" fg:x="2745139758" fg:w="9452409"/><text x="15.7794%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (9,452,409 samples, 0.05%)</title><rect x="15.5294%" y="389" width="0.0535%" height="15" fill="rgb(245,203,43)" fg:x="2745139758" fg:w="9452409"/><text x="15.7794%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9,452,409 samples, 0.05%)</title><rect x="15.5294%" y="373" width="0.0535%" height="15" fill="rgb(238,205,33)" fg:x="2745139758" fg:w="9452409"/><text x="15.7794%" y="383.50"></text></g><g><title>core::cmp::Ordering::is_ge (9,452,409 samples, 0.05%)</title><rect x="15.5294%" y="357" width="0.0535%" height="15" fill="rgb(231,56,7)" fg:x="2745139758" fg:w="9452409"/><text x="15.7794%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2,013,149 samples, 0.01%)</title><rect x="15.5829%" y="437" width="0.0114%" height="15" fill="rgb(244,186,29)" fg:x="2754592175" fg:w="2013149"/><text x="15.8329%" y="447.50"></text></g><g><title>&lt;core::num::nonzero::NonZero&lt;T&gt; as core::fmt::Debug&gt;::fmt (2,013,149 samples, 0.01%)</title><rect x="15.5829%" y="421" width="0.0114%" height="15" fill="rgb(234,111,31)" fg:x="2754592175" fg:w="2013149"/><text x="15.8329%" y="431.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (2,013,149 samples, 0.01%)</title><rect x="15.5829%" y="405" width="0.0114%" height="15" fill="rgb(241,149,10)" fg:x="2754592175" fg:w="2013149"/><text x="15.8329%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (2,013,149 samples, 0.01%)</title><rect x="15.5829%" y="389" width="0.0114%" height="15" fill="rgb(249,206,44)" fg:x="2754592175" fg:w="2013149"/><text x="15.8329%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2,013,149 samples, 0.01%)</title><rect x="15.5829%" y="373" width="0.0114%" height="15" fill="rgb(251,153,30)" fg:x="2754592175" fg:w="2013149"/><text x="15.8329%" y="383.50"></text></g><g><title>core::fmt::Formatter::padding (2,013,149 samples, 0.01%)</title><rect x="15.5829%" y="357" width="0.0114%" height="15" fill="rgb(239,152,38)" fg:x="2754592175" fg:w="2013149"/><text x="15.8329%" y="367.50"></text></g><g><title>core::fmt::FormattingOptions::get_align (2,013,149 samples, 0.01%)</title><rect x="15.5829%" y="341" width="0.0114%" height="15" fill="rgb(249,139,47)" fg:x="2754592175" fg:w="2013149"/><text x="15.8329%" y="351.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,789,276 samples, 0.01%)</title><rect x="15.5943%" y="437" width="0.0101%" height="15" fill="rgb(244,64,35)" fg:x="2756605324" fg:w="1789276"/><text x="15.8443%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt; as arrow_array::array::Array&gt;::as_any (46,957,693 samples, 0.27%)</title><rect x="15.6044%" y="437" width="0.2656%" height="15" fill="rgb(216,46,15)" fg:x="2758394600" fg:w="46957693"/><text x="15.8544%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (46,957,693 samples, 0.27%)</title><rect x="15.6044%" y="421" width="0.2656%" height="15" fill="rgb(250,74,19)" fg:x="2758394600" fg:w="46957693"/><text x="15.8544%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (46,957,693 samples, 0.27%)</title><rect x="15.6044%" y="405" width="0.2656%" height="15" fill="rgb(249,42,33)" fg:x="2758394600" fg:w="46957693"/><text x="15.8544%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (46,957,693 samples, 0.27%)</title><rect x="15.6044%" y="389" width="0.2656%" height="15" fill="rgb(242,149,17)" fg:x="2758394600" fg:w="46957693"/><text x="15.8544%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (46,957,693 samples, 0.27%)</title><rect x="15.6044%" y="373" width="0.2656%" height="15" fill="rgb(244,29,21)" fg:x="2758394600" fg:w="46957693"/><text x="15.8544%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt; as arrow_array::array::Array&gt;::slice (23,362,103 samples, 0.13%)</title><rect x="15.8700%" y="437" width="0.1322%" height="15" fill="rgb(220,130,37)" fg:x="2805352293" fg:w="23362103"/><text x="16.1200%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (23,362,103 samples, 0.13%)</title><rect x="15.8700%" y="421" width="0.1322%" height="15" fill="rgb(211,67,2)" fg:x="2805352293" fg:w="23362103"/><text x="16.1200%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (23,362,103 samples, 0.13%)</title><rect x="15.8700%" y="405" width="0.1322%" height="15" fill="rgb(235,68,52)" fg:x="2805352293" fg:w="23362103"/><text x="16.1200%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (23,362,103 samples, 0.13%)</title><rect x="15.8700%" y="389" width="0.1322%" height="15" fill="rgb(246,142,3)" fg:x="2805352293" fg:w="23362103"/><text x="16.1200%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (23,362,103 samples, 0.13%)</title><rect x="15.8700%" y="373" width="0.1322%" height="15" fill="rgb(241,25,7)" fg:x="2805352293" fg:w="23362103"/><text x="16.1200%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11,669,283 samples, 0.07%)</title><rect x="17.2178%" y="405" width="0.0660%" height="15" fill="rgb(242,119,39)" fg:x="3043607260" fg:w="11669283"/><text x="17.4678%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (11,669,283 samples, 0.07%)</title><rect x="17.2178%" y="389" width="0.0660%" height="15" fill="rgb(241,98,45)" fg:x="3043607260" fg:w="11669283"/><text x="17.4678%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11,669,283 samples, 0.07%)</title><rect x="17.2178%" y="373" width="0.0660%" height="15" fill="rgb(254,28,30)" fg:x="3043607260" fg:w="11669283"/><text x="17.4678%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (11,669,283 samples, 0.07%)</title><rect x="17.2178%" y="357" width="0.0660%" height="15" fill="rgb(241,142,54)" fg:x="3043607260" fg:w="11669283"/><text x="17.4678%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (7,764,034 samples, 0.04%)</title><rect x="17.2839%" y="405" width="0.0439%" height="15" fill="rgb(222,85,15)" fg:x="3055276543" fg:w="7764034"/><text x="17.5339%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (7,764,034 samples, 0.04%)</title><rect x="17.2839%" y="389" width="0.0439%" height="15" fill="rgb(210,85,47)" fg:x="3055276543" fg:w="7764034"/><text x="17.5339%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (211,379,092 samples, 1.20%)</title><rect x="17.3278%" y="325" width="1.1958%" height="15" fill="rgb(224,206,25)" fg:x="3063040577" fg:w="211379092"/><text x="17.5778%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (211,379,092 samples, 1.20%)</title><rect x="17.3278%" y="309" width="1.1958%" height="15" fill="rgb(243,201,19)" fg:x="3063040577" fg:w="211379092"/><text x="17.5778%" y="319.50"></text></g><g><title>alloc::alloc::alloc (211,379,092 samples, 1.20%)</title><rect x="17.3278%" y="293" width="1.1958%" height="15" fill="rgb(236,59,4)" fg:x="3063040577" fg:w="211379092"/><text x="17.5778%" y="303.50"></text></g><g><title>malloc (180,087,836 samples, 1.02%)</title><rect x="17.5048%" y="277" width="1.0188%" height="15" fill="rgb(254,179,45)" fg:x="3094331833" fg:w="180087836"/><text x="17.7548%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (453,547,108 samples, 2.57%)</title><rect x="16.0022%" y="437" width="2.5657%" height="15" fill="rgb(226,14,10)" fg:x="2828714396" fg:w="453547108"/><text x="16.2522%" y="447.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (410,629,391 samples, 2.32%)</title><rect x="16.2450%" y="421" width="2.3230%" height="15" fill="rgb(244,27,41)" fg:x="2871632113" fg:w="410629391"/><text x="16.4950%" y="431.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (219,220,927 samples, 1.24%)</title><rect x="17.3278%" y="405" width="1.2401%" height="15" fill="rgb(235,35,32)" fg:x="3063040577" fg:w="219220927"/><text x="17.5778%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (219,220,927 samples, 1.24%)</title><rect x="17.3278%" y="389" width="1.2401%" height="15" fill="rgb(218,68,31)" fg:x="3063040577" fg:w="219220927"/><text x="17.5778%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (219,220,927 samples, 1.24%)</title><rect x="17.3278%" y="373" width="1.2401%" height="15" fill="rgb(207,120,37)" fg:x="3063040577" fg:w="219220927"/><text x="17.5778%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (219,220,927 samples, 1.24%)</title><rect x="17.3278%" y="357" width="1.2401%" height="15" fill="rgb(227,98,0)" fg:x="3063040577" fg:w="219220927"/><text x="17.5778%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (219,220,927 samples, 1.24%)</title><rect x="17.3278%" y="341" width="1.2401%" height="15" fill="rgb(207,7,3)" fg:x="3063040577" fg:w="219220927"/><text x="17.5778%" y="351.50"></text></g><g><title>alloc::raw_vec::layout_array (7,841,835 samples, 0.04%)</title><rect x="18.5236%" y="325" width="0.0444%" height="15" fill="rgb(206,98,19)" fg:x="3274419669" fg:w="7841835"/><text x="18.7736%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat (7,841,835 samples, 0.04%)</title><rect x="18.5236%" y="309" width="0.0444%" height="15" fill="rgb(217,5,26)" fg:x="3274419669" fg:w="7841835"/><text x="18.7736%" y="319.50"></text></g><g><title>__memmove_avx_unaligned (144,773,762 samples, 0.82%)</title><rect x="18.8117%" y="389" width="0.8190%" height="15" fill="rgb(235,190,38)" fg:x="3325361676" fg:w="144773762"/><text x="19.0617%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (215,382,391 samples, 1.22%)</title><rect x="19.6307%" y="389" width="1.2184%" height="15" fill="rgb(247,86,24)" fg:x="3470135438" fg:w="215382391"/><text x="19.8807%" y="399.50"></text></g><g><title>core::ptr::read_volatile (11,741,413 samples, 0.07%)</title><rect x="20.8492%" y="325" width="0.0664%" height="15" fill="rgb(205,101,16)" fg:x="3685517829" fg:w="11741413"/><text x="21.0992%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (473,758,255 samples, 2.68%)</title><rect x="18.7009%" y="421" width="2.6801%" height="15" fill="rgb(246,168,33)" fg:x="3305760178" fg:w="473758255"/><text x="18.9509%" y="431.50">al..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (454,156,757 samples, 2.57%)</title><rect x="18.8117%" y="405" width="2.5692%" height="15" fill="rgb(231,114,1)" fg:x="3325361676" fg:w="454156757"/><text x="19.0617%" y="415.50">al..</text></g><g><title>alloc::alloc::exchange_malloc (94,000,604 samples, 0.53%)</title><rect x="20.8492%" y="389" width="0.5318%" height="15" fill="rgb(207,184,53)" fg:x="3685517829" fg:w="94000604"/><text x="21.0992%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94,000,604 samples, 0.53%)</title><rect x="20.8492%" y="373" width="0.5318%" height="15" fill="rgb(224,95,51)" fg:x="3685517829" fg:w="94000604"/><text x="21.0992%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94,000,604 samples, 0.53%)</title><rect x="20.8492%" y="357" width="0.5318%" height="15" fill="rgb(212,188,45)" fg:x="3685517829" fg:w="94000604"/><text x="21.0992%" y="367.50"></text></g><g><title>alloc::alloc::alloc (94,000,604 samples, 0.53%)</title><rect x="20.8492%" y="341" width="0.5318%" height="15" fill="rgb(223,154,38)" fg:x="3685517829" fg:w="94000604"/><text x="21.0992%" y="351.50"></text></g><g><title>malloc (82,259,191 samples, 0.47%)</title><rect x="20.9156%" y="325" width="0.4653%" height="15" fill="rgb(251,22,52)" fg:x="3697259242" fg:w="82259191"/><text x="21.1656%" y="335.50"></text></g><g><title>&lt;arrow_buffer::buffer::immutable::Buffer as core::clone::Clone&gt;::clone (257,469,845 samples, 1.46%)</title><rect x="23.5512%" y="405" width="1.4565%" height="15" fill="rgb(229,209,22)" fg:x="4163161055" fg:w="257469845"/><text x="23.8012%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (241,812,290 samples, 1.37%)</title><rect x="23.6398%" y="389" width="1.3679%" height="15" fill="rgb(234,138,34)" fg:x="4178818610" fg:w="241812290"/><text x="23.8898%" y="399.50"></text></g><g><title>[unknown] (3,853,401 samples, 0.02%)</title><rect x="24.9859%" y="373" width="0.0218%" height="15" fill="rgb(212,95,11)" fg:x="4416777499" fg:w="3853401"/><text x="25.2359%" y="383.50"></text></g><g><title>[unknown] (3,853,401 samples, 0.02%)</title><rect x="24.9859%" y="357" width="0.0218%" height="15" fill="rgb(240,179,47)" fg:x="4416777499" fg:w="3853401"/><text x="25.2359%" y="367.50"></text></g><g><title>[unknown] (3,853,401 samples, 0.02%)</title><rect x="24.9859%" y="341" width="0.0218%" height="15" fill="rgb(240,163,11)" fg:x="4416777499" fg:w="3853401"/><text x="25.2359%" y="351.50"></text></g><g><title>[unknown] (3,853,401 samples, 0.02%)</title><rect x="24.9859%" y="325" width="0.0218%" height="15" fill="rgb(236,37,12)" fg:x="4416777499" fg:w="3853401"/><text x="25.2359%" y="335.50"></text></g><g><title>&lt;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as arrow_array::array::Array&gt;::slice (1,494,402,820 samples, 8.45%)</title><rect x="18.5679%" y="437" width="8.4539%" height="15" fill="rgb(232,164,16)" fg:x="3282261504" fg:w="1494402820"/><text x="18.8179%" y="447.50">&lt;arrow_array..</text></g><g><title>arrow_array::array::byte_array::GenericByteArray&lt;T&gt;::slice (997,145,891 samples, 5.64%)</title><rect x="21.3809%" y="421" width="5.6409%" height="15" fill="rgb(244,205,15)" fg:x="3779518433" fg:w="997145891"/><text x="21.6309%" y="431.50">arrow_a..</text></g><g><title>arrow_buffer::buffer::offset::OffsetBuffer&lt;O&gt;::slice (356,033,424 samples, 2.01%)</title><rect x="25.0077%" y="405" width="2.0141%" height="15" fill="rgb(223,117,47)" fg:x="4420630900" fg:w="356033424"/><text x="25.2577%" y="415.50">a..</text></g><g><title>arrow_buffer::buffer::scalar::ScalarBuffer&lt;T&gt;::slice (336,463,070 samples, 1.90%)</title><rect x="25.1184%" y="389" width="1.9034%" height="15" fill="rgb(244,107,35)" fg:x="4440201254" fg:w="336463070"/><text x="25.3684%" y="399.50">a..</text></g><g><title>&lt;arrow_buffer::buffer::immutable::Buffer as core::clone::Clone&gt;::clone (336,463,070 samples, 1.90%)</title><rect x="25.1184%" y="373" width="1.9034%" height="15" fill="rgb(205,140,8)" fg:x="4440201254" fg:w="336463070"/><text x="25.3684%" y="383.50">&lt;..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (70,477,374 samples, 0.40%)</title><rect x="26.6231%" y="357" width="0.3987%" height="15" fill="rgb(228,84,46)" fg:x="4706186950" fg:w="70477374"/><text x="26.8731%" y="367.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (3,893,015 samples, 0.02%)</title><rect x="27.0218%" y="437" width="0.0220%" height="15" fill="rgb(254,188,9)" fg:x="4776664324" fg:w="3893015"/><text x="27.2718%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (42,172,479 samples, 0.24%)</title><rect x="27.3663%" y="421" width="0.2386%" height="15" fill="rgb(206,112,54)" fg:x="4837563285" fg:w="42172479"/><text x="27.6163%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22,799,005 samples, 0.13%)</title><rect x="27.4759%" y="405" width="0.1290%" height="15" fill="rgb(216,84,49)" fg:x="4856936759" fg:w="22799005"/><text x="27.7259%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (187,835,074 samples, 1.06%)</title><rect x="27.0439%" y="437" width="1.0626%" height="15" fill="rgb(214,194,35)" fg:x="4780557339" fg:w="187835074"/><text x="27.2939%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (88,656,649 samples, 0.50%)</title><rect x="27.6049%" y="421" width="0.5015%" height="15" fill="rgb(249,28,3)" fg:x="4879735764" fg:w="88656649"/><text x="27.8549%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,190,083 samples, 0.13%)</title><rect x="28.1064%" y="437" width="0.1312%" height="15" fill="rgb(222,56,52)" fg:x="4968392413" fg:w="23190083"/><text x="28.3564%" y="447.50"></text></g><g><title>&lt;arrow_array::iterator::ArrayIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,190,083 samples, 0.13%)</title><rect x="28.1064%" y="421" width="0.1312%" height="15" fill="rgb(245,217,50)" fg:x="4968392413" fg:w="23190083"/><text x="28.3564%" y="431.50"></text></g><g><title>&lt;i32 as arrow_buffer::native::ArrowNativeType&gt;::to_usize (26,290,692 samples, 0.15%)</title><rect x="29.4385%" y="325" width="0.1487%" height="15" fill="rgb(213,201,24)" fg:x="5203859356" fg:w="26290692"/><text x="29.6885%" y="335.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (26,290,692 samples, 0.15%)</title><rect x="29.4385%" y="309" width="0.1487%" height="15" fill="rgb(248,116,28)" fg:x="5203859356" fg:w="26290692"/><text x="29.6885%" y="319.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;i32&gt; for usize&gt;::try_from (26,290,692 samples, 0.15%)</title><rect x="29.4385%" y="293" width="0.1487%" height="15" fill="rgb(219,72,43)" fg:x="5203859356" fg:w="26290692"/><text x="29.6885%" y="303.50"></text></g><g><title>&lt;&amp;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as arrow_array::array::ArrayAccessor&gt;::value_unchecked (126,317,686 samples, 0.71%)</title><rect x="28.9815%" y="357" width="0.7146%" height="15" fill="rgb(209,138,14)" fg:x="5123069964" fg:w="126317686"/><text x="29.2315%" y="367.50"></text></g><g><title>arrow_array::array::byte_array::GenericByteArray&lt;T&gt;::value_unchecked (122,431,994 samples, 0.69%)</title><rect x="29.0034%" y="341" width="0.6926%" height="15" fill="rgb(222,18,33)" fg:x="5126955656" fg:w="122431994"/><text x="29.2534%" y="351.50"></text></g><g><title>arrow_array::array::byte_array::GenericByteArray&lt;T&gt;::value_offsets (19,237,602 samples, 0.11%)</title><rect x="29.5872%" y="325" width="0.1088%" height="15" fill="rgb(213,199,7)" fg:x="5230150048" fg:w="19237602"/><text x="29.8372%" y="335.50"></text></g><g><title>&lt;arrow_buffer::buffer::offset::OffsetBuffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (19,237,602 samples, 0.11%)</title><rect x="29.5872%" y="309" width="0.1088%" height="15" fill="rgb(250,110,10)" fg:x="5230150048" fg:w="19237602"/><text x="29.8372%" y="319.50"></text></g><g><title>&lt;arrow_buffer::buffer::scalar::ScalarBuffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (19,237,602 samples, 0.11%)</title><rect x="29.5872%" y="293" width="0.1088%" height="15" fill="rgb(248,123,6)" fg:x="5230150048" fg:w="19237602"/><text x="29.8372%" y="303.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::as_ptr (19,237,602 samples, 0.11%)</title><rect x="29.5872%" y="277" width="0.1088%" height="15" fill="rgb(206,91,31)" fg:x="5230150048" fg:w="19237602"/><text x="29.8372%" y="287.50"></text></g><g><title>&lt;arrow_array::iterator::ArrayIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (153,124,035 samples, 0.87%)</title><rect x="28.8517%" y="373" width="0.8662%" height="15" fill="rgb(211,154,13)" fg:x="5100135620" fg:w="153124035"/><text x="29.1017%" y="383.50"></text></g><g><title>arrow_array::iterator::ArrayIter&lt;T&gt;::is_null (3,872,005 samples, 0.02%)</title><rect x="29.6961%" y="357" width="0.0219%" height="15" fill="rgb(225,148,7)" fg:x="5249387650" fg:w="3872005"/><text x="29.9461%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3,872,005 samples, 0.02%)</title><rect x="29.6961%" y="341" width="0.0219%" height="15" fill="rgb(220,160,43)" fg:x="5249387650" fg:w="3872005"/><text x="29.9461%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (15,530,706 samples, 0.09%)</title><rect x="29.7180%" y="373" width="0.0879%" height="15" fill="rgb(213,52,39)" fg:x="5253259655" fg:w="15530706"/><text x="29.9680%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (180,414,145 samples, 1.02%)</title><rect x="28.8517%" y="405" width="1.0206%" height="15" fill="rgb(243,137,7)" fg:x="5100135620" fg:w="180414145"/><text x="29.1017%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (180,414,145 samples, 1.02%)</title><rect x="28.8517%" y="389" width="1.0206%" height="15" fill="rgb(230,79,13)" fg:x="5100135620" fg:w="180414145"/><text x="29.1017%" y="399.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (11,759,404 samples, 0.07%)</title><rect x="29.8058%" y="373" width="0.0665%" height="15" fill="rgb(247,105,23)" fg:x="5268790361" fg:w="11759404"/><text x="30.0558%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,759,404 samples, 0.07%)</title><rect x="29.8058%" y="357" width="0.0665%" height="15" fill="rgb(223,179,41)" fg:x="5268790361" fg:w="11759404"/><text x="30.0558%" y="367.50"></text></g><g><title>&lt;regex_automata::util::captures::CapturesPatternIter as core::iter::traits::iterator::Iterator&gt;::next (27,061,327 samples, 0.15%)</title><rect x="33.2396%" y="293" width="0.1531%" height="15" fill="rgb(218,9,34)" fg:x="5875776512" fg:w="27061327"/><text x="33.4896%" y="303.50"></text></g><g><title>&lt;regex::regex::string::SubCaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (38,770,933 samples, 0.22%)</title><rect x="33.2175%" y="309" width="0.2193%" height="15" fill="rgb(222,106,8)" fg:x="5871872039" fg:w="38770933"/><text x="33.4675%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7,805,133 samples, 0.04%)</title><rect x="33.3927%" y="293" width="0.0442%" height="15" fill="rgb(211,220,0)" fg:x="5902837839" fg:w="7805133"/><text x="33.6427%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (42,490,588 samples, 0.24%)</title><rect x="33.2175%" y="373" width="0.2404%" height="15" fill="rgb(229,52,16)" fg:x="5871872039" fg:w="42490588"/><text x="33.4675%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (42,490,588 samples, 0.24%)</title><rect x="33.2175%" y="357" width="0.2404%" height="15" fill="rgb(212,155,18)" fg:x="5871872039" fg:w="42490588"/><text x="33.4675%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (42,490,588 samples, 0.24%)</title><rect x="33.2175%" y="341" width="0.2404%" height="15" fill="rgb(242,21,14)" fg:x="5871872039" fg:w="42490588"/><text x="33.4675%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (42,490,588 samples, 0.24%)</title><rect x="33.2175%" y="325" width="0.2404%" height="15" fill="rgb(222,19,48)" fg:x="5871872039" fg:w="42490588"/><text x="33.4675%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3,719,655 samples, 0.02%)</title><rect x="33.4368%" y="309" width="0.0210%" height="15" fill="rgb(232,45,27)" fg:x="5910642972" fg:w="3719655"/><text x="33.6868%" y="319.50"></text></g><g><title>&lt;regex::regex::string::SubCaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (69,626,520 samples, 0.39%)</title><rect x="33.4578%" y="373" width="0.3939%" height="15" fill="rgb(249,103,42)" fg:x="5914362627" fg:w="69626520"/><text x="33.7078%" y="383.50"></text></g><g><title>&lt;regex_automata::util::captures::CapturesPatternIter as core::iter::traits::iterator::Iterator&gt;::next (69,626,520 samples, 0.39%)</title><rect x="33.4578%" y="357" width="0.3939%" height="15" fill="rgb(246,81,33)" fg:x="5914362627" fg:w="69626520"/><text x="33.7078%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27,118,306 samples, 0.15%)</title><rect x="33.6983%" y="341" width="0.1534%" height="15" fill="rgb(252,33,42)" fg:x="5956870841" fg:w="27118306"/><text x="33.9483%" y="351.50"></text></g><g><title>&lt;regex_automata::util::captures::GroupInfoPatternNames as core::iter::traits::iterator::Iterator&gt;::next (27,118,306 samples, 0.15%)</title><rect x="33.6983%" y="325" width="0.1534%" height="15" fill="rgb(209,212,41)" fg:x="5956870841" fg:w="27118306"/><text x="33.9483%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27,118,306 samples, 0.15%)</title><rect x="33.6983%" y="309" width="0.1534%" height="15" fill="rgb(207,154,6)" fg:x="5956870841" fg:w="27118306"/><text x="33.9483%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (154,546,516 samples, 0.87%)</title><rect x="33.8517%" y="293" width="0.8743%" height="15" fill="rgb(223,64,47)" fg:x="5983989147" fg:w="154546516"/><text x="34.1017%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (154,546,516 samples, 0.87%)</title><rect x="33.8517%" y="277" width="0.8743%" height="15" fill="rgb(211,161,38)" fg:x="5983989147" fg:w="154546516"/><text x="34.1017%" y="287.50"></text></g><g><title>cfree@GLIBC_2.2.5 (154,546,516 samples, 0.87%)</title><rect x="33.8517%" y="261" width="0.8743%" height="15" fill="rgb(219,138,40)" fg:x="5983989147" fg:w="154546516"/><text x="34.1017%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (166,138,098 samples, 0.94%)</title><rect x="33.8517%" y="373" width="0.9399%" height="15" fill="rgb(241,228,46)" fg:x="5983989147" fg:w="166138098"/><text x="34.1017%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (166,138,098 samples, 0.94%)</title><rect x="33.8517%" y="357" width="0.9399%" height="15" fill="rgb(223,209,38)" fg:x="5983989147" fg:w="166138098"/><text x="34.1017%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (166,138,098 samples, 0.94%)</title><rect x="33.8517%" y="341" width="0.9399%" height="15" fill="rgb(236,164,45)" fg:x="5983989147" fg:w="166138098"/><text x="34.1017%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (166,138,098 samples, 0.94%)</title><rect x="33.8517%" y="325" width="0.9399%" height="15" fill="rgb(231,15,5)" fg:x="5983989147" fg:w="166138098"/><text x="34.1017%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (166,138,098 samples, 0.94%)</title><rect x="33.8517%" y="309" width="0.9399%" height="15" fill="rgb(252,35,15)" fg:x="5983989147" fg:w="166138098"/><text x="34.1017%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (11,591,582 samples, 0.07%)</title><rect x="34.7260%" y="293" width="0.0656%" height="15" fill="rgb(248,181,18)" fg:x="6138535663" fg:w="11591582"/><text x="34.9760%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt;&gt;&gt; (142,451,975 samples, 0.81%)</title><rect x="34.7916%" y="341" width="0.8059%" height="15" fill="rgb(233,39,42)" fg:x="6150127245" fg:w="142451975"/><text x="35.0416%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt;&gt;&gt; (142,451,975 samples, 0.81%)</title><rect x="34.7916%" y="325" width="0.8059%" height="15" fill="rgb(238,110,33)" fg:x="6150127245" fg:w="142451975"/><text x="35.0416%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (142,451,975 samples, 0.81%)</title><rect x="34.7916%" y="309" width="0.8059%" height="15" fill="rgb(233,195,10)" fg:x="6150127245" fg:w="142451975"/><text x="35.0416%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (126,783,828 samples, 0.72%)</title><rect x="34.8802%" y="293" width="0.7172%" height="15" fill="rgb(254,105,3)" fg:x="6165795392" fg:w="126783828"/><text x="35.1302%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (126,783,828 samples, 0.72%)</title><rect x="34.8802%" y="277" width="0.7172%" height="15" fill="rgb(221,225,9)" fg:x="6165795392" fg:w="126783828"/><text x="35.1302%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (126,783,828 samples, 0.72%)</title><rect x="34.8802%" y="261" width="0.7172%" height="15" fill="rgb(224,227,45)" fg:x="6165795392" fg:w="126783828"/><text x="35.1302%" y="271.50"></text></g><g><title>cfree@GLIBC_2.2.5 (126,783,828 samples, 0.72%)</title><rect x="34.8802%" y="245" width="0.7172%" height="15" fill="rgb(229,198,43)" fg:x="6165795392" fg:w="126783828"/><text x="35.1302%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Captures&gt; (200,540,117 samples, 1.13%)</title><rect x="34.7916%" y="373" width="1.1345%" height="15" fill="rgb(206,209,35)" fg:x="6150127245" fg:w="200540117"/><text x="35.0416%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::captures::Captures&gt; (200,540,117 samples, 1.13%)</title><rect x="34.7916%" y="357" width="1.1345%" height="15" fill="rgb(245,195,53)" fg:x="6150127245" fg:w="200540117"/><text x="35.0416%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::captures::GroupInfo&gt; (58,088,142 samples, 0.33%)</title><rect x="35.5974%" y="341" width="0.3286%" height="15" fill="rgb(240,92,26)" fg:x="6292579220" fg:w="58088142"/><text x="35.8474%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;regex_automata::util::captures::GroupInfoInner&gt;&gt; (58,088,142 samples, 0.33%)</title><rect x="35.5974%" y="325" width="0.3286%" height="15" fill="rgb(207,40,23)" fg:x="6292579220" fg:w="58088142"/><text x="35.8474%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58,088,142 samples, 0.33%)</title><rect x="35.5974%" y="309" width="0.3286%" height="15" fill="rgb(223,111,35)" fg:x="6292579220" fg:w="58088142"/><text x="35.8474%" y="319.50"></text></g><g><title>regex::regex::string::Captures::iter (325,073,084 samples, 1.84%)</title><rect x="35.9260%" y="373" width="1.8390%" height="15" fill="rgb(229,147,28)" fg:x="6350667362" fg:w="325073084"/><text x="36.1760%" y="383.50">r..</text></g><g><title>regex::regex::string::Captures::len (42,778,552 samples, 0.24%)</title><rect x="37.7650%" y="373" width="0.2420%" height="15" fill="rgb(211,29,28)" fg:x="6675740446" fg:w="42778552"/><text x="38.0150%" y="383.50"></text></g><g><title>regex::regex::string::Match::as_str (53,699,577 samples, 0.30%)</title><rect x="38.0070%" y="373" width="0.3038%" height="15" fill="rgb(228,72,33)" fg:x="6718518998" fg:w="53699577"/><text x="38.2570%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (53,699,577 samples, 0.30%)</title><rect x="38.0070%" y="357" width="0.3038%" height="15" fill="rgb(205,214,31)" fg:x="6718518998" fg:w="53699577"/><text x="38.2570%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (53,699,577 samples, 0.30%)</title><rect x="38.0070%" y="341" width="0.3038%" height="15" fill="rgb(224,111,15)" fg:x="6718518998" fg:w="53699577"/><text x="38.2570%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (53,699,577 samples, 0.30%)</title><rect x="38.0070%" y="325" width="0.3038%" height="15" fill="rgb(253,21,26)" fg:x="6718518998" fg:w="53699577"/><text x="38.2570%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (23,007,182 samples, 0.13%)</title><rect x="38.1806%" y="309" width="0.1302%" height="15" fill="rgb(245,139,43)" fg:x="6749211393" fg:w="23007182"/><text x="38.4306%" y="319.50"></text></g><g><title>regex::regex::string::Regex::captures (15,493,277 samples, 0.09%)</title><rect x="38.3108%" y="373" width="0.0876%" height="15" fill="rgb(252,170,7)" fg:x="6772218575" fg:w="15493277"/><text x="38.5608%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (15,483,834 samples, 0.09%)</title><rect x="38.4642%" y="325" width="0.0876%" height="15" fill="rgb(231,118,14)" fg:x="6799340995" fg:w="15483834"/><text x="38.7142%" y="335.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (65,613,082 samples, 0.37%)</title><rect x="38.5518%" y="277" width="0.3712%" height="15" fill="rgb(238,83,0)" fg:x="6814824829" fg:w="65613082"/><text x="38.8018%" y="287.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (65,613,082 samples, 0.37%)</title><rect x="38.5518%" y="261" width="0.3712%" height="15" fill="rgb(221,39,39)" fg:x="6814824829" fg:w="65613082"/><text x="38.8018%" y="271.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (15,615,256 samples, 0.09%)</title><rect x="38.9230%" y="277" width="0.0883%" height="15" fill="rgb(222,119,46)" fg:x="6880437911" fg:w="15615256"/><text x="39.1730%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (15,615,256 samples, 0.09%)</title><rect x="38.9230%" y="261" width="0.0883%" height="15" fill="rgb(222,165,49)" fg:x="6880437911" fg:w="15615256"/><text x="39.1730%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15,615,256 samples, 0.09%)</title><rect x="38.9230%" y="245" width="0.0883%" height="15" fill="rgb(219,113,52)" fg:x="6880437911" fg:w="15615256"/><text x="39.1730%" y="255.50"></text></g><g><title>hashbrown::control::tag::Tag::full (19,424,159 samples, 0.11%)</title><rect x="39.0113%" y="277" width="0.1099%" height="15" fill="rgb(214,7,15)" fg:x="6896053167" fg:w="19424159"/><text x="39.2613%" y="287.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (302,820,146 samples, 1.71%)</title><rect x="39.2528%" y="261" width="1.7131%" height="15" fill="rgb(235,32,4)" fg:x="6938737514" fg:w="302820146"/><text x="39.5028%" y="271.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (302,820,146 samples, 1.71%)</title><rect x="39.2528%" y="245" width="1.7131%" height="15" fill="rgb(238,90,54)" fg:x="6938737514" fg:w="302820146"/><text x="39.5028%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (302,820,146 samples, 1.71%)</title><rect x="39.2528%" y="229" width="1.7131%" height="15" fill="rgb(213,208,19)" fg:x="6938737514" fg:w="302820146"/><text x="39.5028%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (302,820,146 samples, 1.71%)</title><rect x="39.2528%" y="213" width="1.7131%" height="15" fill="rgb(233,156,4)" fg:x="6938737514" fg:w="302820146"/><text x="39.5028%" y="223.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (302,820,146 samples, 1.71%)</title><rect x="39.2528%" y="197" width="1.7131%" height="15" fill="rgb(207,194,5)" fg:x="6938737514" fg:w="302820146"/><text x="39.5028%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (302,820,146 samples, 1.71%)</title><rect x="39.2528%" y="181" width="1.7131%" height="15" fill="rgb(206,111,30)" fg:x="6938737514" fg:w="302820146"/><text x="39.5028%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (302,820,146 samples, 1.71%)</title><rect x="39.2528%" y="165" width="1.7131%" height="15" fill="rgb(243,70,54)" fg:x="6938737514" fg:w="302820146"/><text x="39.5028%" y="175.50"></text></g><g><title>__memcmp_avx2_movbe (148,156,053 samples, 0.84%)</title><rect x="40.1277%" y="149" width="0.8381%" height="15" fill="rgb(242,28,8)" fg:x="7093401607" fg:w="148156053"/><text x="40.3777%" y="159.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3,925,889 samples, 0.02%)</title><rect x="40.9659%" y="261" width="0.0222%" height="15" fill="rgb(219,106,18)" fg:x="7241557660" fg:w="3925889"/><text x="41.2159%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3,925,889 samples, 0.02%)</title><rect x="40.9659%" y="245" width="0.0222%" height="15" fill="rgb(244,222,10)" fg:x="7241557660" fg:w="3925889"/><text x="41.2159%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,925,889 samples, 0.02%)</title><rect x="40.9659%" y="229" width="0.0222%" height="15" fill="rgb(236,179,52)" fg:x="7241557660" fg:w="3925889"/><text x="41.2159%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (341,727,906 samples, 1.93%)</title><rect x="39.1212%" y="277" width="1.9332%" height="15" fill="rgb(213,23,39)" fg:x="6915477326" fg:w="341727906"/><text x="39.3712%" y="287.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (11,721,683 samples, 0.07%)</title><rect x="40.9881%" y="261" width="0.0663%" height="15" fill="rgb(238,48,10)" fg:x="7245483549" fg:w="11721683"/><text x="41.2381%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11,721,683 samples, 0.07%)</title><rect x="40.9881%" y="245" width="0.0663%" height="15" fill="rgb(251,196,23)" fg:x="7245483549" fg:w="11721683"/><text x="41.2381%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (11,721,683 samples, 0.07%)</title><rect x="40.9881%" y="229" width="0.0663%" height="15" fill="rgb(250,152,24)" fg:x="7245483549" fg:w="11721683"/><text x="41.2381%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,346,144,042 samples, 13.27%)</title><rect x="28.2376%" y="437" width="13.2723%" height="15" fill="rgb(209,150,17)" fg:x="4991582496" fg:w="2346144042"/><text x="28.4876%" y="447.50">&lt;core::iter::adapter..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,291,826,734 samples, 12.96%)</title><rect x="28.5449%" y="421" width="12.9650%" height="15" fill="rgb(234,202,34)" fg:x="5045899804" fg:w="2291826734"/><text x="28.7949%" y="431.50">core::iter::traits:..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (2,057,176,773 samples, 11.64%)</title><rect x="29.8723%" y="405" width="11.6376%" height="15" fill="rgb(253,148,53)" fg:x="5280549765" fg:w="2057176773"/><text x="30.1223%" y="415.50">core::iter::adapt..</text></g><g><title>arrow_string::regexp::regexp_array_match::_{{closure}} (2,057,176,773 samples, 11.64%)</title><rect x="29.8723%" y="389" width="11.6376%" height="15" fill="rgb(218,129,16)" fg:x="5280549765" fg:w="2057176773"/><text x="30.1223%" y="399.50">arrow_string::reg..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (550,014,686 samples, 3.11%)</title><rect x="38.3984%" y="373" width="3.1115%" height="15" fill="rgb(216,85,19)" fg:x="6787711852" fg:w="550014686"/><text x="38.6484%" y="383.50">std..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (550,014,686 samples, 3.11%)</title><rect x="38.3984%" y="357" width="3.1115%" height="15" fill="rgb(235,228,7)" fg:x="6787711852" fg:w="550014686"/><text x="38.6484%" y="367.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (550,014,686 samples, 3.11%)</title><rect x="38.3984%" y="341" width="3.1115%" height="15" fill="rgb(245,175,0)" fg:x="6787711852" fg:w="550014686"/><text x="38.6484%" y="351.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (522,901,709 samples, 2.96%)</title><rect x="38.5518%" y="325" width="2.9581%" height="15" fill="rgb(208,168,36)" fg:x="6814824829" fg:w="522901709"/><text x="38.8018%" y="335.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (522,901,709 samples, 2.96%)</title><rect x="38.5518%" y="309" width="2.9581%" height="15" fill="rgb(246,171,24)" fg:x="6814824829" fg:w="522901709"/><text x="38.8018%" y="319.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (522,901,709 samples, 2.96%)</title><rect x="38.5518%" y="293" width="2.9581%" height="15" fill="rgb(215,142,24)" fg:x="6814824829" fg:w="522901709"/><text x="38.8018%" y="303.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (80,521,306 samples, 0.46%)</title><rect x="41.0544%" y="277" width="0.4555%" height="15" fill="rgb(250,187,7)" fg:x="7257205232" fg:w="80521306"/><text x="41.3044%" y="287.50"></text></g><g><title>&lt;flatbuffers::builder::DefaultAllocator as flatbuffers::builder::Allocator&gt;::grow_downwards (2,219,146 samples, 0.01%)</title><rect x="41.5099%" y="437" width="0.0126%" height="15" fill="rgb(228,66,33)" fg:x="7337726538" fg:w="2219146"/><text x="41.7599%" y="447.50"></text></g><g><title>&lt;flatbuffers::builder::FlatBufferBuilder as core::default::Default&gt;::default (2,125,791 samples, 0.01%)</title><rect x="41.5224%" y="437" width="0.0120%" height="15" fill="rgb(234,215,21)" fg:x="7339945684" fg:w="2125791"/><text x="41.7724%" y="447.50"></text></g><g><title>flatbuffers::builder::FlatBufferBuilder::with_capacity (2,125,791 samples, 0.01%)</title><rect x="41.5224%" y="421" width="0.0120%" height="15" fill="rgb(222,191,20)" fg:x="7339945684" fg:w="2125791"/><text x="41.7724%" y="431.50"></text></g><g><title>flatbuffers::builder::FlatBufferBuilder::from_vec (2,125,791 samples, 0.01%)</title><rect x="41.5224%" y="405" width="0.0120%" height="15" fill="rgb(245,79,54)" fg:x="7339945684" fg:w="2125791"/><text x="41.7724%" y="415.50"></text></g><g><title>flatbuffers::builder::FlatBufferBuilder&lt;A&gt;::new_in (2,125,791 samples, 0.01%)</title><rect x="41.5224%" y="389" width="0.0120%" height="15" fill="rgb(240,10,37)" fg:x="7339945684" fg:w="2125791"/><text x="41.7724%" y="399.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (3,165,072 samples, 0.02%)</title><rect x="41.5345%" y="437" width="0.0179%" height="15" fill="rgb(214,192,32)" fg:x="7342071475" fg:w="3165072"/><text x="41.7845%" y="447.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,165,072 samples, 0.02%)</title><rect x="41.5345%" y="421" width="0.0179%" height="15" fill="rgb(209,36,54)" fg:x="7342071475" fg:w="3165072"/><text x="41.7845%" y="431.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3,165,072 samples, 0.02%)</title><rect x="41.5345%" y="405" width="0.0179%" height="15" fill="rgb(220,10,11)" fg:x="7342071475" fg:w="3165072"/><text x="41.7845%" y="415.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (5,249,363 samples, 0.03%)</title><rect x="41.5524%" y="437" width="0.0297%" height="15" fill="rgb(221,106,17)" fg:x="7345236547" fg:w="5249363"/><text x="41.8024%" y="447.50"></text></g><g><title>&lt;hyper::body::incoming::Incoming as http_body::Body&gt;::poll_frame (3,162,353 samples, 0.02%)</title><rect x="41.5821%" y="437" width="0.0179%" height="15" fill="rgb(251,142,44)" fg:x="7350485910" fg:w="3162353"/><text x="41.8321%" y="447.50"></text></g><g><title>&lt;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as arrow_array::array::Array&gt;::len (7,723,005 samples, 0.04%)</title><rect x="41.6271%" y="405" width="0.0437%" height="15" fill="rgb(238,13,15)" fg:x="7358440311" fg:w="7723005"/><text x="41.8771%" y="415.50"></text></g><g><title>&lt;arrow_buffer::buffer::offset::OffsetBuffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7,723,005 samples, 0.04%)</title><rect x="41.6271%" y="389" width="0.0437%" height="15" fill="rgb(208,107,27)" fg:x="7358440311" fg:w="7723005"/><text x="41.8771%" y="399.50"></text></g><g><title>&lt;arrow_buffer::buffer::scalar::ScalarBuffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7,723,005 samples, 0.04%)</title><rect x="41.6271%" y="373" width="0.0437%" height="15" fill="rgb(205,136,37)" fg:x="7358440311" fg:w="7723005"/><text x="41.8771%" y="383.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (23,514,883 samples, 0.13%)</title><rect x="41.6708%" y="405" width="0.1330%" height="15" fill="rgb(250,205,27)" fg:x="7366163316" fg:w="23514883"/><text x="41.9208%" y="415.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (23,514,883 samples, 0.13%)</title><rect x="41.6708%" y="389" width="0.1330%" height="15" fill="rgb(210,80,43)" fg:x="7366163316" fg:w="23514883"/><text x="41.9208%" y="399.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (23,514,883 samples, 0.13%)</title><rect x="41.6708%" y="373" width="0.1330%" height="15" fill="rgb(247,160,36)" fg:x="7366163316" fg:w="23514883"/><text x="41.9208%" y="383.50"></text></g><g><title>arrow_array::array::list_array::GenericListArray&lt;OffsetSize&gt;::value (3,912,486 samples, 0.02%)</title><rect x="41.8038%" y="405" width="0.0221%" height="15" fill="rgb(234,13,49)" fg:x="7389678199" fg:w="3912486"/><text x="42.0538%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19,528,988 samples, 0.11%)</title><rect x="41.8259%" y="405" width="0.1105%" height="15" fill="rgb(234,122,0)" fg:x="7393590685" fg:w="19528988"/><text x="42.0759%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19,528,988 samples, 0.11%)</title><rect x="41.8259%" y="389" width="0.1105%" height="15" fill="rgb(207,146,38)" fg:x="7393590685" fg:w="19528988"/><text x="42.0759%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (7,924,950 samples, 0.04%)</title><rect x="42.2692%" y="373" width="0.0448%" height="15" fill="rgb(207,177,25)" fg:x="7471957772" fg:w="7924950"/><text x="42.5192%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7,924,950 samples, 0.04%)</title><rect x="42.2692%" y="357" width="0.0448%" height="15" fill="rgb(211,178,42)" fg:x="7471957772" fg:w="7924950"/><text x="42.5192%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt; (168,532,396 samples, 0.95%)</title><rect x="41.9364%" y="405" width="0.9534%" height="15" fill="rgb(230,69,54)" fg:x="7413119673" fg:w="168532396"/><text x="42.1864%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (168,532,396 samples, 0.95%)</title><rect x="41.9364%" y="389" width="0.9534%" height="15" fill="rgb(214,135,41)" fg:x="7413119673" fg:w="168532396"/><text x="42.1864%" y="399.50"></text></g><g><title>cfree@GLIBC_2.2.5 (101,769,347 samples, 0.58%)</title><rect x="42.3141%" y="373" width="0.5757%" height="15" fill="rgb(237,67,25)" fg:x="7479882722" fg:w="101769347"/><text x="42.5641%" y="383.50"></text></g><g><title>&lt;poros::application::actors::parser::ParsingActor as actix::handler::Handler&lt;poros::application::actors::broadcast::RecordBatchWrapper&gt;&gt;::handle (536,202,805 samples, 3.03%)</title><rect x="41.6049%" y="437" width="3.0333%" height="15" fill="rgb(222,189,50)" fg:x="7354523283" fg:w="536202805"/><text x="41.8549%" y="447.50">&lt;po..</text></g><g><title>poros::application::actors::parser::apply_regex_pattern (536,202,805 samples, 3.03%)</title><rect x="41.6049%" y="421" width="3.0333%" height="15" fill="rgb(245,148,34)" fg:x="7354523283" fg:w="536202805"/><text x="41.8549%" y="431.50">por..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (309,074,019 samples, 1.75%)</title><rect x="42.8898%" y="405" width="1.7484%" height="15" fill="rgb(222,29,6)" fg:x="7581652069" fg:w="309074019"/><text x="43.1398%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (309,074,019 samples, 1.75%)</title><rect x="42.8898%" y="389" width="1.7484%" height="15" fill="rgb(221,189,43)" fg:x="7581652069" fg:w="309074019"/><text x="43.1398%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309,074,019 samples, 1.75%)</title><rect x="42.8898%" y="373" width="1.7484%" height="15" fill="rgb(207,36,27)" fg:x="7581652069" fg:w="309074019"/><text x="43.1398%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (250,393,727 samples, 1.42%)</title><rect x="43.2217%" y="357" width="1.4165%" height="15" fill="rgb(217,90,24)" fg:x="7640332361" fg:w="250393727"/><text x="43.4717%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (250,393,727 samples, 1.42%)</title><rect x="43.2217%" y="341" width="1.4165%" height="15" fill="rgb(224,66,35)" fg:x="7640332361" fg:w="250393727"/><text x="43.4717%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (250,393,727 samples, 1.42%)</title><rect x="43.2217%" y="325" width="1.4165%" height="15" fill="rgb(221,13,50)" fg:x="7640332361" fg:w="250393727"/><text x="43.4717%" y="335.50"></text></g><g><title>cfree@GLIBC_2.2.5 (250,393,727 samples, 1.42%)</title><rect x="43.2217%" y="309" width="1.4165%" height="15" fill="rgb(236,68,49)" fg:x="7640332361" fg:w="250393727"/><text x="43.4717%" y="319.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (34,666,014 samples, 0.20%)</title><rect x="44.6382%" y="437" width="0.1961%" height="15" fill="rgb(229,146,28)" fg:x="7890726088" fg:w="34666014"/><text x="44.8882%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (88,796,759 samples, 0.50%)</title><rect x="44.9868%" y="421" width="0.5023%" height="15" fill="rgb(225,31,38)" fg:x="7952346480" fg:w="88796759"/><text x="45.2368%" y="431.50"></text></g><g><title>&lt;regex_automata::util::captures::GroupInfoPatternNames as core::iter::traits::iterator::Iterator&gt;::next (58,130,759 samples, 0.33%)</title><rect x="45.1603%" y="405" width="0.3288%" height="15" fill="rgb(250,208,3)" fg:x="7983012480" fg:w="58130759"/><text x="45.4103%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (58,130,759 samples, 0.33%)</title><rect x="45.1603%" y="389" width="0.3288%" height="15" fill="rgb(246,54,23)" fg:x="7983012480" fg:w="58130759"/><text x="45.4103%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (38,757,882 samples, 0.22%)</title><rect x="45.2699%" y="373" width="0.2193%" height="15" fill="rgb(243,76,11)" fg:x="8002385357" fg:w="38757882"/><text x="45.5199%" y="383.50"></text></g><g><title>&lt;regex_automata::util::captures::CapturesPatternIter as core::iter::traits::iterator::Iterator&gt;::next (207,267,680 samples, 1.17%)</title><rect x="44.8343%" y="437" width="1.1725%" height="15" fill="rgb(245,21,50)" fg:x="7925392102" fg:w="207267680"/><text x="45.0843%" y="447.50"></text></g><g><title>regex_automata::util::captures::Captures::get_group (91,516,543 samples, 0.52%)</title><rect x="45.4892%" y="421" width="0.5177%" height="15" fill="rgb(228,9,43)" fg:x="8041143239" fg:w="91516543"/><text x="45.7392%" y="431.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::pattern_len (19,243,475 samples, 0.11%)</title><rect x="45.8980%" y="405" width="0.1089%" height="15" fill="rgb(208,100,47)" fg:x="8113416307" fg:w="19243475"/><text x="46.1480%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19,243,475 samples, 0.11%)</title><rect x="45.8980%" y="389" width="0.1089%" height="15" fill="rgb(232,26,8)" fg:x="8113416307" fg:w="19243475"/><text x="46.1480%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (19,243,475 samples, 0.11%)</title><rect x="45.8980%" y="373" width="0.1089%" height="15" fill="rgb(216,166,38)" fg:x="8113416307" fg:w="19243475"/><text x="46.1480%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (19,243,475 samples, 0.11%)</title><rect x="45.8980%" y="357" width="0.1089%" height="15" fill="rgb(251,202,51)" fg:x="8113416307" fg:w="19243475"/><text x="46.1480%" y="367.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (2,128,197 samples, 0.01%)</title><rect x="46.0069%" y="437" width="0.0120%" height="15" fill="rgb(254,216,34)" fg:x="8132659782" fg:w="2128197"/><text x="46.2569%" y="447.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (2,128,197 samples, 0.01%)</title><rect x="46.0069%" y="421" width="0.0120%" height="15" fill="rgb(251,32,27)" fg:x="8132659782" fg:w="2128197"/><text x="46.2569%" y="431.50"></text></g><g><title>core::fmt::write (2,128,197 samples, 0.01%)</title><rect x="46.0069%" y="405" width="0.0120%" height="15" fill="rgb(208,127,28)" fg:x="8132659782" fg:w="2128197"/><text x="46.2569%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,128,197 samples, 0.01%)</title><rect x="46.0069%" y="389" width="0.0120%" height="15" fill="rgb(224,137,22)" fg:x="8132659782" fg:w="2128197"/><text x="46.2569%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (2,128,197 samples, 0.01%)</title><rect x="46.0069%" y="373" width="0.0120%" height="15" fill="rgb(254,70,32)" fg:x="8132659782" fg:w="2128197"/><text x="46.2569%" y="383.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put (246,636,517 samples, 1.40%)</title><rect x="46.0189%" y="421" width="1.3952%" height="15" fill="rgb(229,75,37)" fg:x="8134787979" fg:w="246636517"/><text x="46.2689%" y="431.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (246,636,517 samples, 1.40%)</title><rect x="46.0189%" y="405" width="1.3952%" height="15" fill="rgb(252,64,23)" fg:x="8134787979" fg:w="246636517"/><text x="46.2689%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (246,636,517 samples, 1.40%)</title><rect x="46.0189%" y="389" width="1.3952%" height="15" fill="rgb(232,162,48)" fg:x="8134787979" fg:w="246636517"/><text x="46.2689%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (246,636,517 samples, 1.40%)</title><rect x="46.0189%" y="373" width="1.3952%" height="15" fill="rgb(246,160,12)" fg:x="8134787979" fg:w="246636517"/><text x="46.2689%" y="383.50"></text></g><g><title>[unknown] (11,568,527 samples, 0.07%)</title><rect x="47.3487%" y="357" width="0.0654%" height="15" fill="rgb(247,166,0)" fg:x="8369855969" fg:w="11568527"/><text x="47.5987%" y="367.50"></text></g><g><title>[unknown] (8,268,382 samples, 0.05%)</title><rect x="47.3674%" y="341" width="0.0468%" height="15" fill="rgb(249,219,21)" fg:x="8373156114" fg:w="8268382"/><text x="47.6174%" y="351.50"></text></g><g><title>[unknown] (5,124,349 samples, 0.03%)</title><rect x="47.3852%" y="325" width="0.0290%" height="15" fill="rgb(205,209,3)" fg:x="8376300147" fg:w="5124349"/><text x="47.6352%" y="335.50"></text></g><g><title>[unknown] (5,124,349 samples, 0.03%)</title><rect x="47.3852%" y="309" width="0.0290%" height="15" fill="rgb(243,44,1)" fg:x="8376300147" fg:w="5124349"/><text x="47.6352%" y="319.50"></text></g><g><title>[unknown] (3,312,468 samples, 0.02%)</title><rect x="47.3954%" y="293" width="0.0187%" height="15" fill="rgb(206,159,16)" fg:x="8378112028" fg:w="3312468"/><text x="47.6454%" y="303.50"></text></g><g><title>[libc.so.6] (512,449,489 samples, 2.90%)</title><rect x="46.0189%" y="437" width="2.8990%" height="15" fill="rgb(244,77,30)" fg:x="8134787979" fg:w="512449489"/><text x="46.2689%" y="447.50">[l..</text></g><g><title>alloc::raw_vec::finish_grow (265,812,972 samples, 1.50%)</title><rect x="47.4141%" y="421" width="1.5037%" height="15" fill="rgb(218,69,12)" fg:x="8381424496" fg:w="265812972"/><text x="47.6641%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (265,812,972 samples, 1.50%)</title><rect x="47.4141%" y="405" width="1.5037%" height="15" fill="rgb(212,87,7)" fg:x="8381424496" fg:w="265812972"/><text x="47.6641%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (265,812,972 samples, 1.50%)</title><rect x="47.4141%" y="389" width="1.5037%" height="15" fill="rgb(245,114,25)" fg:x="8381424496" fg:w="265812972"/><text x="47.6641%" y="399.50"></text></g><g><title>alloc::alloc::realloc (265,812,972 samples, 1.50%)</title><rect x="47.4141%" y="373" width="1.5037%" height="15" fill="rgb(210,61,42)" fg:x="8381424496" fg:w="265812972"/><text x="47.6641%" y="383.50"></text></g><g><title>realloc (265,812,972 samples, 1.50%)</title><rect x="47.4141%" y="357" width="1.5037%" height="15" fill="rgb(211,52,33)" fg:x="8381424496" fg:w="265812972"/><text x="47.6641%" y="367.50"></text></g><g><title>_int_realloc (265,812,972 samples, 1.50%)</title><rect x="47.4141%" y="341" width="1.5037%" height="15" fill="rgb(234,58,33)" fg:x="8381424496" fg:w="265812972"/><text x="47.6641%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (265,812,972 samples, 1.50%)</title><rect x="47.4141%" y="325" width="1.5037%" height="15" fill="rgb(220,115,36)" fg:x="8381424496" fg:w="265812972"/><text x="47.6641%" y="335.50"></text></g><g><title>[unknown] (3,813,871 samples, 0.02%)</title><rect x="48.8963%" y="309" width="0.0216%" height="15" fill="rgb(243,153,54)" fg:x="8643423597" fg:w="3813871"/><text x="49.1463%" y="319.50"></text></g><g><title>[unknown] (3,813,871 samples, 0.02%)</title><rect x="48.8963%" y="293" width="0.0216%" height="15" fill="rgb(251,47,18)" fg:x="8643423597" fg:w="3813871"/><text x="49.1463%" y="303.50"></text></g><g><title>[poros] (61,721,920 samples, 0.35%)</title><rect x="48.9179%" y="437" width="0.3492%" height="15" fill="rgb(242,102,42)" fg:x="8647237468" fg:w="61721920"/><text x="49.1679%" y="447.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::reallocate (61,721,920 samples, 0.35%)</title><rect x="48.9179%" y="421" width="0.3492%" height="15" fill="rgb(234,31,38)" fg:x="8647237468" fg:w="61721920"/><text x="49.1679%" y="431.50"></text></g><g><title>alloc::alloc::realloc (61,721,920 samples, 0.35%)</title><rect x="48.9179%" y="405" width="0.3492%" height="15" fill="rgb(221,117,51)" fg:x="8647237468" fg:w="61721920"/><text x="49.1679%" y="415.50"></text></g><g><title>__rustc::__rdl_realloc (61,721,920 samples, 0.35%)</title><rect x="48.9179%" y="389" width="0.3492%" height="15" fill="rgb(212,20,18)" fg:x="8647237468" fg:w="61721920"/><text x="49.1679%" y="399.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (61,721,920 samples, 0.35%)</title><rect x="48.9179%" y="373" width="0.3492%" height="15" fill="rgb(245,133,36)" fg:x="8647237468" fg:w="61721920"/><text x="49.1679%" y="383.50"></text></g><g><title>std::sys::alloc::realloc_fallback (61,721,920 samples, 0.35%)</title><rect x="48.9179%" y="357" width="0.3492%" height="15" fill="rgb(212,6,19)" fg:x="8647237468" fg:w="61721920"/><text x="49.1679%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (61,721,920 samples, 0.35%)</title><rect x="48.9179%" y="341" width="0.3492%" height="15" fill="rgb(218,1,36)" fg:x="8647237468" fg:w="61721920"/><text x="49.1679%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (61,721,920 samples, 0.35%)</title><rect x="48.9179%" y="325" width="0.3492%" height="15" fill="rgb(246,84,54)" fg:x="8647237468" fg:w="61721920"/><text x="49.1679%" y="335.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::add_buffer (3,119,684 samples, 0.02%)</title><rect x="49.2912%" y="421" width="0.0176%" height="15" fill="rgb(242,110,6)" fg:x="8713231351" fg:w="3119684"/><text x="49.5412%" y="431.50"></text></g><g><title>arrow_ipc::writer::write_buffer (153,482,727 samples, 0.87%)</title><rect x="49.3088%" y="421" width="0.8683%" height="15" fill="rgb(214,47,5)" fg:x="8716351035" fg:w="153482727"/><text x="49.5588%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (153,482,727 samples, 0.87%)</title><rect x="49.3088%" y="405" width="0.8683%" height="15" fill="rgb(218,159,25)" fg:x="8716351035" fg:w="153482727"/><text x="49.5588%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (153,482,727 samples, 0.87%)</title><rect x="49.3088%" y="389" width="0.8683%" height="15" fill="rgb(215,211,28)" fg:x="8716351035" fg:w="153482727"/><text x="49.5588%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (153,482,727 samples, 0.87%)</title><rect x="49.3088%" y="373" width="0.8683%" height="15" fill="rgb(238,59,32)" fg:x="8716351035" fg:w="153482727"/><text x="49.5588%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (153,482,727 samples, 0.87%)</title><rect x="49.3088%" y="357" width="0.8683%" height="15" fill="rgb(226,82,3)" fg:x="8716351035" fg:w="153482727"/><text x="49.5588%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (153,482,727 samples, 0.87%)</title><rect x="49.3088%" y="341" width="0.8683%" height="15" fill="rgb(240,164,32)" fg:x="8716351035" fg:w="153482727"/><text x="49.5588%" y="351.50"></text></g><g><title>[unknown] (44,091,903 samples, 0.25%)</title><rect x="49.9277%" y="325" width="0.2494%" height="15" fill="rgb(232,46,7)" fg:x="8825741859" fg:w="44091903"/><text x="50.1777%" y="335.50"></text></g><g><title>[unknown] (24,703,910 samples, 0.14%)</title><rect x="50.0373%" y="309" width="0.1398%" height="15" fill="rgb(229,129,53)" fg:x="8845129852" fg:w="24703910"/><text x="50.2873%" y="319.50"></text></g><g><title>[unknown] (22,474,479 samples, 0.13%)</title><rect x="50.0500%" y="293" width="0.1271%" height="15" fill="rgb(234,188,29)" fg:x="8847359283" fg:w="22474479"/><text x="50.3000%" y="303.50"></text></g><g><title>[unknown] (21,197,763 samples, 0.12%)</title><rect x="50.0572%" y="277" width="0.1199%" height="15" fill="rgb(246,141,4)" fg:x="8848635999" fg:w="21197763"/><text x="50.3072%" y="287.50"></text></g><g><title>[unknown] (18,678,271 samples, 0.11%)</title><rect x="50.0714%" y="261" width="0.1057%" height="15" fill="rgb(229,23,39)" fg:x="8851155491" fg:w="18678271"/><text x="50.3214%" y="271.50"></text></g><g><title>[unknown] (16,368,669 samples, 0.09%)</title><rect x="50.0845%" y="245" width="0.0926%" height="15" fill="rgb(206,12,3)" fg:x="8853465093" fg:w="16368669"/><text x="50.3345%" y="255.50"></text></g><g><title>[unknown] (11,748,337 samples, 0.07%)</title><rect x="50.1106%" y="229" width="0.0665%" height="15" fill="rgb(252,226,20)" fg:x="8858085425" fg:w="11748337"/><text x="50.3606%" y="239.50"></text></g><g><title>[unknown] (11,748,337 samples, 0.07%)</title><rect x="50.1106%" y="213" width="0.0665%" height="15" fill="rgb(216,123,35)" fg:x="8858085425" fg:w="11748337"/><text x="50.3606%" y="223.50"></text></g><g><title>[unknown] (11,748,337 samples, 0.07%)</title><rect x="50.1106%" y="197" width="0.0665%" height="15" fill="rgb(212,68,40)" fg:x="8858085425" fg:w="11748337"/><text x="50.3606%" y="207.50"></text></g><g><title>[unknown] (11,748,337 samples, 0.07%)</title><rect x="50.1106%" y="181" width="0.0665%" height="15" fill="rgb(254,125,32)" fg:x="8858085425" fg:w="11748337"/><text x="50.3606%" y="191.50"></text></g><g><title>[unknown] (11,748,337 samples, 0.07%)</title><rect x="50.1106%" y="165" width="0.0665%" height="15" fill="rgb(253,97,22)" fg:x="8858085425" fg:w="11748337"/><text x="50.3606%" y="175.50"></text></g><g><title>[unknown] (9,232,434 samples, 0.05%)</title><rect x="50.1249%" y="149" width="0.0522%" height="15" fill="rgb(241,101,14)" fg:x="8860601328" fg:w="9232434"/><text x="50.3749%" y="159.50"></text></g><g><title>[unknown] (6,796,268 samples, 0.04%)</title><rect x="50.1386%" y="133" width="0.0384%" height="15" fill="rgb(238,103,29)" fg:x="8863037494" fg:w="6796268"/><text x="50.3886%" y="143.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (1,796,930 samples, 0.01%)</title><rect x="50.1771%" y="421" width="0.0102%" height="15" fill="rgb(233,195,47)" fg:x="8869833762" fg:w="1796930"/><text x="50.4271%" y="431.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (9,262,841 samples, 0.05%)</title><rect x="50.2069%" y="181" width="0.0524%" height="15" fill="rgb(246,218,30)" fg:x="8875097307" fg:w="9262841"/><text x="50.4569%" y="191.50"></text></g><g><title>malloc_consolidate (9,262,841 samples, 0.05%)</title><rect x="50.2069%" y="165" width="0.0524%" height="15" fill="rgb(219,145,47)" fg:x="8875097307" fg:w="9262841"/><text x="50.4569%" y="175.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="421" width="0.1091%" height="15" fill="rgb(243,12,26)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="431.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="405" width="0.1091%" height="15" fill="rgb(214,87,16)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="415.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="389" width="0.1091%" height="15" fill="rgb(208,99,42)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="399.50"></text></g><g><title>bytes::bytes_mut::release_shared (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="373" width="0.1091%" height="15" fill="rgb(253,99,2)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="383.50"></text></g><g><title>core::mem::drop (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="357" width="0.1091%" height="15" fill="rgb(220,168,23)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="341" width="0.1091%" height="15" fill="rgb(242,38,24)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="325" width="0.1091%" height="15" fill="rgb(225,182,9)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="309" width="0.1091%" height="15" fill="rgb(243,178,37)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="293" width="0.1091%" height="15" fill="rgb(232,139,19)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="277" width="0.1091%" height="15" fill="rgb(225,201,24)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="261" width="0.1091%" height="15" fill="rgb(221,47,46)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="245" width="0.1091%" height="15" fill="rgb(249,23,13)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="229" width="0.1091%" height="15" fill="rgb(219,9,5)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="239.50"></text></g><g><title>cfree@GLIBC_2.2.5 (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="213" width="0.1091%" height="15" fill="rgb(254,171,16)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="223.50"></text></g><g><title>_int_free_chunk (19,284,378 samples, 0.11%)</title><rect x="50.1873%" y="197" width="0.1091%" height="15" fill="rgb(230,171,20)" fg:x="8871630692" fg:w="19284378"/><text x="50.4373%" y="207.50"></text></g><g><title>_int_free_merge_chunk (6,554,922 samples, 0.04%)</title><rect x="50.2593%" y="181" width="0.0371%" height="15" fill="rgb(210,71,41)" fg:x="8884360148" fg:w="6554922"/><text x="50.5093%" y="191.50"></text></g><g><title>_int_free_create_chunk (3,227,037 samples, 0.02%)</title><rect x="50.2781%" y="165" width="0.0183%" height="15" fill="rgb(206,173,20)" fg:x="8887688033" fg:w="3227037"/><text x="50.5281%" y="175.50"></text></g><g><title>[unknown] (193,423,024 samples, 1.09%)</title><rect x="49.2670%" y="437" width="1.0942%" height="15" fill="rgb(233,88,34)" fg:x="8708959388" fg:w="193423024"/><text x="49.5170%" y="447.50"></text></g><g><title>regex::regex::string::Regex::captures_at (11,467,342 samples, 0.06%)</title><rect x="50.2964%" y="421" width="0.0649%" height="15" fill="rgb(223,209,46)" fg:x="8890915070" fg:w="11467342"/><text x="50.5464%" y="431.50"></text></g><g><title>__rustc::__rust_dealloc (3,739,953 samples, 0.02%)</title><rect x="50.3612%" y="437" width="0.0212%" height="15" fill="rgb(250,43,18)" fg:x="8902382412" fg:w="3739953"/><text x="50.6112%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt; (3,937,678 samples, 0.02%)</title><rect x="50.3824%" y="277" width="0.0223%" height="15" fill="rgb(208,13,10)" fg:x="8906122365" fg:w="3937678"/><text x="50.6324%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,937,678 samples, 0.02%)</title><rect x="50.3824%" y="261" width="0.0223%" height="15" fill="rgb(212,200,36)" fg:x="8906122365" fg:w="3937678"/><text x="50.6324%" y="271.50"></text></g><g><title>actix::address::queue::Queue&lt;T&gt;::pop_spin (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="437" width="0.0445%" height="15" fill="rgb(225,90,30)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="447.50"></text></g><g><title>actix::address::queue::Queue&lt;T&gt;::pop (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="421" width="0.0445%" height="15" fill="rgb(236,182,39)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="431.50"></text></g><g><title>core::mem::drop (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="405" width="0.0445%" height="15" fill="rgb(212,144,35)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;actix::address::queue::Node&lt;actix::address::envelope::Envelope&lt;poros::application::actors::parser::ParsingActor&gt;&gt;&gt;&gt; (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="389" width="0.0445%" height="15" fill="rgb(228,63,44)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="373" width="0.0445%" height="15" fill="rgb(228,109,6)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="357" width="0.0445%" height="15" fill="rgb(238,117,24)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="341" width="0.0445%" height="15" fill="rgb(242,26,26)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="351.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="325" width="0.0445%" height="15" fill="rgb(221,92,48)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="335.50"></text></g><g><title>&lt;poros::application::actors::parser::ParsingActor as actix::handler::Handler&lt;poros::application::actors::broadcast::RecordBatchWrapper&gt;&gt;::handle (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="309" width="0.0445%" height="15" fill="rgb(209,209,32)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="319.50"></text></g><g><title>poros::application::actors::parser::apply_regex_pattern (7,869,118 samples, 0.04%)</title><rect x="50.3824%" y="293" width="0.0445%" height="15" fill="rgb(221,70,22)" fg:x="8906122365" fg:w="7869118"/><text x="50.6324%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (3,931,440 samples, 0.02%)</title><rect x="50.4047%" y="277" width="0.0222%" height="15" fill="rgb(248,145,5)" fg:x="8910060043" fg:w="3931440"/><text x="50.6547%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (3,931,440 samples, 0.02%)</title><rect x="50.4047%" y="261" width="0.0222%" height="15" fill="rgb(226,116,26)" fg:x="8910060043" fg:w="3931440"/><text x="50.6547%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,931,440 samples, 0.02%)</title><rect x="50.4047%" y="245" width="0.0222%" height="15" fill="rgb(244,5,17)" fg:x="8910060043" fg:w="3931440"/><text x="50.6547%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,931,730 samples, 0.02%)</title><rect x="50.4269%" y="437" width="0.0166%" height="15" fill="rgb(252,159,33)" fg:x="8913991483" fg:w="2931730"/><text x="50.6769%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (6,034,074 samples, 0.03%)</title><rect x="50.4637%" y="341" width="0.0341%" height="15" fill="rgb(206,71,0)" fg:x="8920490779" fg:w="6034074"/><text x="50.7137%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11,931,908 samples, 0.07%)</title><rect x="50.4435%" y="421" width="0.0675%" height="15" fill="rgb(233,118,54)" fg:x="8916923213" fg:w="11931908"/><text x="50.6935%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11,931,908 samples, 0.07%)</title><rect x="50.4435%" y="405" width="0.0675%" height="15" fill="rgb(234,83,48)" fg:x="8916923213" fg:w="11931908"/><text x="50.6935%" y="415.50"></text></g><g><title>alloc::alloc::realloc (11,931,908 samples, 0.07%)</title><rect x="50.4435%" y="389" width="0.0675%" height="15" fill="rgb(228,3,54)" fg:x="8916923213" fg:w="11931908"/><text x="50.6935%" y="399.50"></text></g><g><title>realloc (11,931,908 samples, 0.07%)</title><rect x="50.4435%" y="373" width="0.0675%" height="15" fill="rgb(226,155,13)" fg:x="8916923213" fg:w="11931908"/><text x="50.6935%" y="383.50"></text></g><g><title>_int_realloc (11,931,908 samples, 0.07%)</title><rect x="50.4435%" y="357" width="0.0675%" height="15" fill="rgb(241,28,37)" fg:x="8916923213" fg:w="11931908"/><text x="50.6935%" y="367.50"></text></g><g><title>_int_malloc (2,330,268 samples, 0.01%)</title><rect x="50.4978%" y="341" width="0.0132%" height="15" fill="rgb(233,93,10)" fg:x="8926524853" fg:w="2330268"/><text x="50.7478%" y="351.50"></text></g><g><title>sysmalloc (2,330,268 samples, 0.01%)</title><rect x="50.4978%" y="325" width="0.0132%" height="15" fill="rgb(225,113,19)" fg:x="8926524853" fg:w="2330268"/><text x="50.7478%" y="335.50"></text></g><g><title>__default_morecore@GLIBC_2.2.5 (2,330,268 samples, 0.01%)</title><rect x="50.4978%" y="309" width="0.0132%" height="15" fill="rgb(241,2,18)" fg:x="8926524853" fg:w="2330268"/><text x="50.7478%" y="319.50"></text></g><g><title>__sbrk (2,330,268 samples, 0.01%)</title><rect x="50.4978%" y="293" width="0.0132%" height="15" fill="rgb(228,207,21)" fg:x="8926524853" fg:w="2330268"/><text x="50.7478%" y="303.50"></text></g><g><title>__brk (2,330,268 samples, 0.01%)</title><rect x="50.4978%" y="277" width="0.0132%" height="15" fill="rgb(213,211,35)" fg:x="8926524853" fg:w="2330268"/><text x="50.7478%" y="287.50"></text></g><g><title>[unknown] (2,330,268 samples, 0.01%)</title><rect x="50.4978%" y="261" width="0.0132%" height="15" fill="rgb(209,83,10)" fg:x="8926524853" fg:w="2330268"/><text x="50.7478%" y="271.50"></text></g><g><title>[unknown] (2,330,268 samples, 0.01%)</title><rect x="50.4978%" y="245" width="0.0132%" height="15" fill="rgb(209,164,1)" fg:x="8926524853" fg:w="2330268"/><text x="50.7478%" y="255.50"></text></g><g><title>[unknown] (2,330,268 samples, 0.01%)</title><rect x="50.4978%" y="229" width="0.0132%" height="15" fill="rgb(213,184,43)" fg:x="8926524853" fg:w="2330268"/><text x="50.7478%" y="239.50"></text></g><g><title>[unknown] (2,330,268 samples, 0.01%)</title><rect x="50.4978%" y="213" width="0.0132%" height="15" fill="rgb(231,61,34)" fg:x="8926524853" fg:w="2330268"/><text x="50.7478%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (14,244,213 samples, 0.08%)</title><rect x="50.4435%" y="437" width="0.0806%" height="15" fill="rgb(235,75,3)" fg:x="8916923213" fg:w="14244213"/><text x="50.6935%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2,312,305 samples, 0.01%)</title><rect x="50.5110%" y="421" width="0.0131%" height="15" fill="rgb(220,106,47)" fg:x="8928855121" fg:w="2312305"/><text x="50.7610%" y="431.50"></text></g><g><title>alloc::sync::Weak&lt;T,A&gt;::inner (15,713,685 samples, 0.09%)</title><rect x="51.4764%" y="389" width="0.0889%" height="15" fill="rgb(210,196,33)" fg:x="9099515443" fg:w="15713685"/><text x="51.7264%" y="399.50"></text></g><g><title>alloc::rc::is_dangling (15,713,685 samples, 0.09%)</title><rect x="51.4764%" y="373" width="0.0889%" height="15" fill="rgb(229,154,42)" fg:x="9099515443" fg:w="15713685"/><text x="51.7264%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (199,731,846 samples, 1.13%)</title><rect x="50.5241%" y="437" width="1.1299%" height="15" fill="rgb(228,114,26)" fg:x="8931167426" fg:w="199731846"/><text x="50.7741%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn arrow_array::array::Array,&amp;alloc::alloc::Global&gt;&gt; (195,825,547 samples, 1.11%)</title><rect x="50.5462%" y="421" width="1.1078%" height="15" fill="rgb(208,144,1)" fg:x="8935073725" fg:w="195825547"/><text x="50.7962%" y="431.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (195,825,547 samples, 1.11%)</title><rect x="50.5462%" y="405" width="1.1078%" height="15" fill="rgb(239,112,37)" fg:x="8935073725" fg:w="195825547"/><text x="50.7962%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::for_value_raw (15,670,144 samples, 0.09%)</title><rect x="51.5653%" y="389" width="0.0886%" height="15" fill="rgb(210,96,50)" fg:x="9115229128" fg:w="15670144"/><text x="51.8153%" y="399.50"></text></g><g><title>core::mem::size_of_val_raw (15,670,144 samples, 0.09%)</title><rect x="51.5653%" y="373" width="0.0886%" height="15" fill="rgb(222,178,2)" fg:x="9115229128" fg:w="15670144"/><text x="51.8153%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3,688,464 samples, 0.02%)</title><rect x="51.6540%" y="437" width="0.0209%" height="15" fill="rgb(226,74,18)" fg:x="9130899272" fg:w="3688464"/><text x="51.9040%" y="447.50"></text></g><g><title>core::ptr::write (3,688,464 samples, 0.02%)</title><rect x="51.6540%" y="421" width="0.0209%" height="15" fill="rgb(225,67,54)" fg:x="9130899272" fg:w="3688464"/><text x="51.9040%" y="431.50"></text></g><g><title>arrow_array::builder::generic_bytes_builder::GenericByteBuilder&lt;T&gt;::next_offset (3,900,937 samples, 0.02%)</title><rect x="51.7405%" y="421" width="0.0221%" height="15" fill="rgb(251,92,32)" fg:x="9146196746" fg:w="3900937"/><text x="51.9905%" y="431.50"></text></g><g><title>&lt;i32 as arrow_buffer::native::ArrowNativeType&gt;::from_usize (3,900,937 samples, 0.02%)</title><rect x="51.7405%" y="405" width="0.0221%" height="15" fill="rgb(228,149,22)" fg:x="9146196746" fg:w="3900937"/><text x="51.9905%" y="415.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3,900,937 samples, 0.02%)</title><rect x="51.7405%" y="389" width="0.0221%" height="15" fill="rgb(243,54,13)" fg:x="9146196746" fg:w="3900937"/><text x="51.9905%" y="399.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for i32&gt;::try_from (3,900,937 samples, 0.02%)</title><rect x="51.7405%" y="373" width="0.0221%" height="15" fill="rgb(243,180,28)" fg:x="9146196746" fg:w="3900937"/><text x="51.9905%" y="383.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::push (15,535,160 samples, 0.09%)</title><rect x="51.7626%" y="405" width="0.0879%" height="15" fill="rgb(208,167,24)" fg:x="9150097683" fg:w="15535160"/><text x="52.0126%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11,694,955 samples, 0.07%)</title><rect x="51.7843%" y="389" width="0.0662%" height="15" fill="rgb(245,73,45)" fg:x="9153937888" fg:w="11694955"/><text x="52.0343%" y="399.50"></text></g><g><title>arrow_buffer::builder::BufferBuilder&lt;T&gt;::append (27,175,230 samples, 0.15%)</title><rect x="51.7626%" y="421" width="0.1537%" height="15" fill="rgb(237,203,48)" fg:x="9150097683" fg:w="27175230"/><text x="52.0126%" y="431.50"></text></g><g><title>arrow_buffer::builder::BufferBuilder&lt;T&gt;::reserve (11,640,070 samples, 0.07%)</title><rect x="51.8504%" y="405" width="0.0658%" height="15" fill="rgb(211,197,16)" fg:x="9165632843" fg:w="11640070"/><text x="52.1004%" y="415.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::reserve (11,640,070 samples, 0.07%)</title><rect x="51.8504%" y="389" width="0.0658%" height="15" fill="rgb(243,99,51)" fg:x="9165632843" fg:w="11640070"/><text x="52.1004%" y="399.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::reserve (7,803,472 samples, 0.04%)</title><rect x="51.9816%" y="389" width="0.0441%" height="15" fill="rgb(215,123,29)" fg:x="9188822483" fg:w="7803472"/><text x="52.2316%" y="399.50"></text></g><g><title>__memmove_avx_unaligned (38,863,163 samples, 0.22%)</title><rect x="52.0258%" y="373" width="0.2199%" height="15" fill="rgb(239,186,37)" fg:x="9196625955" fg:w="38863163"/><text x="52.2758%" y="383.50"></text></g><g><title>arrow_array::builder::generic_bytes_builder::GenericByteBuilder&lt;T&gt;::append_value (123,776,067 samples, 0.70%)</title><rect x="51.6748%" y="437" width="0.7002%" height="15" fill="rgb(252,136,39)" fg:x="9134587736" fg:w="123776067"/><text x="51.9248%" y="447.50"></text></g><g><title>arrow_buffer::builder::BufferBuilder&lt;T&gt;::append_slice (81,090,890 samples, 0.46%)</title><rect x="51.9163%" y="421" width="0.4587%" height="15" fill="rgb(223,213,32)" fg:x="9177272913" fg:w="81090890"/><text x="52.1663%" y="431.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::extend_from_slice (81,090,890 samples, 0.46%)</title><rect x="51.9163%" y="405" width="0.4587%" height="15" fill="rgb(233,115,5)" fg:x="9177272913" fg:w="81090890"/><text x="52.1663%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (61,737,848 samples, 0.35%)</title><rect x="52.0258%" y="389" width="0.3493%" height="15" fill="rgb(207,226,44)" fg:x="9196625955" fg:w="61737848"/><text x="52.2758%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (22,874,685 samples, 0.13%)</title><rect x="52.2456%" y="373" width="0.1294%" height="15" fill="rgb(208,126,0)" fg:x="9235489118" fg:w="22874685"/><text x="52.4956%" y="383.50"></text></g><g><title>[unknown] (3,690,583 samples, 0.02%)</title><rect x="52.3542%" y="357" width="0.0209%" height="15" fill="rgb(244,66,21)" fg:x="9254673220" fg:w="3690583"/><text x="52.6042%" y="367.50"></text></g><g><title>[unknown] (3,690,583 samples, 0.02%)</title><rect x="52.3542%" y="341" width="0.0209%" height="15" fill="rgb(222,97,12)" fg:x="9254673220" fg:w="3690583"/><text x="52.6042%" y="351.50"></text></g><g><title>[unknown] (3,690,583 samples, 0.02%)</title><rect x="52.3542%" y="325" width="0.0209%" height="15" fill="rgb(219,213,19)" fg:x="9254673220" fg:w="3690583"/><text x="52.6042%" y="335.50"></text></g><g><title>[unknown] (3,690,583 samples, 0.02%)</title><rect x="52.3542%" y="309" width="0.0209%" height="15" fill="rgb(252,169,30)" fg:x="9254673220" fg:w="3690583"/><text x="52.6042%" y="319.50"></text></g><g><title>arrow_array::builder::generic_list_builder::GenericListBuilder&lt;OffsetSize,T&gt;::append (3,609,298 samples, 0.02%)</title><rect x="52.3750%" y="437" width="0.0204%" height="15" fill="rgb(206,32,51)" fg:x="9258363803" fg:w="3609298"/><text x="52.6250%" y="447.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (656,470,889 samples, 3.71%)</title><rect x="52.3954%" y="437" width="3.7137%" height="15" fill="rgb(250,172,42)" fg:x="9261973101" fg:w="656470889"/><text x="52.6454%" y="447.50">arro..</text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::extend_from_slice (656,470,889 samples, 3.71%)</title><rect x="52.3954%" y="421" width="3.7137%" height="15" fill="rgb(209,34,43)" fg:x="9261973101" fg:w="656470889"/><text x="52.6454%" y="431.50">arro..</text></g><g><title>core::intrinsics::copy_nonoverlapping (656,470,889 samples, 3.71%)</title><rect x="52.3954%" y="405" width="3.7137%" height="15" fill="rgb(223,11,35)" fg:x="9261973101" fg:w="656470889"/><text x="52.6454%" y="415.50">core..</text></g><g><title>__memmove_avx_unaligned_erms (656,470,889 samples, 3.71%)</title><rect x="52.3954%" y="389" width="3.7137%" height="15" fill="rgb(251,219,26)" fg:x="9261973101" fg:w="656470889"/><text x="52.6454%" y="399.50">__me..</text></g><g><title>[unknown] (19,017,330 samples, 0.11%)</title><rect x="56.0016%" y="373" width="0.1076%" height="15" fill="rgb(231,119,3)" fg:x="9899426660" fg:w="19017330"/><text x="56.2516%" y="383.50"></text></g><g><title>[unknown] (8,720,572 samples, 0.05%)</title><rect x="56.0598%" y="357" width="0.0493%" height="15" fill="rgb(216,97,11)" fg:x="9909723418" fg:w="8720572"/><text x="56.3098%" y="367.50"></text></g><g><title>[unknown] (8,720,572 samples, 0.05%)</title><rect x="56.0598%" y="341" width="0.0493%" height="15" fill="rgb(223,59,9)" fg:x="9909723418" fg:w="8720572"/><text x="56.3098%" y="351.50"></text></g><g><title>[unknown] (8,720,572 samples, 0.05%)</title><rect x="56.0598%" y="325" width="0.0493%" height="15" fill="rgb(233,93,31)" fg:x="9909723418" fg:w="8720572"/><text x="56.3098%" y="335.50"></text></g><g><title>[unknown] (8,720,572 samples, 0.05%)</title><rect x="56.0598%" y="309" width="0.0493%" height="15" fill="rgb(239,81,33)" fg:x="9909723418" fg:w="8720572"/><text x="56.3098%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35,508,345 samples, 0.20%)</title><rect x="56.1091%" y="357" width="0.2009%" height="15" fill="rgb(213,120,34)" fg:x="9918443990" fg:w="35508345"/><text x="56.3591%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (35,508,345 samples, 0.20%)</title><rect x="56.1091%" y="341" width="0.2009%" height="15" fill="rgb(243,49,53)" fg:x="9918443990" fg:w="35508345"/><text x="56.3591%" y="351.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::reallocate (179,526,969 samples, 1.02%)</title><rect x="56.1091%" y="437" width="1.0156%" height="15" fill="rgb(247,216,33)" fg:x="9918443990" fg:w="179526969"/><text x="56.3591%" y="447.50"></text></g><g><title>alloc::alloc::realloc (179,526,969 samples, 1.02%)</title><rect x="56.1091%" y="421" width="1.0156%" height="15" fill="rgb(226,26,14)" fg:x="9918443990" fg:w="179526969"/><text x="56.3591%" y="431.50"></text></g><g><title>__rustc::__rdl_realloc (179,526,969 samples, 1.02%)</title><rect x="56.1091%" y="405" width="1.0156%" height="15" fill="rgb(215,49,53)" fg:x="9918443990" fg:w="179526969"/><text x="56.3591%" y="415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (179,526,969 samples, 1.02%)</title><rect x="56.1091%" y="389" width="1.0156%" height="15" fill="rgb(245,162,40)" fg:x="9918443990" fg:w="179526969"/><text x="56.3591%" y="399.50"></text></g><g><title>std::sys::alloc::realloc_fallback (179,526,969 samples, 1.02%)</title><rect x="56.1091%" y="373" width="1.0156%" height="15" fill="rgb(229,68,17)" fg:x="9918443990" fg:w="179526969"/><text x="56.3591%" y="383.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (144,018,624 samples, 0.81%)</title><rect x="56.3100%" y="357" width="0.8147%" height="15" fill="rgb(213,182,10)" fg:x="9953952335" fg:w="144018624"/><text x="56.5600%" y="367.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (144,018,624 samples, 0.81%)</title><rect x="56.3100%" y="341" width="0.8147%" height="15" fill="rgb(245,125,30)" fg:x="9953952335" fg:w="144018624"/><text x="56.5600%" y="351.50"></text></g><g><title>__posix_memalign (144,018,624 samples, 0.81%)</title><rect x="56.3100%" y="325" width="0.8147%" height="15" fill="rgb(232,202,2)" fg:x="9953952335" fg:w="144018624"/><text x="56.5600%" y="335.50"></text></g><g><title>_mid_memalign.isra.0 (144,018,624 samples, 0.81%)</title><rect x="56.3100%" y="309" width="0.8147%" height="15" fill="rgb(237,140,51)" fg:x="9953952335" fg:w="144018624"/><text x="56.5600%" y="319.50"></text></g><g><title>_int_memalign (144,018,624 samples, 0.81%)</title><rect x="56.3100%" y="293" width="0.8147%" height="15" fill="rgb(236,157,25)" fg:x="9953952335" fg:w="144018624"/><text x="56.5600%" y="303.50"></text></g><g><title>_int_malloc (144,018,624 samples, 0.81%)</title><rect x="56.3100%" y="277" width="0.8147%" height="15" fill="rgb(219,209,0)" fg:x="9953952335" fg:w="144018624"/><text x="56.5600%" y="287.50"></text></g><g><title>malloc_consolidate (144,018,624 samples, 0.81%)</title><rect x="56.3100%" y="261" width="0.8147%" height="15" fill="rgb(240,116,54)" fg:x="9953952335" fg:w="144018624"/><text x="56.5600%" y="271.50"></text></g><g><title>unlink_chunk.isra.0 (28,765,888 samples, 0.16%)</title><rect x="56.9620%" y="245" width="0.1627%" height="15" fill="rgb(216,10,36)" fg:x="10069205071" fg:w="28765888"/><text x="57.2120%" y="255.50"></text></g><g><title>arrow_buffer::buffer::scalar::ScalarBuffer&lt;T&gt;::new (18,515,739 samples, 0.10%)</title><rect x="57.1247%" y="437" width="0.1047%" height="15" fill="rgb(222,72,44)" fg:x="10097970959" fg:w="18515739"/><text x="57.3747%" y="447.50"></text></g><g><title>arrow_buffer::builder::null::NullBufferBuilder::append (11,653,777 samples, 0.07%)</title><rect x="57.2295%" y="437" width="0.0659%" height="15" fill="rgb(232,159,9)" fg:x="10116486698" fg:w="11653777"/><text x="57.4795%" y="447.50"></text></g><g><title>arrow_data::data::ArrayData::typed_buffer (1,828,759 samples, 0.01%)</title><rect x="57.2954%" y="437" width="0.0103%" height="15" fill="rgb(210,39,32)" fg:x="10128140475" fg:w="1828759"/><text x="57.5454%" y="447.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::typed_data (1,828,759 samples, 0.01%)</title><rect x="57.2954%" y="421" width="0.0103%" height="15" fill="rgb(216,194,45)" fg:x="10128140475" fg:w="1828759"/><text x="57.5454%" y="431.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::as_slice (1,828,759 samples, 0.01%)</title><rect x="57.2954%" y="405" width="0.0103%" height="15" fill="rgb(218,18,35)" fg:x="10128140475" fg:w="1828759"/><text x="57.5454%" y="415.50"></text></g><g><title>arrow_ipc::convert::get_fb_field_type (2,190,317 samples, 0.01%)</title><rect x="57.3057%" y="437" width="0.0124%" height="15" fill="rgb(207,83,51)" fg:x="10129969234" fg:w="2190317"/><text x="57.5557%" y="447.50"></text></g><g><title>arrow_ipc::reader::create_primitive_array (2,836,735 samples, 0.02%)</title><rect x="57.3181%" y="437" width="0.0160%" height="15" fill="rgb(225,63,43)" fg:x="10132159551" fg:w="2836735"/><text x="57.5681%" y="447.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (1,881,243 samples, 0.01%)</title><rect x="57.3342%" y="437" width="0.0106%" height="15" fill="rgb(207,57,36)" fg:x="10134996286" fg:w="1881243"/><text x="57.5842%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,881,243 samples, 0.01%)</title><rect x="57.3342%" y="421" width="0.0106%" height="15" fill="rgb(216,99,33)" fg:x="10134996286" fg:w="1881243"/><text x="57.5842%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,881,243 samples, 0.01%)</title><rect x="57.3342%" y="405" width="0.0106%" height="15" fill="rgb(225,42,16)" fg:x="10134996286" fg:w="1881243"/><text x="57.5842%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (123,639,130 samples, 0.70%)</title><rect x="57.9365%" y="357" width="0.6994%" height="15" fill="rgb(220,201,45)" fg:x="10241474525" fg:w="123639130"/><text x="58.1865%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (258,844,056 samples, 1.46%)</title><rect x="57.3448%" y="437" width="1.4643%" height="15" fill="rgb(225,33,4)" fg:x="10136877529" fg:w="258844056"/><text x="57.5948%" y="447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (254,919,889 samples, 1.44%)</title><rect x="57.3670%" y="421" width="1.4421%" height="15" fill="rgb(224,33,50)" fg:x="10140801696" fg:w="254919889"/><text x="57.6170%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (254,919,889 samples, 1.44%)</title><rect x="57.3670%" y="405" width="1.4421%" height="15" fill="rgb(246,198,51)" fg:x="10140801696" fg:w="254919889"/><text x="57.6170%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (254,919,889 samples, 1.44%)</title><rect x="57.3670%" y="389" width="1.4421%" height="15" fill="rgb(205,22,4)" fg:x="10140801696" fg:w="254919889"/><text x="57.6170%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (204,726,086 samples, 1.16%)</title><rect x="57.6510%" y="373" width="1.1581%" height="15" fill="rgb(206,3,8)" fg:x="10190995499" fg:w="204726086"/><text x="57.9010%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (30,607,930 samples, 0.17%)</title><rect x="58.6360%" y="357" width="0.1732%" height="15" fill="rgb(251,23,15)" fg:x="10365113655" fg:w="30607930"/><text x="58.8860%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (7,860,906 samples, 0.04%)</title><rect x="58.8091%" y="437" width="0.0445%" height="15" fill="rgb(252,88,28)" fg:x="10395721585" fg:w="7860906"/><text x="59.0591%" y="447.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (2,114,804 samples, 0.01%)</title><rect x="58.8536%" y="437" width="0.0120%" height="15" fill="rgb(212,127,14)" fg:x="10403582491" fg:w="2114804"/><text x="59.1036%" y="447.50"></text></g><g><title>crc32fast::baseline::update_slow (2,114,804 samples, 0.01%)</title><rect x="58.8536%" y="421" width="0.0120%" height="15" fill="rgb(247,145,37)" fg:x="10403582491" fg:w="2114804"/><text x="59.1036%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,114,804 samples, 0.01%)</title><rect x="58.8536%" y="405" width="0.0120%" height="15" fill="rgb(209,117,53)" fg:x="10403582491" fg:w="2114804"/><text x="59.1036%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,114,804 samples, 0.01%)</title><rect x="58.8536%" y="389" width="0.0120%" height="15" fill="rgb(212,90,42)" fg:x="10403582491" fg:w="2114804"/><text x="59.1036%" y="399.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (3,881,281 samples, 0.02%)</title><rect x="58.8656%" y="437" width="0.0220%" height="15" fill="rgb(218,164,37)" fg:x="10405697295" fg:w="3881281"/><text x="59.1156%" y="447.50"></text></g><g><title>h2::codec::framed_read::decode_frame (2,058,125 samples, 0.01%)</title><rect x="58.8875%" y="437" width="0.0116%" height="15" fill="rgb(246,65,34)" fg:x="10409578576" fg:w="2058125"/><text x="59.1375%" y="447.50"></text></g><g><title>h2::proto::ping_pong::PingPong::send_pending_ping (1,840,264 samples, 0.01%)</title><rect x="58.9091%" y="437" width="0.0104%" height="15" fill="rgb(231,100,33)" fg:x="10413396241" fg:w="1840264"/><text x="59.1591%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (3,324,211 samples, 0.02%)</title><rect x="58.9195%" y="389" width="0.0188%" height="15" fill="rgb(228,126,14)" fg:x="10415236505" fg:w="3324211"/><text x="59.1695%" y="399.50"></text></g><g><title>h2::proto::streams::buffer::Deque::pop_front (6,412,297 samples, 0.04%)</title><rect x="58.9195%" y="437" width="0.0363%" height="15" fill="rgb(215,173,21)" fg:x="10415236505" fg:w="6412297"/><text x="59.1695%" y="447.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (6,412,297 samples, 0.04%)</title><rect x="58.9195%" y="421" width="0.0363%" height="15" fill="rgb(210,6,40)" fg:x="10415236505" fg:w="6412297"/><text x="59.1695%" y="431.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (6,412,297 samples, 0.04%)</title><rect x="58.9195%" y="405" width="0.0363%" height="15" fill="rgb(212,48,18)" fg:x="10415236505" fg:w="6412297"/><text x="59.1695%" y="415.50"></text></g><g><title>core::mem::replace (3,088,086 samples, 0.02%)</title><rect x="58.9383%" y="389" width="0.0175%" height="15" fill="rgb(230,214,11)" fg:x="10418560716" fg:w="3088086"/><text x="59.1883%" y="399.50"></text></g><g><title>__memmove_avx_unaligned (3,088,086 samples, 0.02%)</title><rect x="58.9383%" y="373" width="0.0175%" height="15" fill="rgb(254,105,39)" fg:x="10418560716" fg:w="3088086"/><text x="59.1883%" y="383.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (1,815,190 samples, 0.01%)</title><rect x="58.9627%" y="437" width="0.0103%" height="15" fill="rgb(245,158,5)" fg:x="10422872357" fg:w="1815190"/><text x="59.2127%" y="447.50"></text></g><g><title>h2::proto::streams::recv::Recv::clear_expired_reset_streams (3,596,632 samples, 0.02%)</title><rect x="58.9730%" y="437" width="0.0203%" height="15" fill="rgb(249,208,11)" fg:x="10424687547" fg:w="3596632"/><text x="59.2230%" y="447.50"></text></g><g><title>mio::poll::Poll::poll (1,838,017 samples, 0.01%)</title><rect x="58.9933%" y="437" width="0.0104%" height="15" fill="rgb(210,39,28)" fg:x="10428284179" fg:w="1838017"/><text x="59.2433%" y="447.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (1,838,017 samples, 0.01%)</title><rect x="58.9933%" y="421" width="0.0104%" height="15" fill="rgb(211,56,53)" fg:x="10428284179" fg:w="1838017"/><text x="59.2433%" y="431.50"></text></g><g><title>epoll_wait (1,837,846 samples, 0.01%)</title><rect x="58.9933%" y="405" width="0.0104%" height="15" fill="rgb(226,201,30)" fg:x="10428284350" fg:w="1837846"/><text x="59.2433%" y="415.50"></text></g><g><title>__syscall_cancel (1,834,985 samples, 0.01%)</title><rect x="58.9933%" y="389" width="0.0104%" height="15" fill="rgb(239,101,34)" fg:x="10428287211" fg:w="1834985"/><text x="59.2433%" y="399.50"></text></g><g><title>__internal_syscall_cancel (1,834,985 samples, 0.01%)</title><rect x="58.9933%" y="373" width="0.0104%" height="15" fill="rgb(226,209,5)" fg:x="10428287211" fg:w="1834985"/><text x="59.2433%" y="383.50"></text></g><g><title>__syscall_cancel_arch_end (1,834,958 samples, 0.01%)</title><rect x="58.9933%" y="357" width="0.0104%" height="15" fill="rgb(250,105,47)" fg:x="10428287238" fg:w="1834958"/><text x="59.2433%" y="367.50"></text></g><g><title>[unknown] (1,834,958 samples, 0.01%)</title><rect x="58.9933%" y="341" width="0.0104%" height="15" fill="rgb(230,72,3)" fg:x="10428287238" fg:w="1834958"/><text x="59.2433%" y="351.50"></text></g><g><title>[unknown] (1,834,958 samples, 0.01%)</title><rect x="58.9933%" y="325" width="0.0104%" height="15" fill="rgb(232,218,39)" fg:x="10428287238" fg:w="1834958"/><text x="59.2433%" y="335.50"></text></g><g><title>[unknown] (1,834,958 samples, 0.01%)</title><rect x="58.9933%" y="309" width="0.0104%" height="15" fill="rgb(248,166,6)" fg:x="10428287238" fg:w="1834958"/><text x="59.2433%" y="319.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots (11,384,113 samples, 0.06%)</title><rect x="59.0037%" y="437" width="0.0644%" height="15" fill="rgb(247,89,20)" fg:x="10430122196" fg:w="11384113"/><text x="59.2537%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::has_empty (3,690,967 samples, 0.02%)</title><rect x="59.0472%" y="421" width="0.0209%" height="15" fill="rgb(248,130,54)" fg:x="10437815342" fg:w="3690967"/><text x="59.2972%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,690,967 samples, 0.02%)</title><rect x="59.0472%" y="405" width="0.0209%" height="15" fill="rgb(234,196,4)" fg:x="10437815342" fg:w="3690967"/><text x="59.2972%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,690,967 samples, 0.02%)</title><rect x="59.0472%" y="389" width="0.0209%" height="15" fill="rgb(250,143,31)" fg:x="10437815342" fg:w="3690967"/><text x="59.2972%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,690,967 samples, 0.02%)</title><rect x="59.0472%" y="373" width="0.0209%" height="15" fill="rgb(211,110,34)" fg:x="10437815342" fg:w="3690967"/><text x="59.2972%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (103,983,413 samples, 0.59%)</title><rect x="60.8844%" y="405" width="0.5882%" height="15" fill="rgb(215,124,48)" fg:x="10762570415" fg:w="103983413"/><text x="61.1344%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (103,983,413 samples, 0.59%)</title><rect x="60.8844%" y="389" width="0.5882%" height="15" fill="rgb(216,46,13)" fg:x="10762570415" fg:w="103983413"/><text x="61.1344%" y="399.50"></text></g><g><title>&lt;regex_automata::nfa::thompson::nfa::PatternIter as core::iter::traits::iterator::Iterator&gt;::next (26,971,784 samples, 0.15%)</title><rect x="61.4726%" y="405" width="0.1526%" height="15" fill="rgb(205,184,25)" fg:x="10866553828" fg:w="26971784"/><text x="61.7226%" y="415.50"></text></g><g><title>&lt;regex_automata::util::primitives::PatternIDIter as core::iter::traits::iterator::Iterator&gt;::next (26,971,784 samples, 0.15%)</title><rect x="61.4726%" y="389" width="0.1526%" height="15" fill="rgb(228,1,10)" fg:x="10866553828" fg:w="26971784"/><text x="61.7226%" y="399.50"></text></g><g><title>&lt;regex_automata::util::primitives::SmallIndexIter as core::iter::traits::iterator::Iterator&gt;::next (26,971,784 samples, 0.15%)</title><rect x="61.4726%" y="373" width="0.1526%" height="15" fill="rgb(213,116,27)" fg:x="10866553828" fg:w="26971784"/><text x="61.7226%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (486,020,521 samples, 2.75%)</title><rect x="61.6252%" y="405" width="2.7494%" height="15" fill="rgb(241,95,50)" fg:x="10893525612" fg:w="486020521"/><text x="61.8752%" y="415.50">__..</text></g><g><title>core::cmp::PartialOrd::ge (204,201,212 samples, 1.16%)</title><rect x="64.3747%" y="405" width="1.1552%" height="15" fill="rgb(238,48,32)" fg:x="11379546133" fg:w="204201212"/><text x="64.6247%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (204,201,212 samples, 1.16%)</title><rect x="64.3747%" y="389" width="1.1552%" height="15" fill="rgb(235,113,49)" fg:x="11379546133" fg:w="204201212"/><text x="64.6247%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (204,201,212 samples, 1.16%)</title><rect x="64.3747%" y="373" width="1.1552%" height="15" fill="rgb(205,127,43)" fg:x="11379546133" fg:w="204201212"/><text x="64.6247%" y="383.50"></text></g><g><title>core::cmp::Ordering::is_ge (204,201,212 samples, 1.16%)</title><rect x="64.3747%" y="357" width="1.1552%" height="15" fill="rgb(250,162,2)" fg:x="11379546133" fg:w="204201212"/><text x="64.6247%" y="367.50"></text></g><g><title>core::cmp::min (11,512,804 samples, 0.07%)</title><rect x="65.5298%" y="405" width="0.0651%" height="15" fill="rgb(220,13,41)" fg:x="11583747345" fg:w="11512804"/><text x="65.7798%" y="415.50"></text></g><g><title>core::cmp::Ord::min (11,512,804 samples, 0.07%)</title><rect x="65.5298%" y="389" width="0.0651%" height="15" fill="rgb(249,221,25)" fg:x="11583747345" fg:w="11512804"/><text x="65.7798%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,875,156 samples, 0.02%)</title><rect x="65.5950%" y="373" width="0.0219%" height="15" fill="rgb(215,208,19)" fg:x="11595260149" fg:w="3875156"/><text x="65.8450%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,875,156 samples, 0.02%)</title><rect x="65.5950%" y="357" width="0.0219%" height="15" fill="rgb(236,175,2)" fg:x="11595260149" fg:w="3875156"/><text x="65.8450%" y="367.50"></text></g><g><title>regex_automata::dfa::onepass::Cache::explicit_slots (7,763,990 samples, 0.04%)</title><rect x="65.5950%" y="405" width="0.0439%" height="15" fill="rgb(241,52,2)" fg:x="11595260149" fg:w="7763990"/><text x="65.8450%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7,763,990 samples, 0.04%)</title><rect x="65.5950%" y="389" width="0.0439%" height="15" fill="rgb(248,140,14)" fg:x="11595260149" fg:w="7763990"/><text x="65.8450%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3,888,834 samples, 0.02%)</title><rect x="65.6169%" y="373" width="0.0220%" height="15" fill="rgb(253,22,42)" fg:x="11599135305" fg:w="3888834"/><text x="65.8669%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3,888,834 samples, 0.02%)</title><rect x="65.6169%" y="357" width="0.0220%" height="15" fill="rgb(234,61,47)" fg:x="11599135305" fg:w="3888834"/><text x="65.8669%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3,888,834 samples, 0.02%)</title><rect x="65.6169%" y="341" width="0.0220%" height="15" fill="rgb(208,226,15)" fg:x="11599135305" fg:w="3888834"/><text x="65.8669%" y="351.50"></text></g><g><title>regex_automata::dfa::onepass::Config::get_match_kind (3,912,102 samples, 0.02%)</title><rect x="65.6389%" y="405" width="0.0221%" height="15" fill="rgb(217,221,4)" fg:x="11603024139" fg:w="3912102"/><text x="65.8889%" y="415.50"></text></g><g><title>__memmove_avx_unaligned (58,089,407 samples, 0.33%)</title><rect x="65.7491%" y="357" width="0.3286%" height="15" fill="rgb(212,174,34)" fg:x="11622506563" fg:w="58089407"/><text x="65.9991%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (73,619,823 samples, 0.42%)</title><rect x="65.7491%" y="389" width="0.4165%" height="15" fill="rgb(253,83,4)" fg:x="11622506563" fg:w="73619823"/><text x="65.9991%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (73,619,823 samples, 0.42%)</title><rect x="65.7491%" y="373" width="0.4165%" height="15" fill="rgb(250,195,49)" fg:x="11622506563" fg:w="73619823"/><text x="65.9991%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (15,530,416 samples, 0.09%)</title><rect x="66.0777%" y="357" width="0.0879%" height="15" fill="rgb(241,192,25)" fg:x="11680595970" fg:w="15530416"/><text x="66.3277%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (53,432,883 samples, 0.30%)</title><rect x="66.3413%" y="357" width="0.3023%" height="15" fill="rgb(208,124,10)" fg:x="11727191745" fg:w="53432883"/><text x="66.5913%" y="367.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::find_match (177,618,886 samples, 1.00%)</title><rect x="65.6610%" y="405" width="1.0048%" height="15" fill="rgb(222,33,0)" fg:x="11606936241" fg:w="177618886"/><text x="65.9110%" y="415.50"></text></g><g><title>regex_automata::dfa::onepass::Slots::apply (88,428,741 samples, 0.50%)</title><rect x="66.1656%" y="389" width="0.5002%" height="15" fill="rgb(234,209,28)" fg:x="11696126386" fg:w="88428741"/><text x="66.4156%" y="399.50"></text></g><g><title>&lt;regex_automata::dfa::onepass::SlotsIter as core::iter::traits::iterator::Iterator&gt;::next (57,363,382 samples, 0.32%)</title><rect x="66.3413%" y="373" width="0.3245%" height="15" fill="rgb(224,11,23)" fg:x="11727191745" fg:w="57363382"/><text x="66.5913%" y="383.50"></text></g><g><title>regex_automata::dfa::onepass::Slots::remove (3,930,499 samples, 0.02%)</title><rect x="66.6436%" y="357" width="0.0222%" height="15" fill="rgb(232,99,1)" fg:x="11780624628" fg:w="3930499"/><text x="66.8936%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (34,262,397 samples, 0.19%)</title><rect x="67.7355%" y="389" width="0.1938%" height="15" fill="rgb(237,95,45)" fg:x="11973649250" fg:w="34262397"/><text x="67.9855%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (34,262,397 samples, 0.19%)</title><rect x="67.7355%" y="373" width="0.1938%" height="15" fill="rgb(208,109,11)" fg:x="11973649250" fg:w="34262397"/><text x="67.9855%" y="383.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (34,262,397 samples, 0.19%)</title><rect x="67.7355%" y="357" width="0.1938%" height="15" fill="rgb(216,190,48)" fg:x="11973649250" fg:w="34262397"/><text x="67.9855%" y="367.50"></text></g><g><title>regex_automata::util::alphabet::ByteClasses::get (54,544,140 samples, 0.31%)</title><rect x="67.9294%" y="389" width="0.3086%" height="15" fill="rgb(251,171,36)" fg:x="12007911647" fg:w="54544140"/><text x="68.1794%" y="399.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::transition (332,199,816 samples, 1.88%)</title><rect x="66.6658%" y="405" width="1.8793%" height="15" fill="rgb(230,62,22)" fg:x="11784555127" fg:w="332199816"/><text x="66.9158%" y="415.50">r..</text></g><g><title>regex_automata::util::primitives::StateID::as_usize (54,299,156 samples, 0.31%)</title><rect x="68.2379%" y="389" width="0.3072%" height="15" fill="rgb(225,114,35)" fg:x="12062455787" fg:w="54299156"/><text x="68.4879%" y="399.50"></text></g><g><title>regex_automata::util::primitives::SmallIndex::as_usize (54,299,156 samples, 0.31%)</title><rect x="68.2379%" y="373" width="0.3072%" height="15" fill="rgb(215,118,42)" fg:x="12062455787" fg:w="54299156"/><text x="68.4879%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::is_always_start_anchored (21,847,469 samples, 0.12%)</title><rect x="68.5451%" y="405" width="0.1236%" height="15" fill="rgb(243,119,21)" fg:x="12116754943" fg:w="21847469"/><text x="68.7951%" y="415.50"></text></g><g><title>&lt;regex_automata::util::primitives::StateID as core::cmp::PartialEq&gt;::eq (21,847,469 samples, 0.12%)</title><rect x="68.5451%" y="389" width="0.1236%" height="15" fill="rgb(252,177,53)" fg:x="12116754943" fg:w="21847469"/><text x="68.7951%" y="399.50"></text></g><g><title>&lt;regex_automata::util::primitives::SmallIndex as core::cmp::PartialEq&gt;::eq (21,847,469 samples, 0.12%)</title><rect x="68.5451%" y="373" width="0.1236%" height="15" fill="rgb(237,209,29)" fg:x="12116754943" fg:w="21847469"/><text x="68.7951%" y="383.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::search_imp (1,709,141,795 samples, 9.67%)</title><rect x="59.4188%" y="421" width="9.6687%" height="15" fill="rgb(212,65,23)" fg:x="10503495919" fg:w="1709141795"/><text x="59.6688%" y="431.50">regex_automata..</text></g><g><title>regex_automata::util::look::LookMatcher::matches_set_inline (74,035,302 samples, 0.42%)</title><rect x="68.6687%" y="405" width="0.4188%" height="15" fill="rgb(230,222,46)" fg:x="12138602412" fg:w="74035302"/><text x="68.9187%" y="415.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots_imp (1,775,026,801 samples, 10.04%)</title><rect x="59.0681%" y="437" width="10.0414%" height="15" fill="rgb(215,135,32)" fg:x="10441506309" fg:w="1775026801"/><text x="59.3181%" y="447.50">regex_automata:..</text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::has_empty (3,895,396 samples, 0.02%)</title><rect x="69.0875%" y="421" width="0.0220%" height="15" fill="rgb(246,101,22)" fg:x="12212637714" fg:w="3895396"/><text x="69.3375%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,895,396 samples, 0.02%)</title><rect x="69.0875%" y="405" width="0.0220%" height="15" fill="rgb(206,107,13)" fg:x="12212637714" fg:w="3895396"/><text x="69.3375%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,895,396 samples, 0.02%)</title><rect x="69.0875%" y="389" width="0.0220%" height="15" fill="rgb(250,100,44)" fg:x="12212637714" fg:w="3895396"/><text x="69.3375%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,895,396 samples, 0.02%)</title><rect x="69.0875%" y="373" width="0.0220%" height="15" fill="rgb(231,147,38)" fg:x="12212637714" fg:w="3895396"/><text x="69.3375%" y="383.50"></text></g><g><title>regex_automata::meta::regex::Builder::configure (3,728,610 samples, 0.02%)</title><rect x="69.1095%" y="437" width="0.0211%" height="15" fill="rgb(229,8,40)" fg:x="12216533110" fg:w="3728610"/><text x="69.3595%" y="447.50"></text></g><g><title>regex_automata::meta::regex::Config::overwrite (3,728,610 samples, 0.02%)</title><rect x="69.1095%" y="421" width="0.0211%" height="15" fill="rgb(221,135,30)" fg:x="12216533110" fg:w="3728610"/><text x="69.3595%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::or (3,728,610 samples, 0.02%)</title><rect x="69.1095%" y="405" width="0.0211%" height="15" fill="rgb(249,193,18)" fg:x="12216533110" fg:w="3728610"/><text x="69.3595%" y="415.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::new (3,636,398 samples, 0.02%)</title><rect x="69.1306%" y="437" width="0.0206%" height="15" fill="rgb(209,133,39)" fg:x="12220261720" fg:w="3636398"/><text x="69.3806%" y="447.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (3,916,741 samples, 0.02%)</title><rect x="69.1512%" y="437" width="0.0222%" height="15" fill="rgb(232,100,14)" fg:x="12223898118" fg:w="3916741"/><text x="69.4012%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1,927,449 samples, 0.01%)</title><rect x="69.1734%" y="437" width="0.0109%" height="15" fill="rgb(224,185,1)" fg:x="12227814859" fg:w="1927449"/><text x="69.4234%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,927,449 samples, 0.01%)</title><rect x="69.1734%" y="421" width="0.0109%" height="15" fill="rgb(223,139,8)" fg:x="12227814859" fg:w="1927449"/><text x="69.4234%" y="431.50"></text></g><g><title>core::ptr::write (1,927,449 samples, 0.01%)</title><rect x="69.1734%" y="405" width="0.0109%" height="15" fill="rgb(232,213,38)" fg:x="12227814859" fg:w="1927449"/><text x="69.4234%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::clear (3,703,870 samples, 0.02%)</title><rect x="69.1843%" y="437" width="0.0210%" height="15" fill="rgb(207,94,22)" fg:x="12229742308" fg:w="3703870"/><text x="69.4343%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::patch (3,731,357 samples, 0.02%)</title><rect x="69.2052%" y="437" width="0.0211%" height="15" fill="rgb(219,183,54)" fg:x="12233446178" fg:w="3731357"/><text x="69.4552%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile (3,692,963 samples, 0.02%)</title><rect x="69.2263%" y="437" width="0.0209%" height="15" fill="rgb(216,185,54)" fg:x="12237177535" fg:w="3692963"/><text x="69.4763%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::hash (3,692,963 samples, 0.02%)</title><rect x="69.2263%" y="421" width="0.0209%" height="15" fill="rgb(254,217,39)" fg:x="12237177535" fg:w="3692963"/><text x="69.4763%" y="431.50"></text></g><g><title>regex_automata::util::captures::Captures::all (7,794,645 samples, 0.04%)</title><rect x="69.2472%" y="437" width="0.0441%" height="15" fill="rgb(240,178,23)" fg:x="12240870498" fg:w="7794645"/><text x="69.4972%" y="447.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::slot_len (7,794,645 samples, 0.04%)</title><rect x="69.2472%" y="421" width="0.0441%" height="15" fill="rgb(218,11,47)" fg:x="12240870498" fg:w="7794645"/><text x="69.4972%" y="431.50"></text></g><g><title>regex_automata::util::captures::GroupInfoInner::small_slot_len (7,794,645 samples, 0.04%)</title><rect x="69.2472%" y="405" width="0.0441%" height="15" fill="rgb(218,51,51)" fg:x="12240870498" fg:w="7794645"/><text x="69.4972%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7,794,645 samples, 0.04%)</title><rect x="69.2472%" y="389" width="0.0441%" height="15" fill="rgb(238,126,27)" fg:x="12240870498" fg:w="7794645"/><text x="69.4972%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (7,794,645 samples, 0.04%)</title><rect x="69.2472%" y="373" width="0.0441%" height="15" fill="rgb(249,202,22)" fg:x="12240870498" fg:w="7794645"/><text x="69.4972%" y="383.50"></text></g><g><title>regex_automata::util::captures::Captures::iter (27,215,951 samples, 0.15%)</title><rect x="69.2913%" y="437" width="0.1540%" height="15" fill="rgb(254,195,49)" fg:x="12248665143" fg:w="27215951"/><text x="69.5413%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (15,588,511 samples, 0.09%)</title><rect x="69.3571%" y="421" width="0.0882%" height="15" fill="rgb(208,123,14)" fg:x="12260292583" fg:w="15588511"/><text x="69.6071%" y="431.50"></text></g><g><title>regex_automata::util::captures::Captures::iter::_{{closure}} (15,588,511 samples, 0.09%)</title><rect x="69.3571%" y="405" width="0.0882%" height="15" fill="rgb(224,200,8)" fg:x="12260292583" fg:w="15588511"/><text x="69.6071%" y="415.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::pattern_names (15,588,511 samples, 0.09%)</title><rect x="69.3571%" y="389" width="0.0882%" height="15" fill="rgb(217,61,36)" fg:x="12260292583" fg:w="15588511"/><text x="69.6071%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15,588,511 samples, 0.09%)</title><rect x="69.3571%" y="373" width="0.0882%" height="15" fill="rgb(206,35,45)" fg:x="12260292583" fg:w="15588511"/><text x="69.6071%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (15,588,511 samples, 0.09%)</title><rect x="69.3571%" y="357" width="0.0882%" height="15" fill="rgb(217,65,33)" fg:x="12260292583" fg:w="15588511"/><text x="69.6071%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (15,588,511 samples, 0.09%)</title><rect x="69.3571%" y="341" width="0.0882%" height="15" fill="rgb(222,158,48)" fg:x="12260292583" fg:w="15588511"/><text x="69.6071%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (15,588,511 samples, 0.09%)</title><rect x="69.3571%" y="325" width="0.0882%" height="15" fill="rgb(254,2,54)" fg:x="12260292583" fg:w="15588511"/><text x="69.6071%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (15,588,511 samples, 0.09%)</title><rect x="69.3571%" y="309" width="0.0882%" height="15" fill="rgb(250,143,38)" fg:x="12260292583" fg:w="15588511"/><text x="69.6071%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (15,588,511 samples, 0.09%)</title><rect x="69.3571%" y="293" width="0.0882%" height="15" fill="rgb(248,25,0)" fg:x="12260292583" fg:w="15588511"/><text x="69.6071%" y="303.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::new (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="437" width="0.0211%" height="15" fill="rgb(206,152,27)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="421" width="0.0211%" height="15" fill="rgb(240,77,30)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="405" width="0.0211%" height="15" fill="rgb(231,5,3)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="389" width="0.0211%" height="15" fill="rgb(207,226,32)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="373" width="0.0211%" height="15" fill="rgb(222,207,47)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="357" width="0.0211%" height="15" fill="rgb(229,115,45)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="341" width="0.0211%" height="15" fill="rgb(224,191,6)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="325" width="0.0211%" height="15" fill="rgb(230,227,24)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="309" width="0.0211%" height="15" fill="rgb(228,80,19)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="319.50"></text></g><g><title>__rustc::__rdl_alloc (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="293" width="0.0211%" height="15" fill="rgb(247,229,0)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="303.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="277" width="0.0211%" height="15" fill="rgb(237,194,15)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="287.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="261" width="0.0211%" height="15" fill="rgb(219,203,20)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="271.50"></text></g><g><title>__posix_memalign (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="245" width="0.0211%" height="15" fill="rgb(234,128,8)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="255.50"></text></g><g><title>_mid_memalign.isra.0 (3,733,876 samples, 0.02%)</title><rect x="69.4453%" y="229" width="0.0211%" height="15" fill="rgb(248,202,8)" fg:x="12275881094" fg:w="3733876"/><text x="69.6953%" y="239.50"></text></g><g><title>regex_syntax::hir::Class::literal (3,703,880 samples, 0.02%)</title><rect x="69.4664%" y="437" width="0.0210%" height="15" fill="rgb(206,104,37)" fg:x="12279614970" fg:w="3703880"/><text x="69.7164%" y="447.50"></text></g><g><title>std::io::Write::write_all (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="437" width="0.0122%" height="15" fill="rgb(223,8,27)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="447.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="421" width="0.0122%" height="15" fill="rgb(216,217,28)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="431.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="405" width="0.0122%" height="15" fill="rgb(249,199,1)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="415.50"></text></g><g><title>std::sys::fs::unix::File::write (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="389" width="0.0122%" height="15" fill="rgb(240,85,17)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="399.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="373" width="0.0122%" height="15" fill="rgb(206,108,45)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="383.50"></text></g><g><title>__GI___libc_write (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="357" width="0.0122%" height="15" fill="rgb(245,210,41)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="367.50"></text></g><g><title>__syscall_cancel (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="341" width="0.0122%" height="15" fill="rgb(206,13,37)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="351.50"></text></g><g><title>__internal_syscall_cancel (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="325" width="0.0122%" height="15" fill="rgb(250,61,18)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="335.50"></text></g><g><title>__syscall_cancel_arch_end (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="309" width="0.0122%" height="15" fill="rgb(235,172,48)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="319.50"></text></g><g><title>[unknown] (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="293" width="0.0122%" height="15" fill="rgb(249,201,17)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="303.50"></text></g><g><title>[unknown] (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="277" width="0.0122%" height="15" fill="rgb(219,208,6)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="287.50"></text></g><g><title>[unknown] (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="261" width="0.0122%" height="15" fill="rgb(248,31,23)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="271.50"></text></g><g><title>[unknown] (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="245" width="0.0122%" height="15" fill="rgb(245,15,42)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="255.50"></text></g><g><title>[unknown] (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="229" width="0.0122%" height="15" fill="rgb(222,217,39)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="239.50"></text></g><g><title>[unknown] (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="213" width="0.0122%" height="15" fill="rgb(210,219,27)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="223.50"></text></g><g><title>[unknown] (2,148,701 samples, 0.01%)</title><rect x="69.4874%" y="197" width="0.0122%" height="15" fill="rgb(252,166,36)" fg:x="12283318850" fg:w="2148701"/><text x="69.7374%" y="207.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (1,900,110 samples, 0.01%)</title><rect x="69.4995%" y="437" width="0.0107%" height="15" fill="rgb(245,132,34)" fg:x="12285467551" fg:w="1900110"/><text x="69.7495%" y="447.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1,900,110 samples, 0.01%)</title><rect x="69.4995%" y="421" width="0.0107%" height="15" fill="rgb(236,54,3)" fg:x="12285467551" fg:w="1900110"/><text x="69.7495%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,900,110 samples, 0.01%)</title><rect x="69.4995%" y="405" width="0.0107%" height="15" fill="rgb(241,173,43)" fg:x="12285467551" fg:w="1900110"/><text x="69.7495%" y="415.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (1,900,110 samples, 0.01%)</title><rect x="69.4995%" y="389" width="0.0107%" height="15" fill="rgb(215,190,9)" fg:x="12285467551" fg:w="1900110"/><text x="69.7495%" y="399.50"></text></g><g><title>h2::proto::streams::recv::Recv::poll_data (1,900,110 samples, 0.01%)</title><rect x="69.4995%" y="373" width="0.0107%" height="15" fill="rgb(242,101,16)" fg:x="12285467551" fg:w="1900110"/><text x="69.7495%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,290,715 samples, 0.01%)</title><rect x="69.5104%" y="437" width="0.0130%" height="15" fill="rgb(223,190,21)" fg:x="12287396426" fg:w="2290715"/><text x="69.7604%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,290,715 samples, 0.01%)</title><rect x="69.5104%" y="421" width="0.0130%" height="15" fill="rgb(215,228,25)" fg:x="12287396426" fg:w="2290715"/><text x="69.7604%" y="431.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2,290,715 samples, 0.01%)</title><rect x="69.5104%" y="405" width="0.0130%" height="15" fill="rgb(225,36,22)" fg:x="12287396426" fg:w="2290715"/><text x="69.7604%" y="415.50"></text></g><g><title>[unknown] (9,538,792,689 samples, 53.96%)</title><rect x="15.5829%" y="453" width="53.9614%" height="15" fill="rgb(251,106,46)" fg:x="2754592167" fg:w="9538792689"/><text x="15.8329%" y="463.50">[unknown]</text></g><g><title>tracing_core::dispatcher::get_default (3,582,431 samples, 0.02%)</title><rect x="69.5240%" y="437" width="0.0203%" height="15" fill="rgb(208,90,1)" fg:x="12289802425" fg:w="3582431"/><text x="69.7740%" y="447.50"></text></g><g><title>tracing_core::event::Event::dispatch::_{{closure}} (3,582,431 samples, 0.02%)</title><rect x="69.5240%" y="421" width="0.0203%" height="15" fill="rgb(243,10,4)" fg:x="12289802425" fg:w="3582431"/><text x="69.7740%" y="431.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::event (3,582,431 samples, 0.02%)</title><rect x="69.5240%" y="405" width="0.0203%" height="15" fill="rgb(212,137,27)" fg:x="12289802425" fg:w="3582431"/><text x="69.7740%" y="415.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (3,582,431 samples, 0.02%)</title><rect x="69.5240%" y="389" width="0.0203%" height="15" fill="rgb(231,220,49)" fg:x="12289802425" fg:w="3582431"/><text x="69.7740%" y="399.50"></text></g><g><title>__rustc::__rdl_alloc (46,510,559 samples, 0.26%)</title><rect x="69.5487%" y="453" width="0.2631%" height="15" fill="rgb(237,96,20)" fg:x="12294157269" fg:w="46510559"/><text x="69.7987%" y="463.50"></text></g><g><title>__rustc::__rdl_dealloc (106,316,093 samples, 0.60%)</title><rect x="69.8118%" y="453" width="0.6014%" height="15" fill="rgb(239,229,30)" fg:x="12340667828" fg:w="106316093"/><text x="70.0618%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (44,259,456 samples, 0.25%)</title><rect x="70.1628%" y="437" width="0.2504%" height="15" fill="rgb(219,65,33)" fg:x="12402724465" fg:w="44259456"/><text x="70.4128%" y="447.50"></text></g><g><title>__rustc::__rdl_realloc (7,812,521 samples, 0.04%)</title><rect x="70.4132%" y="453" width="0.0442%" height="15" fill="rgb(243,134,7)" fg:x="12446983921" fg:w="7812521"/><text x="70.6632%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7,812,521 samples, 0.04%)</title><rect x="70.4132%" y="437" width="0.0442%" height="15" fill="rgb(216,177,54)" fg:x="12446983921" fg:w="7812521"/><text x="70.6632%" y="447.50"></text></g><g><title>std::sys::alloc::realloc_fallback (7,812,521 samples, 0.04%)</title><rect x="70.4132%" y="421" width="0.0442%" height="15" fill="rgb(211,160,20)" fg:x="12446983921" fg:w="7812521"/><text x="70.6632%" y="431.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (7,812,521 samples, 0.04%)</title><rect x="70.4132%" y="405" width="0.0442%" height="15" fill="rgb(239,85,39)" fg:x="12446983921" fg:w="7812521"/><text x="70.6632%" y="415.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots_imp (7,812,521 samples, 0.04%)</title><rect x="70.4132%" y="389" width="0.0442%" height="15" fill="rgb(232,125,22)" fg:x="12446983921" fg:w="7812521"/><text x="70.6632%" y="399.50"></text></g><g><title>__rustc::__rust_alloc (35,092,367 samples, 0.20%)</title><rect x="70.4574%" y="453" width="0.1985%" height="15" fill="rgb(244,57,34)" fg:x="12454796442" fg:w="35092367"/><text x="70.7074%" y="463.50"></text></g><g><title>__rustc::__rust_dealloc (146,536,567 samples, 0.83%)</title><rect x="70.6559%" y="453" width="0.8290%" height="15" fill="rgb(214,203,32)" fg:x="12489888809" fg:w="146536567"/><text x="70.9059%" y="463.50"></text></g><g><title>_int_malloc (2,112,151 samples, 0.01%)</title><rect x="71.4849%" y="453" width="0.0119%" height="15" fill="rgb(207,58,43)" fg:x="12636425376" fg:w="2112151"/><text x="71.7349%" y="463.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (2,112,151 samples, 0.01%)</title><rect x="71.4849%" y="437" width="0.0119%" height="15" fill="rgb(215,193,15)" fg:x="12636425376" fg:w="2112151"/><text x="71.7349%" y="447.50"></text></g><g><title>_start (1,816,288 samples, 0.01%)</title><rect x="71.4968%" y="453" width="0.0103%" height="15" fill="rgb(232,15,44)" fg:x="12638537527" fg:w="1816288"/><text x="71.7468%" y="463.50"></text></g><g><title>actix_server::server::ServerInner::run::{{closure}} (3,121,238 samples, 0.02%)</title><rect x="71.5071%" y="453" width="0.0177%" height="15" fill="rgb(212,3,48)" fg:x="12640353815" fg:w="3121238"/><text x="71.7571%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (36,661,073 samples, 0.21%)</title><rect x="71.5248%" y="453" width="0.2074%" height="15" fill="rgb(218,128,7)" fg:x="12643475053" fg:w="36661073"/><text x="71.7748%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36,661,073 samples, 0.21%)</title><rect x="71.5248%" y="437" width="0.2074%" height="15" fill="rgb(226,216,39)" fg:x="12643475053" fg:w="36661073"/><text x="71.7748%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36,661,073 samples, 0.21%)</title><rect x="71.5248%" y="421" width="0.2074%" height="15" fill="rgb(243,47,51)" fg:x="12643475053" fg:w="36661073"/><text x="71.7748%" y="431.50"></text></g><g><title>alloc::alloc::realloc (36,661,073 samples, 0.21%)</title><rect x="71.5248%" y="405" width="0.2074%" height="15" fill="rgb(241,183,40)" fg:x="12643475053" fg:w="36661073"/><text x="71.7748%" y="415.50"></text></g><g><title>realloc (36,661,073 samples, 0.21%)</title><rect x="71.5248%" y="389" width="0.2074%" height="15" fill="rgb(231,217,32)" fg:x="12643475053" fg:w="36661073"/><text x="71.7748%" y="399.50"></text></g><g><title>_int_realloc (36,661,073 samples, 0.21%)</title><rect x="71.5248%" y="373" width="0.2074%" height="15" fill="rgb(229,61,38)" fg:x="12643475053" fg:w="36661073"/><text x="71.7748%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (36,661,073 samples, 0.21%)</title><rect x="71.5248%" y="357" width="0.2074%" height="15" fill="rgb(225,210,5)" fg:x="12643475053" fg:w="36661073"/><text x="71.7748%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (20,914,262 samples, 0.12%)</title><rect x="71.7322%" y="453" width="0.1183%" height="15" fill="rgb(231,79,45)" fg:x="12680136126" fg:w="20914262"/><text x="71.9822%" y="463.50"></text></g><g><title>alloc_perturb (9,793,154 samples, 0.06%)</title><rect x="75.4289%" y="229" width="0.0554%" height="15" fill="rgb(224,100,7)" fg:x="13333616773" fg:w="9793154"/><text x="75.6789%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (638,322,948 samples, 3.61%)</title><rect x="71.8902%" y="309" width="3.6110%" height="15" fill="rgb(241,198,18)" fg:x="12708064885" fg:w="638322948"/><text x="72.1402%" y="319.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (638,322,948 samples, 3.61%)</title><rect x="71.8902%" y="293" width="3.6110%" height="15" fill="rgb(252,97,53)" fg:x="12708064885" fg:w="638322948"/><text x="72.1402%" y="303.50">allo..</text></g><g><title>alloc::alloc::alloc (638,322,948 samples, 3.61%)</title><rect x="71.8902%" y="277" width="3.6110%" height="15" fill="rgb(220,88,7)" fg:x="12708064885" fg:w="638322948"/><text x="72.1402%" y="287.50">allo..</text></g><g><title>malloc (631,518,764 samples, 3.57%)</title><rect x="71.9287%" y="261" width="3.5725%" height="15" fill="rgb(213,176,14)" fg:x="12714869069" fg:w="631518764"/><text x="72.1787%" y="271.50">mall..</text></g><g><title>_int_malloc (266,312,191 samples, 1.51%)</title><rect x="73.9946%" y="245" width="1.5065%" height="15" fill="rgb(246,73,7)" fg:x="13080075642" fg:w="266312191"/><text x="74.2446%" y="255.50"></text></g><g><title>unlink_chunk.isra.0 (2,977,906 samples, 0.02%)</title><rect x="75.4843%" y="229" width="0.0168%" height="15" fill="rgb(245,64,36)" fg:x="13343409927" fg:w="2977906"/><text x="75.7343%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (655,086,858 samples, 3.71%)</title><rect x="71.8902%" y="373" width="3.7059%" height="15" fill="rgb(245,80,10)" fg:x="12708064885" fg:w="655086858"/><text x="72.1402%" y="383.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (655,086,858 samples, 3.71%)</title><rect x="71.8902%" y="357" width="3.7059%" height="15" fill="rgb(232,107,50)" fg:x="12708064885" fg:w="655086858"/><text x="72.1402%" y="367.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (655,086,858 samples, 3.71%)</title><rect x="71.8902%" y="341" width="3.7059%" height="15" fill="rgb(253,3,0)" fg:x="12708064885" fg:w="655086858"/><text x="72.1402%" y="351.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (655,086,858 samples, 3.71%)</title><rect x="71.8902%" y="325" width="3.7059%" height="15" fill="rgb(212,99,53)" fg:x="12708064885" fg:w="655086858"/><text x="72.1402%" y="335.50">allo..</text></g><g><title>alloc::raw_vec::layout_array (16,763,910 samples, 0.09%)</title><rect x="75.5012%" y="309" width="0.0948%" height="15" fill="rgb(249,111,54)" fg:x="13346387833" fg:w="16763910"/><text x="75.7512%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::repeat (16,763,910 samples, 0.09%)</title><rect x="75.5012%" y="293" width="0.0948%" height="15" fill="rgb(249,55,30)" fg:x="13346387833" fg:w="16763910"/><text x="75.7512%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (16,763,910 samples, 0.09%)</title><rect x="75.5012%" y="277" width="0.0948%" height="15" fill="rgb(237,47,42)" fg:x="13346387833" fg:w="16763910"/><text x="75.7512%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16,763,910 samples, 0.09%)</title><rect x="75.5012%" y="261" width="0.0948%" height="15" fill="rgb(211,20,18)" fg:x="13346387833" fg:w="16763910"/><text x="75.7512%" y="271.50"></text></g><g><title>core::intrinsics::unlikely (16,763,910 samples, 0.09%)</title><rect x="75.5012%" y="245" width="0.0948%" height="15" fill="rgb(231,203,46)" fg:x="13346387833" fg:w="16763910"/><text x="75.7512%" y="255.50"></text></g><g><title>__memmove_avx_unaligned (29,220,655 samples, 0.17%)</title><rect x="75.6727%" y="341" width="0.1653%" height="15" fill="rgb(237,142,3)" fg:x="13376703332" fg:w="29220655"/><text x="75.9227%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (711,611,602 samples, 4.03%)</title><rect x="71.8505%" y="437" width="4.0256%" height="15" fill="rgb(241,107,1)" fg:x="12701050388" fg:w="711611602"/><text x="72.1005%" y="447.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (704,597,105 samples, 3.99%)</title><rect x="71.8902%" y="421" width="3.9859%" height="15" fill="rgb(229,83,13)" fg:x="12708064885" fg:w="704597105"/><text x="72.1402%" y="431.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (704,597,105 samples, 3.99%)</title><rect x="71.8902%" y="405" width="3.9859%" height="15" fill="rgb(241,91,40)" fg:x="12708064885" fg:w="704597105"/><text x="72.1402%" y="415.50">allo..</text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (704,597,105 samples, 3.99%)</title><rect x="71.8902%" y="389" width="3.9859%" height="15" fill="rgb(225,3,45)" fg:x="12708064885" fg:w="704597105"/><text x="72.1402%" y="399.50">&lt;T a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (49,510,247 samples, 0.28%)</title><rect x="75.5960%" y="373" width="0.2801%" height="15" fill="rgb(244,223,14)" fg:x="13363151743" fg:w="49510247"/><text x="75.8460%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49,510,247 samples, 0.28%)</title><rect x="75.5960%" y="357" width="0.2801%" height="15" fill="rgb(224,124,37)" fg:x="13363151743" fg:w="49510247"/><text x="75.8460%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (6,738,003 samples, 0.04%)</title><rect x="75.8380%" y="341" width="0.0381%" height="15" fill="rgb(251,171,30)" fg:x="13405923987" fg:w="6738003"/><text x="76.0880%" y="351.50"></text></g><g><title>__rustc::__rdl_alloc (10,589,429 samples, 0.06%)</title><rect x="75.8761%" y="437" width="0.0599%" height="15" fill="rgb(236,46,54)" fg:x="13412661990" fg:w="10589429"/><text x="76.1261%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (44,877,868 samples, 0.25%)</title><rect x="75.9360%" y="437" width="0.2539%" height="15" fill="rgb(245,213,5)" fg:x="13423251419" fg:w="44877868"/><text x="76.1860%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1,136,721,961 samples, 6.43%)</title><rect x="71.8505%" y="453" width="6.4305%" height="15" fill="rgb(230,144,27)" fg:x="12701050388" fg:w="1136721961"/><text x="72.1005%" y="463.50">alloc::v..</text></g><g><title>core::ptr::write (369,643,062 samples, 2.09%)</title><rect x="76.1899%" y="437" width="2.0911%" height="15" fill="rgb(220,86,6)" fg:x="13468129287" fg:w="369643062"/><text x="76.4399%" y="447.50">c..</text></g><g><title>[unknown] (3,210,203 samples, 0.02%)</title><rect x="78.2628%" y="421" width="0.0182%" height="15" fill="rgb(240,20,13)" fg:x="13834562146" fg:w="3210203"/><text x="78.5128%" y="431.50"></text></g><g><title>anon.6a6d9c7779370b3735e0fd61aea8543a.61.llvm.3321206061972806324 (2,386,657 samples, 0.01%)</title><rect x="78.2810%" y="453" width="0.0135%" height="15" fill="rgb(217,89,34)" fg:x="13837772349" fg:w="2386657"/><text x="78.5310%" y="463.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::pop_pending_open (2,379,056 samples, 0.01%)</title><rect x="78.2810%" y="437" width="0.0135%" height="15" fill="rgb(229,13,5)" fg:x="13837779950" fg:w="2379056"/><text x="78.5310%" y="447.50"></text></g><g><title>arrow_array::builder::generic_bytes_builder::GenericByteBuilder&lt;T&gt;::append_value (3,676,529 samples, 0.02%)</title><rect x="78.2999%" y="453" width="0.0208%" height="15" fill="rgb(244,67,35)" fg:x="13841125331" fg:w="3676529"/><text x="78.5499%" y="463.50"></text></g><g><title>arrow_array::builder::generic_list_builder::GenericListBuilder&lt;OffsetSize,T&gt;::next_offset (11,696,282 samples, 0.07%)</title><rect x="78.6042%" y="437" width="0.0662%" height="15" fill="rgb(221,40,2)" fg:x="13894916969" fg:w="11696282"/><text x="78.8542%" y="447.50"></text></g><g><title>&lt;arrow_array::builder::generic_bytes_builder::GenericByteBuilder&lt;T&gt; as arrow_array::builder::ArrayBuilder&gt;::len (11,696,282 samples, 0.07%)</title><rect x="78.6042%" y="421" width="0.0662%" height="15" fill="rgb(237,157,21)" fg:x="13894916969" fg:w="11696282"/><text x="78.8542%" y="431.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::push (3,911,892 samples, 0.02%)</title><rect x="78.6704%" y="421" width="0.0221%" height="15" fill="rgb(222,94,11)" fg:x="13906613251" fg:w="3911892"/><text x="78.9204%" y="431.50"></text></g><g><title>arrow_array::builder::generic_list_builder::GenericListBuilder&lt;OffsetSize,T&gt;::append (85,110,227 samples, 0.48%)</title><rect x="78.3207%" y="453" width="0.4815%" height="15" fill="rgb(249,113,6)" fg:x="13844801860" fg:w="85110227"/><text x="78.5707%" y="463.50"></text></g><g><title>arrow_buffer::builder::BufferBuilder&lt;T&gt;::append (23,298,836 samples, 0.13%)</title><rect x="78.6704%" y="437" width="0.1318%" height="15" fill="rgb(238,137,36)" fg:x="13906613251" fg:w="23298836"/><text x="78.9204%" y="447.50"></text></g><g><title>arrow_buffer::builder::BufferBuilder&lt;T&gt;::reserve (19,386,944 samples, 0.11%)</title><rect x="78.6925%" y="421" width="0.1097%" height="15" fill="rgb(210,102,26)" fg:x="13910525143" fg:w="19386944"/><text x="78.9425%" y="431.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::reserve (19,386,944 samples, 0.11%)</title><rect x="78.6925%" y="405" width="0.1097%" height="15" fill="rgb(218,30,30)" fg:x="13910525143" fg:w="19386944"/><text x="78.9425%" y="415.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="453" width="0.0141%" height="15" fill="rgb(214,67,26)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="463.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::with_capacity (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="437" width="0.0141%" height="15" fill="rgb(251,9,53)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="421" width="0.0141%" height="15" fill="rgb(228,204,25)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="431.50"></text></g><g><title>__rustc::__rdl_alloc (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="405" width="0.0141%" height="15" fill="rgb(207,153,8)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="389" width="0.0141%" height="15" fill="rgb(242,9,16)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="399.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="373" width="0.0141%" height="15" fill="rgb(217,211,10)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="383.50"></text></g><g><title>__posix_memalign (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="357" width="0.0141%" height="15" fill="rgb(219,228,52)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="367.50"></text></g><g><title>_mid_memalign.isra.0 (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="341" width="0.0141%" height="15" fill="rgb(231,92,29)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="351.50"></text></g><g><title>_int_memalign (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="325" width="0.0141%" height="15" fill="rgb(232,8,23)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="335.50"></text></g><g><title>_int_malloc (2,489,481 samples, 0.01%)</title><rect x="78.8022%" y="309" width="0.0141%" height="15" fill="rgb(216,211,34)" fg:x="13929912087" fg:w="2489481"/><text x="79.0522%" y="319.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::slice_with_length (277,734,526 samples, 1.57%)</title><rect x="78.8163%" y="453" width="1.5712%" height="15" fill="rgb(236,151,0)" fg:x="13932401568" fg:w="277734526"/><text x="79.0663%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (238,667,034 samples, 1.35%)</title><rect x="79.0373%" y="437" width="1.3502%" height="15" fill="rgb(209,168,3)" fg:x="13971469060" fg:w="238667034"/><text x="79.2873%" y="447.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::reallocate (77,980,934 samples, 0.44%)</title><rect x="80.3875%" y="453" width="0.4411%" height="15" fill="rgb(208,129,28)" fg:x="14210136094" fg:w="77980934"/><text x="80.6375%" y="463.50"></text></g><g><title>alloc::alloc::realloc (77,980,934 samples, 0.44%)</title><rect x="80.3875%" y="437" width="0.4411%" height="15" fill="rgb(229,78,22)" fg:x="14210136094" fg:w="77980934"/><text x="80.6375%" y="447.50"></text></g><g><title>__rustc::__rdl_realloc (77,980,934 samples, 0.44%)</title><rect x="80.3875%" y="421" width="0.4411%" height="15" fill="rgb(228,187,13)" fg:x="14210136094" fg:w="77980934"/><text x="80.6375%" y="431.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (77,980,934 samples, 0.44%)</title><rect x="80.3875%" y="405" width="0.4411%" height="15" fill="rgb(240,119,24)" fg:x="14210136094" fg:w="77980934"/><text x="80.6375%" y="415.50"></text></g><g><title>std::sys::alloc::realloc_fallback (77,980,934 samples, 0.44%)</title><rect x="80.3875%" y="389" width="0.4411%" height="15" fill="rgb(209,194,42)" fg:x="14210136094" fg:w="77980934"/><text x="80.6375%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (77,980,934 samples, 0.44%)</title><rect x="80.3875%" y="373" width="0.4411%" height="15" fill="rgb(247,200,46)" fg:x="14210136094" fg:w="77980934"/><text x="80.6375%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (77,980,934 samples, 0.44%)</title><rect x="80.3875%" y="357" width="0.4411%" height="15" fill="rgb(218,76,16)" fg:x="14210136094" fg:w="77980934"/><text x="80.6375%" y="367.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (313,002,463 samples, 1.77%)</title><rect x="80.9172%" y="437" width="1.7707%" height="15" fill="rgb(225,21,48)" fg:x="14303782270" fg:w="313002463"/><text x="81.1672%" y="447.50">&lt;..</text></g><g><title>&lt;arrow_buffer::buffer::scalar::ScalarBuffer&lt;T&gt; as core::convert::From&lt;arrow_buffer::buffer::immutable::Buffer&gt;&gt;::from (313,002,463 samples, 1.77%)</title><rect x="80.9172%" y="421" width="1.7707%" height="15" fill="rgb(239,223,50)" fg:x="14303782270" fg:w="313002463"/><text x="81.1672%" y="431.50">&lt;..</text></g><g><title>arrow_buffer::buffer::immutable::Buffer::deallocation (3,919,903 samples, 0.02%)</title><rect x="82.6657%" y="405" width="0.0222%" height="15" fill="rgb(244,45,21)" fg:x="14612864830" fg:w="3919903"/><text x="82.9157%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,919,903 samples, 0.02%)</title><rect x="82.6657%" y="389" width="0.0222%" height="15" fill="rgb(232,33,43)" fg:x="14612864830" fg:w="3919903"/><text x="82.9157%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,919,903 samples, 0.02%)</title><rect x="82.6657%" y="373" width="0.0222%" height="15" fill="rgb(209,8,3)" fg:x="14612864830" fg:w="3919903"/><text x="82.9157%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,919,903 samples, 0.02%)</title><rect x="82.6657%" y="357" width="0.0222%" height="15" fill="rgb(214,25,53)" fg:x="14612864830" fg:w="3919903"/><text x="82.9157%" y="367.50"></text></g><g><title>arrow_buffer::buffer::scalar::ScalarBuffer&lt;T&gt;::new (578,867,117 samples, 3.27%)</title><rect x="80.8286%" y="453" width="3.2747%" height="15" fill="rgb(254,186,54)" fg:x="14288117028" fg:w="578867117"/><text x="81.0786%" y="463.50">arr..</text></g><g><title>core::ptr::drop_in_place&lt;arrow_buffer::buffer::immutable::Buffer&gt; (250,199,412 samples, 1.42%)</title><rect x="82.6879%" y="437" width="1.4154%" height="15" fill="rgb(208,174,49)" fg:x="14616784733" fg:w="250199412"/><text x="82.9379%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow_buffer::bytes::Bytes&gt;&gt; (250,199,412 samples, 1.42%)</title><rect x="82.6879%" y="421" width="1.4154%" height="15" fill="rgb(233,191,51)" fg:x="14616784733" fg:w="250199412"/><text x="82.9379%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250,199,412 samples, 1.42%)</title><rect x="82.6879%" y="405" width="1.4154%" height="15" fill="rgb(222,134,10)" fg:x="14616784733" fg:w="250199412"/><text x="82.9379%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (35,299,113 samples, 0.20%)</title><rect x="83.9036%" y="389" width="0.1997%" height="15" fill="rgb(230,226,20)" fg:x="14831685032" fg:w="35299113"/><text x="84.1536%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (35,299,113 samples, 0.20%)</title><rect x="83.9036%" y="373" width="0.1997%" height="15" fill="rgb(251,111,25)" fg:x="14831685032" fg:w="35299113"/><text x="84.1536%" y="383.50"></text></g><g><title>arrow_buffer::builder::null::NullBufferBuilder::append (57,250,804 samples, 0.32%)</title><rect x="84.1033%" y="453" width="0.3239%" height="15" fill="rgb(224,40,46)" fg:x="14866984145" fg:w="57250804"/><text x="84.3533%" y="463.50"></text></g><g><title>arrow_buffer::builder::null::NullBufferBuilder::len (42,576,877 samples, 0.24%)</title><rect x="84.4271%" y="453" width="0.2409%" height="15" fill="rgb(236,108,47)" fg:x="14924234949" fg:w="42576877"/><text x="84.6771%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (34,841,082 samples, 0.20%)</title><rect x="84.4709%" y="437" width="0.1971%" height="15" fill="rgb(234,93,0)" fg:x="14931970744" fg:w="34841082"/><text x="84.7209%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2,186,726 samples, 0.01%)</title><rect x="84.6680%" y="421" width="0.0124%" height="15" fill="rgb(224,213,32)" fg:x="14966811826" fg:w="2186726"/><text x="84.9180%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2,186,726 samples, 0.01%)</title><rect x="84.6680%" y="405" width="0.0124%" height="15" fill="rgb(251,11,48)" fg:x="14966811826" fg:w="2186726"/><text x="84.9180%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2,186,726 samples, 0.01%)</title><rect x="84.6680%" y="389" width="0.0124%" height="15" fill="rgb(236,173,5)" fg:x="14966811826" fg:w="2186726"/><text x="84.9180%" y="399.50"></text></g><g><title>arrow_data::data::ArrayData::validate_values (12,551,983 samples, 0.07%)</title><rect x="84.6680%" y="453" width="0.0710%" height="15" fill="rgb(230,95,12)" fg:x="14966811826" fg:w="12551983"/><text x="84.9180%" y="463.50"></text></g><g><title>arrow_data::data::ArrayData::validate_utf8 (12,551,983 samples, 0.07%)</title><rect x="84.6680%" y="437" width="0.0710%" height="15" fill="rgb(232,209,1)" fg:x="14966811826" fg:w="12551983"/><text x="84.9180%" y="447.50"></text></g><g><title>core::str::converts::from_utf8 (10,365,257 samples, 0.06%)</title><rect x="84.6804%" y="421" width="0.0586%" height="15" fill="rgb(232,6,1)" fg:x="14968998552" fg:w="10365257"/><text x="84.9304%" y="431.50"></text></g><g><title>core::str::validations::run_utf8_validation (10,365,257 samples, 0.06%)</title><rect x="84.6804%" y="405" width="0.0586%" height="15" fill="rgb(210,224,50)" fg:x="14968998552" fg:w="10365257"/><text x="84.9304%" y="415.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::null_bit_buffer (2,112,257 samples, 0.01%)</title><rect x="84.7390%" y="453" width="0.0119%" height="15" fill="rgb(228,127,35)" fg:x="14979363809" fg:w="2112257"/><text x="84.9890%" y="463.50"></text></g><g><title>arrow_ipc::convert::build_field (2,398,306 samples, 0.01%)</title><rect x="84.7510%" y="453" width="0.0136%" height="15" fill="rgb(245,102,45)" fg:x="14981476066" fg:w="2398306"/><text x="85.0010%" y="463.50"></text></g><g><title>arrow_ipc::reader::create_array (2,091,908 samples, 0.01%)</title><rect x="84.7645%" y="453" width="0.0118%" height="15" fill="rgb(214,1,49)" fg:x="14983874372" fg:w="2091908"/><text x="85.0145%" y="463.50"></text></g><g><title>arrow_ipc::writer::IpcDataGenerator::schema_to_bytes_with_dictionary_tracker (3,926,254 samples, 0.02%)</title><rect x="84.7764%" y="453" width="0.0222%" height="15" fill="rgb(226,163,40)" fg:x="14985966280" fg:w="3926254"/><text x="85.0264%" y="463.50"></text></g><g><title>arrow_ipc::convert::IpcSchemaEncoder::schema_to_fb_offset (3,926,254 samples, 0.02%)</title><rect x="84.7764%" y="437" width="0.0222%" height="15" fill="rgb(239,212,28)" fg:x="14985966280" fg:w="3926254"/><text x="85.0264%" y="447.50"></text></g><g><title>arrow_ipc::writer::write_array_data (6,489,666 samples, 0.04%)</title><rect x="84.7986%" y="453" width="0.0367%" height="15" fill="rgb(220,20,13)" fg:x="14989892534" fg:w="6489666"/><text x="85.0486%" y="463.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::new (6,489,666 samples, 0.04%)</title><rect x="84.7986%" y="437" width="0.0367%" height="15" fill="rgb(210,164,35)" fg:x="14989892534" fg:w="6489666"/><text x="85.0486%" y="447.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::with_capacity (6,489,666 samples, 0.04%)</title><rect x="84.7986%" y="421" width="0.0367%" height="15" fill="rgb(248,109,41)" fg:x="14989892534" fg:w="6489666"/><text x="85.0486%" y="431.50"></text></g><g><title>alloc::alloc::alloc (6,489,666 samples, 0.04%)</title><rect x="84.7986%" y="405" width="0.0367%" height="15" fill="rgb(238,23,50)" fg:x="14989892534" fg:w="6489666"/><text x="85.0486%" y="415.50"></text></g><g><title>__rustc::__rdl_alloc (6,489,666 samples, 0.04%)</title><rect x="84.7986%" y="389" width="0.0367%" height="15" fill="rgb(211,48,49)" fg:x="14989892534" fg:w="6489666"/><text x="85.0486%" y="399.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6,489,666 samples, 0.04%)</title><rect x="84.7986%" y="373" width="0.0367%" height="15" fill="rgb(223,36,21)" fg:x="14989892534" fg:w="6489666"/><text x="85.0486%" y="383.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (6,489,666 samples, 0.04%)</title><rect x="84.7986%" y="357" width="0.0367%" height="15" fill="rgb(207,123,46)" fg:x="14989892534" fg:w="6489666"/><text x="85.0486%" y="367.50"></text></g><g><title>__posix_memalign (6,489,666 samples, 0.04%)</title><rect x="84.7986%" y="341" width="0.0367%" height="15" fill="rgb(240,218,32)" fg:x="14989892534" fg:w="6489666"/><text x="85.0486%" y="351.50"></text></g><g><title>_mid_memalign.isra.0 (6,489,666 samples, 0.04%)</title><rect x="84.7986%" y="325" width="0.0367%" height="15" fill="rgb(252,5,43)" fg:x="14989892534" fg:w="6489666"/><text x="85.0486%" y="335.50"></text></g><g><title>_int_memalign (2,557,361 samples, 0.01%)</title><rect x="84.8208%" y="309" width="0.0145%" height="15" fill="rgb(252,84,19)" fg:x="14993824839" fg:w="2557361"/><text x="85.0708%" y="319.50"></text></g><g><title>_int_malloc (2,557,361 samples, 0.01%)</title><rect x="84.8208%" y="293" width="0.0145%" height="15" fill="rgb(243,152,39)" fg:x="14993824839" fg:w="2557361"/><text x="85.0708%" y="303.50"></text></g><g><title>arrow_ipc::writer::write_buffer (185,203,605 samples, 1.05%)</title><rect x="84.8353%" y="453" width="1.0477%" height="15" fill="rgb(234,160,15)" fg:x="14996382200" fg:w="185203605"/><text x="85.0853%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (185,203,605 samples, 1.05%)</title><rect x="84.8353%" y="437" width="1.0477%" height="15" fill="rgb(237,34,20)" fg:x="14996382200" fg:w="185203605"/><text x="85.0853%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (185,203,605 samples, 1.05%)</title><rect x="84.8353%" y="421" width="1.0477%" height="15" fill="rgb(229,97,13)" fg:x="14996382200" fg:w="185203605"/><text x="85.0853%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (185,203,605 samples, 1.05%)</title><rect x="84.8353%" y="405" width="1.0477%" height="15" fill="rgb(234,71,50)" fg:x="14996382200" fg:w="185203605"/><text x="85.0853%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (185,203,605 samples, 1.05%)</title><rect x="84.8353%" y="389" width="1.0477%" height="15" fill="rgb(253,155,4)" fg:x="14996382200" fg:w="185203605"/><text x="85.0853%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (185,203,605 samples, 1.05%)</title><rect x="84.8353%" y="373" width="1.0477%" height="15" fill="rgb(222,185,37)" fg:x="14996382200" fg:w="185203605"/><text x="85.0853%" y="383.50"></text></g><g><title>[unknown] (41,739,205 samples, 0.24%)</title><rect x="85.6469%" y="357" width="0.2361%" height="15" fill="rgb(251,177,13)" fg:x="15139846600" fg:w="41739205"/><text x="85.8969%" y="367.50"></text></g><g><title>[unknown] (22,727,104 samples, 0.13%)</title><rect x="85.7544%" y="341" width="0.1286%" height="15" fill="rgb(250,179,40)" fg:x="15158858701" fg:w="22727104"/><text x="86.0044%" y="351.50"></text></g><g><title>[unknown] (17,911,563 samples, 0.10%)</title><rect x="85.7817%" y="325" width="0.1013%" height="15" fill="rgb(242,44,2)" fg:x="15163674242" fg:w="17911563"/><text x="86.0317%" y="335.50"></text></g><g><title>[unknown] (17,911,563 samples, 0.10%)</title><rect x="85.7817%" y="309" width="0.1013%" height="15" fill="rgb(216,177,13)" fg:x="15163674242" fg:w="17911563"/><text x="86.0317%" y="319.50"></text></g><g><title>[unknown] (16,055,885 samples, 0.09%)</title><rect x="85.7922%" y="293" width="0.0908%" height="15" fill="rgb(216,106,43)" fg:x="15165529920" fg:w="16055885"/><text x="86.0422%" y="303.50"></text></g><g><title>[unknown] (13,862,107 samples, 0.08%)</title><rect x="85.8046%" y="277" width="0.0784%" height="15" fill="rgb(216,183,2)" fg:x="15167723698" fg:w="13862107"/><text x="86.0546%" y="287.50"></text></g><g><title>[unknown] (11,584,078 samples, 0.07%)</title><rect x="85.8175%" y="261" width="0.0655%" height="15" fill="rgb(249,75,3)" fg:x="15170001727" fg:w="11584078"/><text x="86.0675%" y="271.50"></text></g><g><title>[unknown] (11,584,078 samples, 0.07%)</title><rect x="85.8175%" y="245" width="0.0655%" height="15" fill="rgb(219,67,39)" fg:x="15170001727" fg:w="11584078"/><text x="86.0675%" y="255.50"></text></g><g><title>[unknown] (11,584,078 samples, 0.07%)</title><rect x="85.8175%" y="229" width="0.0655%" height="15" fill="rgb(253,228,2)" fg:x="15170001727" fg:w="11584078"/><text x="86.0675%" y="239.50"></text></g><g><title>[unknown] (11,584,078 samples, 0.07%)</title><rect x="85.8175%" y="213" width="0.0655%" height="15" fill="rgb(235,138,27)" fg:x="15170001727" fg:w="11584078"/><text x="86.0675%" y="223.50"></text></g><g><title>[unknown] (11,584,078 samples, 0.07%)</title><rect x="85.8175%" y="197" width="0.0655%" height="15" fill="rgb(236,97,51)" fg:x="15170001727" fg:w="11584078"/><text x="86.0675%" y="207.50"></text></g><g><title>[unknown] (9,238,573 samples, 0.05%)</title><rect x="85.8307%" y="181" width="0.0523%" height="15" fill="rgb(240,80,30)" fg:x="15172347232" fg:w="9238573"/><text x="86.0807%" y="191.50"></text></g><g><title>[unknown] (6,964,525 samples, 0.04%)</title><rect x="85.8436%" y="165" width="0.0394%" height="15" fill="rgb(230,178,19)" fg:x="15174621280" fg:w="6964525"/><text x="86.0936%" y="175.50"></text></g><g><title>[unknown] (6,964,525 samples, 0.04%)</title><rect x="85.8436%" y="149" width="0.0394%" height="15" fill="rgb(210,190,27)" fg:x="15174621280" fg:w="6964525"/><text x="86.0936%" y="159.50"></text></g><g><title>[unknown] (4,726,763 samples, 0.03%)</title><rect x="85.8563%" y="133" width="0.0267%" height="15" fill="rgb(222,107,31)" fg:x="15176859042" fg:w="4726763"/><text x="86.1063%" y="143.50"></text></g><g><title>[unknown] (4,726,763 samples, 0.03%)</title><rect x="85.8563%" y="117" width="0.0267%" height="15" fill="rgb(216,127,34)" fg:x="15176859042" fg:w="4726763"/><text x="86.1063%" y="127.50"></text></g><g><title>arrow_ipc::writer::write_message (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="453" width="1.2080%" height="15" fill="rgb(234,116,52)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="463.50"></text></g><g><title>arrow_ipc::writer::write_body_buffers (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="437" width="1.2080%" height="15" fill="rgb(222,124,15)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="447.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="421" width="1.2080%" height="15" fill="rgb(231,179,28)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="431.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="405" width="1.2080%" height="15" fill="rgb(226,93,45)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="389" width="1.2080%" height="15" fill="rgb(215,8,51)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="373" width="1.2080%" height="15" fill="rgb(223,106,5)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="357" width="1.2080%" height="15" fill="rgb(250,191,5)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="341" width="1.2080%" height="15" fill="rgb(242,132,44)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="325" width="1.2080%" height="15" fill="rgb(251,152,29)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="309" width="1.2080%" height="15" fill="rgb(218,179,5)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (213,542,187 samples, 1.21%)</title><rect x="85.8830%" y="293" width="1.2080%" height="15" fill="rgb(227,67,19)" fg:x="15181585805" fg:w="213542187"/><text x="86.1330%" y="303.50"></text></g><g><title>[unknown] (38,721,871 samples, 0.22%)</title><rect x="86.8720%" y="277" width="0.2191%" height="15" fill="rgb(233,119,31)" fg:x="15356406121" fg:w="38721871"/><text x="87.1220%" y="287.50"></text></g><g><title>[unknown] (28,591,148 samples, 0.16%)</title><rect x="86.9293%" y="261" width="0.1617%" height="15" fill="rgb(241,120,22)" fg:x="15366536844" fg:w="28591148"/><text x="87.1793%" y="271.50"></text></g><g><title>[unknown] (23,841,900 samples, 0.13%)</title><rect x="86.9561%" y="245" width="0.1349%" height="15" fill="rgb(224,102,30)" fg:x="15371286092" fg:w="23841900"/><text x="87.2061%" y="255.50"></text></g><g><title>[unknown] (23,841,900 samples, 0.13%)</title><rect x="86.9561%" y="229" width="0.1349%" height="15" fill="rgb(210,164,37)" fg:x="15371286092" fg:w="23841900"/><text x="87.2061%" y="239.50"></text></g><g><title>[unknown] (19,047,918 samples, 0.11%)</title><rect x="86.9833%" y="213" width="0.1078%" height="15" fill="rgb(226,191,16)" fg:x="15376080074" fg:w="19047918"/><text x="87.2333%" y="223.50"></text></g><g><title>[unknown] (16,628,033 samples, 0.09%)</title><rect x="86.9969%" y="197" width="0.0941%" height="15" fill="rgb(214,40,45)" fg:x="15378499959" fg:w="16628033"/><text x="87.2469%" y="207.50"></text></g><g><title>[unknown] (14,170,632 samples, 0.08%)</title><rect x="87.0109%" y="181" width="0.0802%" height="15" fill="rgb(244,29,26)" fg:x="15380957360" fg:w="14170632"/><text x="87.2609%" y="191.50"></text></g><g><title>[unknown] (14,170,632 samples, 0.08%)</title><rect x="87.0109%" y="165" width="0.0802%" height="15" fill="rgb(216,16,5)" fg:x="15380957360" fg:w="14170632"/><text x="87.2609%" y="175.50"></text></g><g><title>[unknown] (11,881,722 samples, 0.07%)</title><rect x="87.0238%" y="149" width="0.0672%" height="15" fill="rgb(249,76,35)" fg:x="15383246270" fg:w="11881722"/><text x="87.2738%" y="159.50"></text></g><g><title>[unknown] (9,683,883 samples, 0.05%)</title><rect x="87.0362%" y="133" width="0.0548%" height="15" fill="rgb(207,11,44)" fg:x="15385444109" fg:w="9683883"/><text x="87.2862%" y="143.50"></text></g><g><title>[unknown] (9,683,883 samples, 0.05%)</title><rect x="87.0362%" y="117" width="0.0548%" height="15" fill="rgb(228,190,49)" fg:x="15385444109" fg:w="9683883"/><text x="87.2862%" y="127.50"></text></g><g><title>[unknown] (7,116,678 samples, 0.04%)</title><rect x="87.0508%" y="101" width="0.0403%" height="15" fill="rgb(214,173,12)" fg:x="15388011314" fg:w="7116678"/><text x="87.3008%" y="111.50"></text></g><g><title>[unknown] (2,498,005 samples, 0.01%)</title><rect x="87.0769%" y="85" width="0.0141%" height="15" fill="rgb(218,26,35)" fg:x="15392629987" fg:w="2498005"/><text x="87.3269%" y="95.50"></text></g><g><title>[unknown] (2,498,005 samples, 0.01%)</title><rect x="87.0769%" y="69" width="0.0141%" height="15" fill="rgb(220,200,19)" fg:x="15392629987" fg:w="2498005"/><text x="87.3269%" y="79.50"></text></g><g><title>[unknown] (2,498,005 samples, 0.01%)</title><rect x="87.0769%" y="53" width="0.0141%" height="15" fill="rgb(239,95,49)" fg:x="15392629987" fg:w="2498005"/><text x="87.3269%" y="63.50"></text></g><g><title>[unknown] (2,498,005 samples, 0.01%)</title><rect x="87.0769%" y="37" width="0.0141%" height="15" fill="rgb(235,85,53)" fg:x="15392629987" fg:w="2498005"/><text x="87.3269%" y="47.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (2,257,422 samples, 0.01%)</title><rect x="87.0910%" y="453" width="0.0128%" height="15" fill="rgb(233,133,31)" fg:x="15395127992" fg:w="2257422"/><text x="87.3410%" y="463.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2,257,422 samples, 0.01%)</title><rect x="87.0910%" y="437" width="0.0128%" height="15" fill="rgb(218,25,20)" fg:x="15395127992" fg:w="2257422"/><text x="87.3410%" y="447.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (2,257,422 samples, 0.01%)</title><rect x="87.0910%" y="421" width="0.0128%" height="15" fill="rgb(252,210,38)" fg:x="15395127992" fg:w="2257422"/><text x="87.3410%" y="431.50"></text></g><g><title>chrono::offset::utc::Utc::now (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="453" width="0.0150%" height="15" fill="rgb(242,134,21)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="437" width="0.0150%" height="15" fill="rgb(213,28,48)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="447.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="421" width="0.0150%" height="15" fill="rgb(250,196,2)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="431.50"></text></g><g><title>[[vdso]] (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="405" width="0.0150%" height="15" fill="rgb(227,5,17)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="415.50"></text></g><g><title>[unknown] (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="389" width="0.0150%" height="15" fill="rgb(221,226,24)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="399.50"></text></g><g><title>[unknown] (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="373" width="0.0150%" height="15" fill="rgb(211,5,48)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="383.50"></text></g><g><title>[unknown] (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="357" width="0.0150%" height="15" fill="rgb(219,150,6)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="367.50"></text></g><g><title>[unknown] (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="341" width="0.0150%" height="15" fill="rgb(251,46,16)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="351.50"></text></g><g><title>[unknown] (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="325" width="0.0150%" height="15" fill="rgb(220,204,40)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="335.50"></text></g><g><title>[unknown] (2,652,079 samples, 0.02%)</title><rect x="87.1038%" y="309" width="0.0150%" height="15" fill="rgb(211,85,2)" fg:x="15397385414" fg:w="2652079"/><text x="87.3538%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30,734,020 samples, 0.17%)</title><rect x="87.7534%" y="373" width="0.1739%" height="15" fill="rgb(229,17,7)" fg:x="15512211932" fg:w="30734020"/><text x="88.0034%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (53,836,158 samples, 0.30%)</title><rect x="87.7316%" y="389" width="0.3046%" height="15" fill="rgb(239,72,28)" fg:x="15508366929" fg:w="53836158"/><text x="87.9816%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (19,257,135 samples, 0.11%)</title><rect x="87.9272%" y="373" width="0.1089%" height="15" fill="rgb(230,47,54)" fg:x="15542945952" fg:w="19257135"/><text x="88.1772%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19,328,226 samples, 0.11%)</title><rect x="88.0362%" y="373" width="0.1093%" height="15" fill="rgb(214,50,8)" fg:x="15562203087" fg:w="19328226"/><text x="88.2862%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (196,974,552 samples, 1.11%)</title><rect x="87.1409%" y="437" width="1.1143%" height="15" fill="rgb(216,198,43)" fg:x="15403946742" fg:w="196974552"/><text x="87.3909%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (196,974,552 samples, 1.11%)</title><rect x="87.1409%" y="421" width="1.1143%" height="15" fill="rgb(234,20,35)" fg:x="15403946742" fg:w="196974552"/><text x="87.3909%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (196,974,552 samples, 1.11%)</title><rect x="87.1409%" y="405" width="1.1143%" height="15" fill="rgb(254,45,19)" fg:x="15403946742" fg:w="196974552"/><text x="87.3909%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (38,718,207 samples, 0.22%)</title><rect x="88.0362%" y="389" width="0.2190%" height="15" fill="rgb(219,14,44)" fg:x="15562203087" fg:w="38718207"/><text x="88.2862%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (19,389,981 samples, 0.11%)</title><rect x="88.1455%" y="373" width="0.1097%" height="15" fill="rgb(217,220,26)" fg:x="15581531313" fg:w="19389981"/><text x="88.3955%" y="383.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (69,319,209 samples, 0.39%)</title><rect x="88.2552%" y="437" width="0.3921%" height="15" fill="rgb(213,158,28)" fg:x="15600921294" fg:w="69319209"/><text x="88.5052%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (53,735,498 samples, 0.30%)</title><rect x="88.3434%" y="421" width="0.3040%" height="15" fill="rgb(252,51,52)" fg:x="15616505005" fg:w="53735498"/><text x="88.5934%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (53,735,498 samples, 0.30%)</title><rect x="88.3434%" y="405" width="0.3040%" height="15" fill="rgb(246,89,16)" fg:x="15616505005" fg:w="53735498"/><text x="88.5934%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (53,735,498 samples, 0.30%)</title><rect x="88.3434%" y="389" width="0.3040%" height="15" fill="rgb(216,158,49)" fg:x="15616505005" fg:w="53735498"/><text x="88.5934%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19,356,498 samples, 0.11%)</title><rect x="88.7124%" y="341" width="0.1095%" height="15" fill="rgb(236,107,19)" fg:x="15681744156" fg:w="19356498"/><text x="88.9624%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (3,925,374 samples, 0.02%)</title><rect x="88.7997%" y="325" width="0.0222%" height="15" fill="rgb(228,185,30)" fg:x="15697175280" fg:w="3925374"/><text x="89.0497%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,925,374 samples, 0.02%)</title><rect x="88.7997%" y="309" width="0.0222%" height="15" fill="rgb(246,134,8)" fg:x="15697175280" fg:w="3925374"/><text x="89.0497%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (65,862,727 samples, 0.37%)</title><rect x="89.7585%" y="309" width="0.3726%" height="15" fill="rgb(214,143,50)" fg:x="15866666797" fg:w="65862727"/><text x="90.0085%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (65,862,727 samples, 0.37%)</title><rect x="89.7585%" y="293" width="0.3726%" height="15" fill="rgb(228,75,8)" fg:x="15866666797" fg:w="65862727"/><text x="90.0085%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (547,779,266 samples, 3.10%)</title><rect x="87.1188%" y="453" width="3.0988%" height="15" fill="rgb(207,175,4)" fg:x="15400037493" fg:w="547779266"/><text x="87.3688%" y="463.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (277,576,256 samples, 1.57%)</title><rect x="88.6473%" y="437" width="1.5703%" height="15" fill="rgb(205,108,24)" fg:x="15670240503" fg:w="277576256"/><text x="88.8973%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (277,576,256 samples, 1.57%)</title><rect x="88.6473%" y="421" width="1.5703%" height="15" fill="rgb(244,120,49)" fg:x="15670240503" fg:w="277576256"/><text x="88.8973%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (277,576,256 samples, 1.57%)</title><rect x="88.6473%" y="405" width="1.5703%" height="15" fill="rgb(223,47,38)" fg:x="15670240503" fg:w="277576256"/><text x="88.8973%" y="415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (277,576,256 samples, 1.57%)</title><rect x="88.6473%" y="389" width="1.5703%" height="15" fill="rgb(229,179,11)" fg:x="15670240503" fg:w="277576256"/><text x="88.8973%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (277,576,256 samples, 1.57%)</title><rect x="88.6473%" y="373" width="1.5703%" height="15" fill="rgb(231,122,1)" fg:x="15670240503" fg:w="277576256"/><text x="88.8973%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (277,576,256 samples, 1.57%)</title><rect x="88.6473%" y="357" width="1.5703%" height="15" fill="rgb(245,119,9)" fg:x="15670240503" fg:w="277576256"/><text x="88.8973%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u8 (246,716,105 samples, 1.40%)</title><rect x="88.8219%" y="341" width="1.3957%" height="15" fill="rgb(241,163,25)" fg:x="15701100654" fg:w="246716105"/><text x="89.0719%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (157,419,084 samples, 0.89%)</title><rect x="89.3271%" y="325" width="0.8905%" height="15" fill="rgb(217,214,3)" fg:x="15790397675" fg:w="157419084"/><text x="89.5771%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (15,287,235 samples, 0.09%)</title><rect x="90.1311%" y="309" width="0.0865%" height="15" fill="rgb(240,86,28)" fg:x="15932529524" fg:w="15287235"/><text x="90.3811%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,406,107 samples, 0.02%)</title><rect x="90.2176%" y="453" width="0.0249%" height="15" fill="rgb(215,47,9)" fg:x="15947816759" fg:w="4406107"/><text x="90.4676%" y="463.50"></text></g><g><title>actix_rt::system::CURRENT::_{{constant}}::_{{closure}} (2,039,744 samples, 0.01%)</title><rect x="90.2310%" y="437" width="0.0115%" height="15" fill="rgb(252,25,45)" fg:x="15950183122" fg:w="2039744"/><text x="90.4810%" y="447.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (2,039,744 samples, 0.01%)</title><rect x="90.2310%" y="421" width="0.0115%" height="15" fill="rgb(251,164,9)" fg:x="15950183122" fg:w="2039744"/><text x="90.4810%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2,039,744 samples, 0.01%)</title><rect x="90.2310%" y="405" width="0.0115%" height="15" fill="rgb(233,194,0)" fg:x="15950183122" fg:w="2039744"/><text x="90.4810%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_array::array::byte_array::GenericByteArray&lt;arrow_array::types::GenericStringType&lt;i64&gt;&gt;&gt; (11,743,409 samples, 0.07%)</title><rect x="90.2425%" y="453" width="0.0664%" height="15" fill="rgb(249,111,24)" fg:x="15952222866" fg:w="11743409"/><text x="90.4925%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_buffer::buffer::offset::OffsetBuffer&lt;i32&gt;&gt; (11,743,409 samples, 0.07%)</title><rect x="90.2425%" y="437" width="0.0664%" height="15" fill="rgb(250,223,3)" fg:x="15952222866" fg:w="11743409"/><text x="90.4925%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_buffer::buffer::scalar::ScalarBuffer&lt;i32&gt;&gt; (11,743,409 samples, 0.07%)</title><rect x="90.2425%" y="421" width="0.0664%" height="15" fill="rgb(236,178,37)" fg:x="15952222866" fg:w="11743409"/><text x="90.4925%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_buffer::buffer::immutable::Buffer&gt; (11,743,409 samples, 0.07%)</title><rect x="90.2425%" y="405" width="0.0664%" height="15" fill="rgb(241,158,50)" fg:x="15952222866" fg:w="11743409"/><text x="90.4925%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow_buffer::bytes::Bytes&gt;&gt; (11,743,409 samples, 0.07%)</title><rect x="90.2425%" y="389" width="0.0664%" height="15" fill="rgb(213,121,41)" fg:x="15952222866" fg:w="11743409"/><text x="90.4925%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,743,409 samples, 0.07%)</title><rect x="90.2425%" y="373" width="0.0664%" height="15" fill="rgb(240,92,3)" fg:x="15952222866" fg:w="11743409"/><text x="90.4925%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (11,743,409 samples, 0.07%)</title><rect x="90.2425%" y="357" width="0.0664%" height="15" fill="rgb(205,123,3)" fg:x="15952222866" fg:w="11743409"/><text x="90.4925%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (11,743,409 samples, 0.07%)</title><rect x="90.2425%" y="341" width="0.0664%" height="15" fill="rgb(205,97,47)" fg:x="15952222866" fg:w="11743409"/><text x="90.4925%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (3,924,663 samples, 0.02%)</title><rect x="90.3090%" y="453" width="0.0222%" height="15" fill="rgb(247,152,14)" fg:x="15963966275" fg:w="3924663"/><text x="90.5590%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="453" width="0.0209%" height="15" fill="rgb(248,195,53)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="437" width="0.0209%" height="15" fill="rgb(226,201,16)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt; (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="421" width="0.0209%" height="15" fill="rgb(205,98,0)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedMap&gt; (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="405" width="0.0209%" height="15" fill="rgb(214,191,48)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="389" width="0.0209%" height="15" fill="rgb(237,112,39)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="373" width="0.0209%" height="15" fill="rgb(247,203,27)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::map::Utf8BoundedEntry]&gt; (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="357" width="0.0209%" height="15" fill="rgb(235,124,28)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt; (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="341" width="0.0209%" height="15" fill="rgb(208,207,46)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="325" width="0.0209%" height="15" fill="rgb(234,176,4)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="309" width="0.0209%" height="15" fill="rgb(230,133,28)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="293" width="0.0209%" height="15" fill="rgb(211,137,40)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="277" width="0.0209%" height="15" fill="rgb(254,35,13)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (3,693,827 samples, 0.02%)</title><rect x="90.3312%" y="261" width="0.0209%" height="15" fill="rgb(225,49,51)" fg:x="15967890938" fg:w="3693827"/><text x="90.5812%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (69,944,983 samples, 0.40%)</title><rect x="90.3521%" y="421" width="0.3957%" height="15" fill="rgb(251,10,15)" fg:x="15971584765" fg:w="69944983"/><text x="90.6021%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69,944,983 samples, 0.40%)</title><rect x="90.3521%" y="405" width="0.3957%" height="15" fill="rgb(228,207,15)" fg:x="15971584765" fg:w="69944983"/><text x="90.6021%" y="415.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::get (72,162,963 samples, 0.41%)</title><rect x="90.3521%" y="437" width="0.4082%" height="15" fill="rgb(241,99,19)" fg:x="15971584765" fg:w="72162963"/><text x="90.6021%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2,217,980 samples, 0.01%)</title><rect x="90.7477%" y="421" width="0.0125%" height="15" fill="rgb(207,104,49)" fg:x="16041529748" fg:w="2217980"/><text x="90.9977%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2,217,980 samples, 0.01%)</title><rect x="90.7477%" y="405" width="0.0125%" height="15" fill="rgb(234,99,18)" fg:x="16041529748" fg:w="2217980"/><text x="90.9977%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2,217,980 samples, 0.01%)</title><rect x="90.7477%" y="389" width="0.0125%" height="15" fill="rgb(213,191,49)" fg:x="16041529748" fg:w="2217980"/><text x="90.9977%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2,217,980 samples, 0.01%)</title><rect x="90.7477%" y="373" width="0.0125%" height="15" fill="rgb(210,226,19)" fg:x="16041529748" fg:w="2217980"/><text x="90.9977%" y="383.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (2,217,980 samples, 0.01%)</title><rect x="90.7477%" y="357" width="0.0125%" height="15" fill="rgb(229,97,18)" fg:x="16041529748" fg:w="2217980"/><text x="90.9977%" y="367.50"></text></g><g><title>core::slice::index::get_noubcheck (2,217,980 samples, 0.01%)</title><rect x="90.7477%" y="341" width="0.0125%" height="15" fill="rgb(211,167,15)" fg:x="16041529748" fg:w="2217980"/><text x="90.9977%" y="351.50"></text></g><g><title>core::core_arch::x86::pclmulqdq::_mm_clmulepi64_si128 (44,088,431 samples, 0.25%)</title><rect x="90.7603%" y="421" width="0.2494%" height="15" fill="rgb(210,169,34)" fg:x="16043747728" fg:w="44088431"/><text x="91.0103%" y="431.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::calculate (164,656,097 samples, 0.93%)</title><rect x="90.3521%" y="453" width="0.9315%" height="15" fill="rgb(241,121,31)" fg:x="15971584765" fg:w="164656097"/><text x="90.6021%" y="463.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::reduce128 (92,493,134 samples, 0.52%)</title><rect x="90.7603%" y="437" width="0.5232%" height="15" fill="rgb(232,40,11)" fg:x="16043747728" fg:w="92493134"/><text x="91.0103%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (48,404,703 samples, 0.27%)</title><rect x="91.0097%" y="421" width="0.2738%" height="15" fill="rgb(205,86,26)" fg:x="16087836159" fg:w="48404703"/><text x="91.2597%" y="431.50"></text></g><g><title>flatbuffers::builder::FlatBufferBuilder&lt;A&gt;::push_slot (2,167,121 samples, 0.01%)</title><rect x="91.2835%" y="453" width="0.0123%" height="15" fill="rgb(231,126,28)" fg:x="16136240862" fg:w="2167121"/><text x="91.5335%" y="463.50"></text></g><g><title>flatbuffers::builder::FlatBufferBuilder&lt;A&gt;::write_vtable (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="453" width="0.0134%" height="15" fill="rgb(219,221,18)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="463.50"></text></g><g><title>flatbuffers::builder::get_vtable_byte_len (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="437" width="0.0134%" height="15" fill="rgb(211,40,0)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="421" width="0.0134%" height="15" fill="rgb(239,85,43)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="405" width="0.0134%" height="15" fill="rgb(231,55,21)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="389" width="0.0134%" height="15" fill="rgb(225,184,43)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="373" width="0.0134%" height="15" fill="rgb(251,158,41)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="357" width="0.0134%" height="15" fill="rgb(234,159,37)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="341" width="0.0134%" height="15" fill="rgb(216,204,22)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::_{{closure}} (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="325" width="0.0134%" height="15" fill="rgb(214,17,3)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="335.50"></text></g><g><title>core::cmp::max_by (2,376,735 samples, 0.01%)</title><rect x="91.2958%" y="309" width="0.0134%" height="15" fill="rgb(212,111,17)" fg:x="16138407983" fg:w="2376735"/><text x="91.5458%" y="319.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (2,983,727 samples, 0.02%)</title><rect x="91.3092%" y="453" width="0.0169%" height="15" fill="rgb(221,157,24)" fg:x="16140784718" fg:w="2983727"/><text x="91.5592%" y="463.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (2,983,727 samples, 0.02%)</title><rect x="91.3092%" y="437" width="0.0169%" height="15" fill="rgb(252,16,13)" fg:x="16140784718" fg:w="2983727"/><text x="91.5592%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2,983,727 samples, 0.02%)</title><rect x="91.3092%" y="421" width="0.0169%" height="15" fill="rgb(221,62,2)" fg:x="16140784718" fg:w="2983727"/><text x="91.5592%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_or (2,983,727 samples, 0.02%)</title><rect x="91.3092%" y="405" width="0.0169%" height="15" fill="rgb(247,87,22)" fg:x="16140784718" fg:w="2983727"/><text x="91.5592%" y="415.50"></text></g><g><title>h2::codec::framed_read::decode_frame (3,753,606 samples, 0.02%)</title><rect x="91.3261%" y="453" width="0.0212%" height="15" fill="rgb(215,73,9)" fg:x="16143768445" fg:w="3753606"/><text x="91.5761%" y="463.50"></text></g><g><title>tracing::span::Span::enter (3,753,606 samples, 0.02%)</title><rect x="91.3261%" y="437" width="0.0212%" height="15" fill="rgb(207,175,33)" fg:x="16143768445" fg:w="3753606"/><text x="91.5761%" y="447.50"></text></g><g><title>tracing::span::Span::do_enter (3,753,606 samples, 0.02%)</title><rect x="91.3261%" y="421" width="0.0212%" height="15" fill="rgb(243,129,54)" fg:x="16143768445" fg:w="3753606"/><text x="91.5761%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3,753,606 samples, 0.02%)</title><rect x="91.3261%" y="405" width="0.0212%" height="15" fill="rgb(227,119,45)" fg:x="16143768445" fg:w="3753606"/><text x="91.5761%" y="415.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::reclaim_frame (4,280,707 samples, 0.02%)</title><rect x="91.3560%" y="453" width="0.0242%" height="15" fill="rgb(205,109,36)" fg:x="16149059282" fg:w="4280707"/><text x="91.6060%" y="463.50"></text></g><g><title>tracing::__macro_support::__disabled_span (2,544,964 samples, 0.01%)</title><rect x="91.3659%" y="437" width="0.0144%" height="15" fill="rgb(205,6,39)" fg:x="16150795025" fg:w="2544964"/><text x="91.6159%" y="447.50"></text></g><g><title>tracing::span::Span::new_disabled (2,544,964 samples, 0.01%)</title><rect x="91.3659%" y="421" width="0.0144%" height="15" fill="rgb(221,32,16)" fg:x="16150795025" fg:w="2544964"/><text x="91.6159%" y="431.50"></text></g><g><title>h2::proto::streams::recv::Recv::consume_connection_window (3,728,949 samples, 0.02%)</title><rect x="91.3803%" y="453" width="0.0211%" height="15" fill="rgb(228,144,50)" fg:x="16153339989" fg:w="3728949"/><text x="91.6303%" y="463.50"></text></g><g><title>h2::proto::streams::send::Send::poll_reset (3,050,554 samples, 0.02%)</title><rect x="91.4108%" y="453" width="0.0173%" height="15" fill="rgb(229,201,53)" fg:x="16158733419" fg:w="3050554"/><text x="91.6608%" y="463.50"></text></g><g><title>h2::proto::streams::state::State::recv_open::__CALLSITE (4,216,391 samples, 0.02%)</title><rect x="91.4280%" y="453" width="0.0239%" height="15" fill="rgb(249,153,27)" fg:x="16161783973" fg:w="4216391"/><text x="91.6780%" y="463.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (4,216,391 samples, 0.02%)</title><rect x="91.4280%" y="437" width="0.0239%" height="15" fill="rgb(227,106,25)" fg:x="16161783973" fg:w="4216391"/><text x="91.6780%" y="447.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (3,128,364 samples, 0.02%)</title><rect x="91.4519%" y="453" width="0.0177%" height="15" fill="rgb(230,65,29)" fg:x="16166000364" fg:w="3128364"/><text x="91.7019%" y="463.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::clear_expired_reset_streams (3,858,268 samples, 0.02%)</title><rect x="91.4696%" y="453" width="0.0218%" height="15" fill="rgb(221,57,46)" fg:x="16169128728" fg:w="3858268"/><text x="91.7196%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,858,268 samples, 0.02%)</title><rect x="91.4696%" y="437" width="0.0218%" height="15" fill="rgb(229,161,17)" fg:x="16169128728" fg:w="3858268"/><text x="91.7196%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,858,268 samples, 0.02%)</title><rect x="91.4696%" y="421" width="0.0218%" height="15" fill="rgb(222,213,11)" fg:x="16169128728" fg:w="3858268"/><text x="91.7196%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,858,268 samples, 0.02%)</title><rect x="91.4696%" y="405" width="0.0218%" height="15" fill="rgb(235,35,13)" fg:x="16169128728" fg:w="3858268"/><text x="91.7196%" y="415.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::next_incoming (3,582,494 samples, 0.02%)</title><rect x="91.4914%" y="453" width="0.0203%" height="15" fill="rgb(233,158,34)" fg:x="16172986996" fg:w="3582494"/><text x="91.7414%" y="463.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (3,626,102 samples, 0.02%)</title><rect x="91.5158%" y="453" width="0.0205%" height="15" fill="rgb(215,151,48)" fg:x="16177291631" fg:w="3626102"/><text x="91.7658%" y="463.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (3,626,102 samples, 0.02%)</title><rect x="91.5158%" y="437" width="0.0205%" height="15" fill="rgb(229,84,14)" fg:x="16177291631" fg:w="3626102"/><text x="91.7658%" y="447.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as indexmap::Entries&gt;::as_entries (3,626,102 samples, 0.02%)</title><rect x="91.5158%" y="421" width="0.0205%" height="15" fill="rgb(229,68,14)" fg:x="16177291631" fg:w="3626102"/><text x="91.7658%" y="431.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;K,V&gt; as indexmap::Entries&gt;::as_entries (3,626,102 samples, 0.02%)</title><rect x="91.5158%" y="405" width="0.0205%" height="15" fill="rgb(243,106,26)" fg:x="16177291631" fg:w="3626102"/><text x="91.7658%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,626,102 samples, 0.02%)</title><rect x="91.5158%" y="389" width="0.0205%" height="15" fill="rgb(206,45,38)" fg:x="16177291631" fg:w="3626102"/><text x="91.7658%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,626,102 samples, 0.02%)</title><rect x="91.5158%" y="373" width="0.0205%" height="15" fill="rgb(226,6,15)" fg:x="16177291631" fg:w="3626102"/><text x="91.7658%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,074,630 samples, 0.01%)</title><rect x="91.5458%" y="389" width="0.0117%" height="15" fill="rgb(232,22,54)" fg:x="16182595206" fg:w="2074630"/><text x="91.7958%" y="399.50"></text></g><g><title>arrow_ipc::writer::IpcDataGenerator::encoded_batch (4,526,224 samples, 0.03%)</title><rect x="91.5458%" y="421" width="0.0256%" height="15" fill="rgb(229,222,32)" fg:x="16182595206" fg:w="4526224"/><text x="91.7958%" y="431.50"></text></g><g><title>arrow_ipc::writer::IpcDataGenerator::record_batch_to_bytes (4,526,224 samples, 0.03%)</title><rect x="91.5458%" y="405" width="0.0256%" height="15" fill="rgb(228,62,29)" fg:x="16182595206" fg:w="4526224"/><text x="91.7958%" y="415.50"></text></g><g><title>arrow_ipc::writer::write_array_data (2,451,594 samples, 0.01%)</title><rect x="91.5575%" y="389" width="0.0139%" height="15" fill="rgb(251,103,34)" fg:x="16184669836" fg:w="2451594"/><text x="91.8075%" y="399.50"></text></g><g><title>poros::core::utils::transformers::serialize_record_batch_full_ipc (8,434,127 samples, 0.05%)</title><rect x="91.5458%" y="453" width="0.0477%" height="15" fill="rgb(233,12,30)" fg:x="16182595206" fg:w="8434127"/><text x="91.7958%" y="463.50"></text></g><g><title>arrow_ipc::writer::StreamWriter&lt;W&gt;::write (8,434,127 samples, 0.05%)</title><rect x="91.5458%" y="437" width="0.0477%" height="15" fill="rgb(238,52,0)" fg:x="16182595206" fg:w="8434127"/><text x="91.7958%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;arrow_ipc::writer::EncodedData&gt;&gt; (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="421" width="0.0221%" height="15" fill="rgb(223,98,5)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="405" width="0.0221%" height="15" fill="rgb(228,75,37)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;arrow_ipc::writer::EncodedData,alloc::alloc::Global&gt;&gt; (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="389" width="0.0221%" height="15" fill="rgb(205,115,49)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="373" width="0.0221%" height="15" fill="rgb(250,154,43)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;arrow_ipc::writer::EncodedData&gt;&gt; (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="357" width="0.0221%" height="15" fill="rgb(226,43,29)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="341" width="0.0221%" height="15" fill="rgb(249,228,39)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="325" width="0.0221%" height="15" fill="rgb(216,79,43)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="309" width="0.0221%" height="15" fill="rgb(228,95,12)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="293" width="0.0221%" height="15" fill="rgb(249,221,15)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="303.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3,907,903 samples, 0.02%)</title><rect x="91.5714%" y="277" width="0.0221%" height="15" fill="rgb(233,34,13)" fg:x="16187121430" fg:w="3907903"/><text x="91.8214%" y="287.50"></text></g><g><title>prost::encoding::varint::decode_varint (3,201,911 samples, 0.02%)</title><rect x="91.5935%" y="453" width="0.0181%" height="15" fill="rgb(214,103,39)" fg:x="16191029333" fg:w="3201911"/><text x="91.8435%" y="463.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::advance (3,201,911 samples, 0.02%)</title><rect x="91.5935%" y="437" width="0.0181%" height="15" fill="rgb(251,126,39)" fg:x="16191029333" fg:w="3201911"/><text x="91.8435%" y="447.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::advance (3,201,911 samples, 0.02%)</title><rect x="91.5935%" y="421" width="0.0181%" height="15" fill="rgb(214,216,36)" fg:x="16191029333" fg:w="3201911"/><text x="91.8435%" y="431.50"></text></g><g><title>&lt;tonic::codec::buffer::DecodeBuf as bytes::buf::buf_impl::Buf&gt;::advance (3,201,911 samples, 0.02%)</title><rect x="91.5935%" y="405" width="0.0181%" height="15" fill="rgb(220,221,8)" fg:x="16191029333" fg:w="3201911"/><text x="91.8435%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (81,468,974 samples, 0.46%)</title><rect x="93.0002%" y="405" width="0.4609%" height="15" fill="rgb(240,216,3)" fg:x="16439697205" fg:w="81468974"/><text x="93.2502%" y="415.50"></text></g><g><title>regex::regex::string::Regex::static_captures_len (89,211,912 samples, 0.50%)</title><rect x="93.0002%" y="437" width="0.5047%" height="15" fill="rgb(232,218,17)" fg:x="16439697205" fg:w="89211912"/><text x="93.2502%" y="447.50"></text></g><g><title>regex_automata::meta::regex::Regex::static_captures_len (89,211,912 samples, 0.50%)</title><rect x="93.0002%" y="421" width="0.5047%" height="15" fill="rgb(229,163,45)" fg:x="16439697205" fg:w="89211912"/><text x="93.2502%" y="431.50"></text></g><g><title>regex_syntax::hir::Properties::static_explicit_captures_len (7,742,938 samples, 0.04%)</title><rect x="93.4611%" y="405" width="0.0438%" height="15" fill="rgb(231,110,42)" fg:x="16521166179" fg:w="7742938"/><text x="93.7111%" y="415.50"></text></g><g><title>regex_automata::meta::regex::Regex::create_captures (38,152,041 samples, 0.22%)</title><rect x="93.5049%" y="437" width="0.2158%" height="15" fill="rgb(208,170,48)" fg:x="16528909117" fg:w="38152041"/><text x="93.7549%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (23,405,075 samples, 0.13%)</title><rect x="93.8311%" y="405" width="0.1324%" height="15" fill="rgb(239,116,25)" fg:x="16586576666" fg:w="23405075"/><text x="94.0811%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (7,820,195 samples, 0.04%)</title><rect x="93.9193%" y="389" width="0.0442%" height="15" fill="rgb(219,200,50)" fg:x="16602161546" fg:w="7820195"/><text x="94.1693%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7,820,195 samples, 0.04%)</title><rect x="93.9193%" y="373" width="0.0442%" height="15" fill="rgb(245,200,0)" fg:x="16602161546" fg:w="7820195"/><text x="94.1693%" y="383.50"></text></g><g><title>&lt;regex_automata::util::pool::PoolGuard&lt;T,F&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7,798,936 samples, 0.04%)</title><rect x="93.9635%" y="405" width="0.0441%" height="15" fill="rgb(245,119,33)" fg:x="16609981741" fg:w="7798936"/><text x="94.2135%" y="415.50"></text></g><g><title>regex_automata::util::pool::inner::PoolGuard&lt;T,F&gt;::value_mut (7,798,936 samples, 0.04%)</title><rect x="93.9635%" y="389" width="0.0441%" height="15" fill="rgb(231,125,12)" fg:x="16609981741" fg:w="7798936"/><text x="94.2135%" y="399.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (7,798,936 samples, 0.04%)</title><rect x="93.9635%" y="373" width="0.0441%" height="15" fill="rgb(216,96,41)" fg:x="16609981741" fg:w="7798936"/><text x="94.2135%" y="383.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::is_impossible (38,655,726 samples, 0.22%)</title><rect x="94.0076%" y="405" width="0.2187%" height="15" fill="rgb(248,43,45)" fg:x="16617780677" fg:w="38655726"/><text x="94.2576%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (3,835,450 samples, 0.02%)</title><rect x="94.2921%" y="373" width="0.0217%" height="15" fill="rgb(217,222,7)" fg:x="16668059444" fg:w="3835450"/><text x="94.5421%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_store (3,835,450 samples, 0.02%)</title><rect x="94.2921%" y="357" width="0.0217%" height="15" fill="rgb(233,28,6)" fg:x="16668059444" fg:w="3835450"/><text x="94.5421%" y="367.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::guard_owned (15,579,341 samples, 0.09%)</title><rect x="94.3137%" y="373" width="0.0881%" height="15" fill="rgb(231,218,15)" fg:x="16671894894" fg:w="15579341"/><text x="94.5637%" y="383.50"></text></g><g><title>regex_automata::util::pool::Pool&lt;T,F&gt;::get (42,551,155 samples, 0.24%)</title><rect x="94.2263%" y="405" width="0.2407%" height="15" fill="rgb(226,171,48)" fg:x="16656436403" fg:w="42551155"/><text x="94.4763%" y="415.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get (42,551,155 samples, 0.24%)</title><rect x="94.2263%" y="389" width="0.2407%" height="15" fill="rgb(235,201,9)" fg:x="16656436403" fg:w="42551155"/><text x="94.4763%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,513,323 samples, 0.07%)</title><rect x="94.4019%" y="373" width="0.0651%" height="15" fill="rgb(217,80,15)" fg:x="16687474235" fg:w="11513323"/><text x="94.6519%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,513,323 samples, 0.07%)</title><rect x="94.4019%" y="357" width="0.0651%" height="15" fill="rgb(219,152,8)" fg:x="16687474235" fg:w="11513323"/><text x="94.6519%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11,513,323 samples, 0.07%)</title><rect x="94.4019%" y="341" width="0.0651%" height="15" fill="rgb(243,107,38)" fg:x="16687474235" fg:w="11513323"/><text x="94.6519%" y="351.50"></text></g><g><title>regex_automata::util::pool::inner::THREAD_ID::_{{constant}}::_{{closure}} (11,513,323 samples, 0.07%)</title><rect x="94.4019%" y="325" width="0.0651%" height="15" fill="rgb(231,17,5)" fg:x="16687474235" fg:w="11513323"/><text x="94.6519%" y="335.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (11,513,323 samples, 0.07%)</title><rect x="94.4019%" y="309" width="0.0651%" height="15" fill="rgb(209,25,54)" fg:x="16687474235" fg:w="11513323"/><text x="94.6519%" y="319.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots (166,238,036 samples, 0.94%)</title><rect x="93.7207%" y="421" width="0.9404%" height="15" fill="rgb(219,0,2)" fg:x="16567061158" fg:w="166238036"/><text x="93.9707%" y="431.50"></text></g><g><title>regex_automata::util::pool::PoolGuard&lt;T,F&gt;::put (34,311,636 samples, 0.19%)</title><rect x="94.4670%" y="405" width="0.1941%" height="15" fill="rgb(246,9,5)" fg:x="16698987558" fg:w="34311636"/><text x="94.7170%" y="415.50"></text></g><g><title>regex_automata::util::pool::inner::PoolGuard&lt;T,F&gt;::put (34,311,636 samples, 0.19%)</title><rect x="94.4670%" y="389" width="0.1941%" height="15" fill="rgb(226,159,4)" fg:x="16698987558" fg:w="34311636"/><text x="94.7170%" y="399.50"></text></g><g><title>regex_automata::util::pool::inner::PoolGuard&lt;T,F&gt;::put_imp (34,311,636 samples, 0.19%)</title><rect x="94.4670%" y="373" width="0.1941%" height="15" fill="rgb(219,175,34)" fg:x="16698987558" fg:w="34311636"/><text x="94.7170%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (27,221,801 samples, 0.15%)</title><rect x="94.5071%" y="357" width="0.1540%" height="15" fill="rgb(236,10,46)" fg:x="16706077393" fg:w="27221801"/><text x="94.7571%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_store (27,221,801 samples, 0.15%)</title><rect x="94.5071%" y="341" width="0.1540%" height="15" fill="rgb(240,211,16)" fg:x="16706077393" fg:w="27221801"/><text x="94.7571%" y="351.50"></text></g><g><title>regex::regex::string::Regex::captures_at (542,836,108 samples, 3.07%)</title><rect x="91.6116%" y="453" width="3.0709%" height="15" fill="rgb(205,3,43)" fg:x="16194231244" fg:w="542836108"/><text x="91.8616%" y="463.50">reg..</text></g><g><title>regex_automata::meta::regex::Regex::search_captures (170,006,194 samples, 0.96%)</title><rect x="93.7207%" y="437" width="0.9617%" height="15" fill="rgb(245,7,22)" fg:x="16567061158" fg:w="170006194"/><text x="93.9707%" y="447.50"></text></g><g><title>regex_automata::util::captures::Captures::set_pattern (3,768,158 samples, 0.02%)</title><rect x="94.6611%" y="421" width="0.0213%" height="15" fill="rgb(239,132,32)" fg:x="16733299194" fg:w="3768158"/><text x="94.9111%" y="431.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots (19,393,561 samples, 0.11%)</title><rect x="94.6824%" y="453" width="0.1097%" height="15" fill="rgb(228,202,34)" fg:x="16737067352" fg:w="19393561"/><text x="94.9324%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::has_empty (11,757,486 samples, 0.07%)</title><rect x="94.7256%" y="437" width="0.0665%" height="15" fill="rgb(254,200,22)" fg:x="16744703427" fg:w="11757486"/><text x="94.9756%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11,757,486 samples, 0.07%)</title><rect x="94.7256%" y="421" width="0.0665%" height="15" fill="rgb(219,10,39)" fg:x="16744703427" fg:w="11757486"/><text x="94.9756%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (11,757,486 samples, 0.07%)</title><rect x="94.7256%" y="405" width="0.0665%" height="15" fill="rgb(226,210,39)" fg:x="16744703427" fg:w="11757486"/><text x="94.9756%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (11,757,486 samples, 0.07%)</title><rect x="94.7256%" y="389" width="0.0665%" height="15" fill="rgb(208,219,16)" fg:x="16744703427" fg:w="11757486"/><text x="94.9756%" y="399.50"></text></g><g><title>regex_automata::dfa::onepass::Epsilons::slots (42,205,240 samples, 0.24%)</title><rect x="94.9450%" y="421" width="0.2388%" height="15" fill="rgb(216,158,51)" fg:x="16783485903" fg:w="42205240"/><text x="95.1950%" y="431.50"></text></g><g><title>regex_automata::dfa::onepass::Slots::apply (19,535,364 samples, 0.11%)</title><rect x="95.1838%" y="421" width="0.1105%" height="15" fill="rgb(233,14,44)" fg:x="16825691143" fg:w="19535364"/><text x="95.4338%" y="431.50"></text></g><g><title>&lt;regex_automata::dfa::onepass::SlotsIter as core::iter::traits::iterator::Iterator&gt;::next (7,823,066 samples, 0.04%)</title><rect x="95.2500%" y="405" width="0.0443%" height="15" fill="rgb(237,97,39)" fg:x="16837403441" fg:w="7823066"/><text x="95.5000%" y="415.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots_imp (96,398,811 samples, 0.55%)</title><rect x="94.7921%" y="453" width="0.5453%" height="15" fill="rgb(218,198,43)" fg:x="16756460913" fg:w="96398811"/><text x="95.0421%" y="463.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::search_imp (69,373,821 samples, 0.39%)</title><rect x="94.9450%" y="437" width="0.3925%" height="15" fill="rgb(231,104,20)" fg:x="16783485903" fg:w="69373821"/><text x="95.1950%" y="447.50"></text></g><g><title>regex_automata::util::look::LookMatcher::matches_set_inline (7,633,217 samples, 0.04%)</title><rect x="95.2943%" y="421" width="0.0432%" height="15" fill="rgb(254,36,13)" fg:x="16845226507" fg:w="7633217"/><text x="95.5443%" y="431.50"></text></g><g><title>&lt;regex_automata::util::captures::GroupInfo as core::clone::Clone&gt;::clone (162,736,096 samples, 0.92%)</title><rect x="95.5512%" y="437" width="0.9206%" height="15" fill="rgb(248,14,50)" fg:x="16890646230" fg:w="162736096"/><text x="95.8012%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (162,736,096 samples, 0.92%)</title><rect x="95.5512%" y="421" width="0.9206%" height="15" fill="rgb(217,107,29)" fg:x="16890646230" fg:w="162736096"/><text x="95.8012%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11,546,031 samples, 0.07%)</title><rect x="96.4065%" y="405" width="0.0653%" height="15" fill="rgb(251,169,33)" fg:x="17041836295" fg:w="11546031"/><text x="96.6565%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (11,546,031 samples, 0.07%)</title><rect x="96.4065%" y="389" width="0.0653%" height="15" fill="rgb(217,108,32)" fg:x="17041836295" fg:w="11546031"/><text x="96.6565%" y="399.50"></text></g><g><title>regex_automata::meta::regex::Regex::group_info (27,116,982 samples, 0.15%)</title><rect x="96.4718%" y="437" width="0.1534%" height="15" fill="rgb(219,66,42)" fg:x="17053382326" fg:w="27116982"/><text x="96.7218%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (27,116,982 samples, 0.15%)</title><rect x="96.4718%" y="421" width="0.1534%" height="15" fill="rgb(206,180,7)" fg:x="17053382326" fg:w="27116982"/><text x="96.7218%" y="431.50"></text></g><g><title>regex_automata::meta::regex::Regex::create_captures (239,225,655 samples, 1.35%)</title><rect x="95.3375%" y="453" width="1.3533%" height="15" fill="rgb(208,226,31)" fg:x="16852859724" fg:w="239225655"/><text x="95.5875%" y="463.50"></text></g><g><title>regex_automata::util::captures::Captures::all (11,586,071 samples, 0.07%)</title><rect x="96.6252%" y="437" width="0.0655%" height="15" fill="rgb(218,26,49)" fg:x="17080499308" fg:w="11586071"/><text x="96.8752%" y="447.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::slot_len (11,586,071 samples, 0.07%)</title><rect x="96.6252%" y="421" width="0.0655%" height="15" fill="rgb(233,197,48)" fg:x="17080499308" fg:w="11586071"/><text x="96.8752%" y="431.50"></text></g><g><title>regex_automata::util::captures::GroupInfoInner::small_slot_len (11,586,071 samples, 0.07%)</title><rect x="96.6252%" y="405" width="0.0655%" height="15" fill="rgb(252,181,51)" fg:x="17080499308" fg:w="11586071"/><text x="96.8752%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11,586,071 samples, 0.07%)</title><rect x="96.6252%" y="389" width="0.0655%" height="15" fill="rgb(253,90,19)" fg:x="17080499308" fg:w="11586071"/><text x="96.8752%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (11,586,071 samples, 0.07%)</title><rect x="96.6252%" y="373" width="0.0655%" height="15" fill="rgb(215,171,30)" fg:x="17080499308" fg:w="11586071"/><text x="96.8752%" y="383.50"></text></g><g><title>regex_automata::meta::wrappers::OnePass::get (15,590,890 samples, 0.09%)</title><rect x="96.9079%" y="437" width="0.0882%" height="15" fill="rgb(214,222,9)" fg:x="17130460997" fg:w="15590890"/><text x="97.1579%" y="447.50"></text></g><g><title>regex_automata::util::search::Anchored::is_anchored (15,590,890 samples, 0.09%)</title><rect x="96.9079%" y="421" width="0.0882%" height="15" fill="rgb(223,3,22)" fg:x="17130460997" fg:w="15590890"/><text x="97.1579%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3,904,137 samples, 0.02%)</title><rect x="96.9961%" y="421" width="0.0221%" height="15" fill="rgb(225,196,46)" fg:x="17146051887" fg:w="3904137"/><text x="97.2461%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (23,037,833 samples, 0.13%)</title><rect x="97.0182%" y="421" width="0.1303%" height="15" fill="rgb(209,110,37)" fg:x="17149956024" fg:w="23037833"/><text x="97.2682%" y="431.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (84,826,593 samples, 0.48%)</title><rect x="96.6908%" y="453" width="0.4799%" height="15" fill="rgb(249,89,12)" fg:x="17092085379" fg:w="84826593"/><text x="96.9408%" y="463.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::search_slots (30,860,085 samples, 0.17%)</title><rect x="96.9961%" y="437" width="0.1746%" height="15" fill="rgb(226,27,33)" fg:x="17146051887" fg:w="30860085"/><text x="97.2461%" y="447.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots (3,918,115 samples, 0.02%)</title><rect x="97.1485%" y="421" width="0.0222%" height="15" fill="rgb(213,82,22)" fg:x="17172993857" fg:w="3918115"/><text x="97.3985%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (3,681,035 samples, 0.02%)</title><rect x="97.1707%" y="453" width="0.0208%" height="15" fill="rgb(248,140,0)" fg:x="17176911972" fg:w="3681035"/><text x="97.4207%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (69,677,449 samples, 0.39%)</title><rect x="97.5655%" y="405" width="0.3942%" height="15" fill="rgb(228,106,3)" fg:x="17246701774" fg:w="69677449"/><text x="97.8155%" y="415.50"></text></g><g><title>core::ptr::write (69,677,449 samples, 0.39%)</title><rect x="97.5655%" y="389" width="0.3942%" height="15" fill="rgb(209,23,37)" fg:x="17246701774" fg:w="69677449"/><text x="97.8155%" y="399.50"></text></g><g><title>__memset_avx2_unaligned_erms (58,202,097 samples, 0.33%)</title><rect x="97.6304%" y="373" width="0.3293%" height="15" fill="rgb(241,93,50)" fg:x="17258177126" fg:w="58202097"/><text x="97.8804%" y="383.50"></text></g><g><title>alloc::vec::from_elem (273,714,270 samples, 1.55%)</title><rect x="97.5655%" y="437" width="1.5484%" height="15" fill="rgb(253,46,43)" fg:x="17246701774" fg:w="273714270"/><text x="97.8155%" y="447.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (273,714,270 samples, 1.55%)</title><rect x="97.5655%" y="421" width="1.5484%" height="15" fill="rgb(226,206,43)" fg:x="17246701774" fg:w="273714270"/><text x="97.8155%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (204,036,821 samples, 1.15%)</title><rect x="97.9596%" y="405" width="1.1542%" height="15" fill="rgb(217,54,7)" fg:x="17316379223" fg:w="204036821"/><text x="98.2096%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (204,036,821 samples, 1.15%)</title><rect x="97.9596%" y="389" width="1.1542%" height="15" fill="rgb(223,5,52)" fg:x="17316379223" fg:w="204036821"/><text x="98.2096%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (204,036,821 samples, 1.15%)</title><rect x="97.9596%" y="373" width="1.1542%" height="15" fill="rgb(206,52,46)" fg:x="17316379223" fg:w="204036821"/><text x="98.2096%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (204,036,821 samples, 1.15%)</title><rect x="97.9596%" y="357" width="1.1542%" height="15" fill="rgb(253,136,11)" fg:x="17316379223" fg:w="204036821"/><text x="98.2096%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (184,733,482 samples, 1.05%)</title><rect x="98.0688%" y="341" width="1.0450%" height="15" fill="rgb(208,106,33)" fg:x="17335682562" fg:w="184733482"/><text x="98.3188%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (184,733,482 samples, 1.05%)</title><rect x="98.0688%" y="325" width="1.0450%" height="15" fill="rgb(206,54,4)" fg:x="17335682562" fg:w="184733482"/><text x="98.3188%" y="335.50"></text></g><g><title>alloc::alloc::alloc (184,733,482 samples, 1.05%)</title><rect x="98.0688%" y="309" width="1.0450%" height="15" fill="rgb(213,3,15)" fg:x="17335682562" fg:w="184733482"/><text x="98.3188%" y="319.50"></text></g><g><title>malloc (173,028,833 samples, 0.98%)</title><rect x="98.1350%" y="293" width="0.9788%" height="15" fill="rgb(252,211,39)" fg:x="17347387211" fg:w="173028833"/><text x="98.3850%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (3,903,161 samples, 0.02%)</title><rect x="99.1139%" y="405" width="0.0221%" height="15" fill="rgb(223,6,36)" fg:x="17520416044" fg:w="3903161"/><text x="99.3639%" y="415.50"></text></g><g><title>regex_automata::util::captures::Captures::all (366,800,704 samples, 2.08%)</title><rect x="97.1915%" y="453" width="2.0750%" height="15" fill="rgb(252,169,45)" fg:x="17180593007" fg:w="366800704"/><text x="97.4415%" y="463.50">r..</text></g><g><title>regex_automata::util::captures::GroupInfo::slot_len (26,977,667 samples, 0.15%)</title><rect x="99.1139%" y="437" width="0.1526%" height="15" fill="rgb(212,48,26)" fg:x="17520416044" fg:w="26977667"/><text x="99.3639%" y="447.50"></text></g><g><title>regex_automata::util::captures::GroupInfoInner::small_slot_len (26,977,667 samples, 0.15%)</title><rect x="99.1139%" y="421" width="0.1526%" height="15" fill="rgb(251,102,48)" fg:x="17520416044" fg:w="26977667"/><text x="99.3639%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (23,074,506 samples, 0.13%)</title><rect x="99.1360%" y="405" width="0.1305%" height="15" fill="rgb(243,208,16)" fg:x="17524319205" fg:w="23074506"/><text x="99.3860%" y="415.50"></text></g><g><title>regex_automata::util::captures::Captures::group_len (46,342,261 samples, 0.26%)</title><rect x="99.2665%" y="453" width="0.2622%" height="15" fill="rgb(219,96,24)" fg:x="17547393711" fg:w="46342261"/><text x="99.5165%" y="463.50"></text></g><g><title>regex_automata::util::captures::GroupInfo::group_len (11,666,397 samples, 0.07%)</title><rect x="99.4627%" y="437" width="0.0660%" height="15" fill="rgb(219,33,29)" fg:x="17582069575" fg:w="11666397"/><text x="99.7127%" y="447.50"></text></g><g><title>regex_automata::util::captures::GroupInfoInner::group_len (11,666,397 samples, 0.07%)</title><rect x="99.4627%" y="421" width="0.0660%" height="15" fill="rgb(223,176,5)" fg:x="17582069575" fg:w="11666397"/><text x="99.7127%" y="431.50"></text></g><g><title>regex_automata::util::captures::Captures::iter (7,810,496 samples, 0.04%)</title><rect x="99.5287%" y="453" width="0.0442%" height="15" fill="rgb(228,140,14)" fg:x="17593735972" fg:w="7810496"/><text x="99.7787%" y="463.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::new (3,685,192 samples, 0.02%)</title><rect x="99.5728%" y="453" width="0.0208%" height="15" fill="rgb(217,179,31)" fg:x="17601546468" fg:w="3685192"/><text x="99.8228%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (3,679,317 samples, 0.02%)</title><rect x="99.5937%" y="453" width="0.0208%" height="15" fill="rgb(230,9,30)" fg:x="17605231660" fg:w="3679317"/><text x="99.8437%" y="463.50"></text></g><g><title>sqlx_sqlite::options::connect::&lt;impl sqlx_core::connection::ConnectOptions for sqlx_sqlite::options::SqliteConnectOptions&gt;::connect::{{closure}} (2,001,224 samples, 0.01%)</title><rect x="99.6232%" y="453" width="0.0113%" height="15" fill="rgb(230,136,20)" fg:x="17610442230" fg:w="2001224"/><text x="99.8732%" y="463.50"></text></g><g><title>sqlx_sqlite::connection::SqliteConnection::establish::_{{closure}} (2,001,224 samples, 0.01%)</title><rect x="99.6232%" y="437" width="0.0113%" height="15" fill="rgb(215,210,22)" fg:x="17610442230" fg:w="2001224"/><text x="99.8732%" y="447.50"></text></g><g><title>sqlx_sqlite::connection::worker::ConnectionWorker::establish::_{{closure}} (2,001,224 samples, 0.01%)</title><rect x="99.6232%" y="421" width="0.0113%" height="15" fill="rgb(218,43,5)" fg:x="17610442230" fg:w="2001224"/><text x="99.8732%" y="431.50"></text></g><g><title>&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (2,001,224 samples, 0.01%)</title><rect x="99.6232%" y="405" width="0.0113%" height="15" fill="rgb(216,11,5)" fg:x="17610442230" fg:w="2001224"/><text x="99.8732%" y="415.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::recv (2,001,224 samples, 0.01%)</title><rect x="99.6232%" y="389" width="0.0113%" height="15" fill="rgb(209,82,29)" fg:x="17610442230" fg:w="2001224"/><text x="99.8732%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,762,594 samples, 0.02%)</title><rect x="99.6505%" y="453" width="0.0213%" height="15" fill="rgb(244,115,12)" fg:x="17615277381" fg:w="3762594"/><text x="99.9005%" y="463.50"></text></g><g><title>std::time::Instant::now (2,474,553 samples, 0.01%)</title><rect x="99.6718%" y="453" width="0.0140%" height="15" fill="rgb(222,82,18)" fg:x="17619039975" fg:w="2474553"/><text x="99.9218%" y="463.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="453" width="0.1213%" height="15" fill="rgb(249,227,8)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="463.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="437" width="0.1213%" height="15" fill="rgb(253,141,45)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="447.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="421" width="0.1213%" height="15" fill="rgb(234,184,4)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="431.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="405" width="0.1213%" height="15" fill="rgb(218,194,23)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="415.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="389" width="0.1213%" height="15" fill="rgb(235,66,41)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="399.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="373" width="0.1213%" height="15" fill="rgb(245,217,1)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="383.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::read (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="357" width="0.1213%" height="15" fill="rgb(229,91,1)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="367.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="341" width="0.1213%" height="15" fill="rgb(207,101,30)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="351.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="325" width="0.1213%" height="15" fill="rgb(223,82,49)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="335.50"></text></g><g><title>__libc_recv (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="309" width="0.1213%" height="15" fill="rgb(218,167,17)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="319.50"></text></g><g><title>__syscall_cancel (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="293" width="0.1213%" height="15" fill="rgb(208,103,14)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="303.50"></text></g><g><title>__internal_syscall_cancel (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="277" width="0.1213%" height="15" fill="rgb(238,20,8)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="287.50"></text></g><g><title>__syscall_cancel_arch_end (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="261" width="0.1213%" height="15" fill="rgb(218,80,54)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="271.50"></text></g><g><title>[unknown] (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="245" width="0.1213%" height="15" fill="rgb(240,144,17)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="255.50"></text></g><g><title>[unknown] (21,446,062 samples, 0.12%)</title><rect x="99.6858%" y="229" width="0.1213%" height="15" fill="rgb(245,27,50)" fg:x="17621514528" fg:w="21446062"/><text x="99.9358%" y="239.50"></text></g><g><title>[unknown] (17,983,345 samples, 0.10%)</title><rect x="99.7054%" y="213" width="0.1017%" height="15" fill="rgb(251,51,7)" fg:x="17624977245" fg:w="17983345"/><text x="99.9554%" y="223.50"></text></g><g><title>[unknown] (17,983,345 samples, 0.10%)</title><rect x="99.7054%" y="197" width="0.1017%" height="15" fill="rgb(245,217,29)" fg:x="17624977245" fg:w="17983345"/><text x="99.9554%" y="207.50"></text></g><g><title>[unknown] (15,106,007 samples, 0.09%)</title><rect x="99.7217%" y="181" width="0.0855%" height="15" fill="rgb(221,176,29)" fg:x="17627854583" fg:w="15106007"/><text x="99.9717%" y="191.50"></text></g><g><title>[unknown] (15,106,007 samples, 0.09%)</title><rect x="99.7217%" y="165" width="0.0855%" height="15" fill="rgb(212,180,24)" fg:x="17627854583" fg:w="15106007"/><text x="99.9717%" y="175.50"></text></g><g><title>[unknown] (15,106,007 samples, 0.09%)</title><rect x="99.7217%" y="149" width="0.0855%" height="15" fill="rgb(254,24,2)" fg:x="17627854583" fg:w="15106007"/><text x="99.9717%" y="159.50"></text></g><g><title>[unknown] (15,106,007 samples, 0.09%)</title><rect x="99.7217%" y="133" width="0.0855%" height="15" fill="rgb(230,100,2)" fg:x="17627854583" fg:w="15106007"/><text x="99.9717%" y="143.50"></text></g><g><title>[unknown] (13,908,326 samples, 0.08%)</title><rect x="99.7284%" y="117" width="0.0787%" height="15" fill="rgb(219,142,25)" fg:x="17629052264" fg:w="13908326"/><text x="99.9784%" y="127.50"></text></g><g><title>[unknown] (13,908,326 samples, 0.08%)</title><rect x="99.7284%" y="101" width="0.0787%" height="15" fill="rgb(240,73,43)" fg:x="17629052264" fg:w="13908326"/><text x="99.9784%" y="111.50"></text></g><g><title>[unknown] (10,495,635 samples, 0.06%)</title><rect x="99.7477%" y="85" width="0.0594%" height="15" fill="rgb(214,114,15)" fg:x="17632464955" fg:w="10495635"/><text x="99.9977%" y="95.50"></text></g><g><title>[unknown] (10,495,635 samples, 0.06%)</title><rect x="99.7477%" y="69" width="0.0594%" height="15" fill="rgb(207,130,4)" fg:x="17632464955" fg:w="10495635"/><text x="99.9977%" y="79.50"></text></g><g><title>[unknown] (1,929,612 samples, 0.01%)</title><rect x="99.7962%" y="53" width="0.0109%" height="15" fill="rgb(221,25,40)" fg:x="17641030978" fg:w="1929612"/><text x="100.0462%" y="63.50"></text></g><g><title>[unknown] (1,929,612 samples, 0.01%)</title><rect x="99.7962%" y="37" width="0.0109%" height="15" fill="rgb(241,184,7)" fg:x="17641030978" fg:w="1929612"/><text x="100.0462%" y="47.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (2,152,040 samples, 0.01%)</title><rect x="99.8071%" y="453" width="0.0122%" height="15" fill="rgb(235,159,4)" fg:x="17642960590" fg:w="2152040"/><text x="100.0571%" y="463.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (2,152,040 samples, 0.01%)</title><rect x="99.8071%" y="437" width="0.0122%" height="15" fill="rgb(214,87,48)" fg:x="17642960590" fg:w="2152040"/><text x="100.0571%" y="447.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (2,013,549 samples, 0.01%)</title><rect x="99.8197%" y="453" width="0.0114%" height="15" fill="rgb(246,198,24)" fg:x="17645189488" fg:w="2013549"/><text x="100.0697%" y="463.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (2,013,549 samples, 0.01%)</title><rect x="99.8197%" y="437" width="0.0114%" height="15" fill="rgb(209,66,40)" fg:x="17645189488" fg:w="2013549"/><text x="100.0697%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3,920,041 samples, 0.02%)</title><rect x="99.8311%" y="453" width="0.0222%" height="15" fill="rgb(233,147,39)" fg:x="17647203037" fg:w="3920041"/><text x="100.0811%" y="463.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,920,041 samples, 0.02%)</title><rect x="99.8311%" y="437" width="0.0222%" height="15" fill="rgb(231,145,52)" fg:x="17647203037" fg:w="3920041"/><text x="100.0811%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (3,920,041 samples, 0.02%)</title><rect x="99.8311%" y="421" width="0.0222%" height="15" fill="rgb(206,20,26)" fg:x="17647203037" fg:w="3920041"/><text x="100.0811%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (3,920,041 samples, 0.02%)</title><rect x="99.8311%" y="405" width="0.0222%" height="15" fill="rgb(238,220,4)" fg:x="17647203037" fg:w="3920041"/><text x="100.0811%" y="415.50"></text></g><g><title>&lt;actix::context_impl::ContextFut&lt;A,C&gt; as core::future::future::Future&gt;::poll (3,920,041 samples, 0.02%)</title><rect x="99.8311%" y="389" width="0.0222%" height="15" fill="rgb(252,195,42)" fg:x="17647203037" fg:w="3920041"/><text x="100.0811%" y="399.50"></text></g><g><title>&lt;actix::address::envelope::SyncEnvelopeProxy&lt;M&gt; as actix::address::envelope::EnvelopeProxy&lt;A&gt;&gt;::handle (3,920,041 samples, 0.02%)</title><rect x="99.8311%" y="373" width="0.0222%" height="15" fill="rgb(209,10,6)" fg:x="17647203037" fg:w="3920041"/><text x="100.0811%" y="383.50"></text></g><g><title>flatbuffers::builder::FlatBufferBuilder&lt;A&gt;::write_vtable (3,920,041 samples, 0.02%)</title><rect x="99.8311%" y="357" width="0.0222%" height="15" fill="rgb(229,3,52)" fg:x="17647203037" fg:w="3920041"/><text x="100.0811%" y="367.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2,016,465 samples, 0.01%)</title><rect x="99.8533%" y="453" width="0.0114%" height="15" fill="rgb(253,49,37)" fg:x="17651123078" fg:w="2016465"/><text x="100.1033%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4,805,107 samples, 0.03%)</title><rect x="99.8647%" y="453" width="0.0272%" height="15" fill="rgb(240,103,49)" fg:x="17653139543" fg:w="4805107"/><text x="100.1147%" y="463.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (1,840,473 samples, 0.01%)</title><rect x="99.8919%" y="437" width="0.0104%" height="15" fill="rgb(250,182,30)" fg:x="17657944650" fg:w="1840473"/><text x="100.1419%" y="447.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1,840,473 samples, 0.01%)</title><rect x="99.8919%" y="421" width="0.0104%" height="15" fill="rgb(248,8,30)" fg:x="17657944650" fg:w="1840473"/><text x="100.1419%" y="431.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (5,162,120 samples, 0.03%)</title><rect x="99.8919%" y="453" width="0.0292%" height="15" fill="rgb(237,120,30)" fg:x="17657944650" fg:w="5162120"/><text x="100.1419%" y="463.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (3,321,647 samples, 0.02%)</title><rect x="99.9023%" y="437" width="0.0188%" height="15" fill="rgb(221,146,34)" fg:x="17659785123" fg:w="3321647"/><text x="100.1523%" y="447.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (3,321,647 samples, 0.02%)</title><rect x="99.9023%" y="421" width="0.0188%" height="15" fill="rgb(242,55,13)" fg:x="17659785123" fg:w="3321647"/><text x="100.1523%" y="431.50"></text></g><g><title>tokio::time::clock::Clock::now (3,321,647 samples, 0.02%)</title><rect x="99.9023%" y="405" width="0.0188%" height="15" fill="rgb(242,112,31)" fg:x="17659785123" fg:w="3321647"/><text x="100.1523%" y="415.50"></text></g><g><title>tokio::time::clock::now (3,321,647 samples, 0.02%)</title><rect x="99.9023%" y="389" width="0.0188%" height="15" fill="rgb(249,192,27)" fg:x="17659785123" fg:w="3321647"/><text x="100.1523%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,321,647 samples, 0.02%)</title><rect x="99.9023%" y="373" width="0.0188%" height="15" fill="rgb(208,204,44)" fg:x="17659785123" fg:w="3321647"/><text x="100.1523%" y="383.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (3,321,647 samples, 0.02%)</title><rect x="99.9023%" y="357" width="0.0188%" height="15" fill="rgb(208,93,54)" fg:x="17659785123" fg:w="3321647"/><text x="100.1523%" y="367.50"></text></g><g><title>tokio::task::local::LocalSet::tick (2,249,466 samples, 0.01%)</title><rect x="99.9211%" y="453" width="0.0127%" height="15" fill="rgb(242,1,31)" fg:x="17663106770" fg:w="2249466"/><text x="100.1711%" y="463.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2,393,001 samples, 0.01%)</title><rect x="99.9338%" y="437" width="0.0135%" height="15" fill="rgb(241,83,25)" fg:x="17665356236" fg:w="2393001"/><text x="100.1838%" y="447.50"></text></g><g><title>poros (17,614,259,266 samples, 99.64%)</title><rect x="0.3399%" y="469" width="99.6448%" height="15" fill="rgb(205,169,50)" fg:x="60090959" fg:w="17614259266"/><text x="0.5899%" y="479.50">poros</text></g><g><title>tonic::codec::decode::StreamingInner::poll_frame (8,993,989 samples, 0.05%)</title><rect x="99.9338%" y="453" width="0.0509%" height="15" fill="rgb(239,186,37)" fg:x="17665356236" fg:w="8993989"/><text x="100.1838%" y="463.50"></text></g><g><title>http_body::frame::Frame&lt;T&gt;::into_data (6,600,988 samples, 0.04%)</title><rect x="99.9473%" y="437" width="0.0373%" height="15" fill="rgb(205,221,10)" fg:x="17667749237" fg:w="6600988"/><text x="100.1973%" y="447.50"></text></g><g><title>sqlx-sqlite-wor (2,321,275 samples, 0.01%)</title><rect x="99.9847%" y="469" width="0.0131%" height="15" fill="rgb(218,196,15)" fg:x="17674350225" fg:w="2321275"/><text x="100.2347%" y="479.50"></text></g><g><title>all (17,677,056,728 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(218,196,35)" fg:x="0" fg:w="17677056728"/><text x="0.2500%" y="495.50"></text></g></svg></svg>